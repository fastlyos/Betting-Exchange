//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BettingExchangeModel", "FK_LoginHistory_Members", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BetEx247.Data.Model.Member), "LoginHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BetEx247.Data.Model.LoginHistory), true)]
[assembly: EdmRelationshipAttribute("BettingExchangeModel", "FK_Messages_Members", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BetEx247.Data.Model.Member), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BetEx247.Data.Model.Message), true)]
[assembly: EdmRelationshipAttribute("BettingExchangeModel", "FK_MyCards_Members", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BetEx247.Data.Model.Member), "MyCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BetEx247.Data.Model.MyCard), true)]
[assembly: EdmRelationshipAttribute("BettingExchangeModel", "FK_MyWallet_Members", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BetEx247.Data.Model.Member), "MyWallet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BetEx247.Data.Model.MyWallet), true)]
[assembly: EdmRelationshipAttribute("BettingExchangeModel", "FK_Statements_Members", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BetEx247.Data.Model.Member), "Statement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BetEx247.Data.Model.Statement), true)]
[assembly: EdmRelationshipAttribute("BettingExchangeModel", "FK_Transactions_Members", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BetEx247.Data.Model.Member), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BetEx247.Data.Model.Transaction), true)]
[assembly: EdmRelationshipAttribute("BettingExchangeModel", "FK_MyCards_PaymentMethods", "PaymentMethod", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BetEx247.Data.Model.PaymentMethod), "MyCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BetEx247.Data.Model.MyCard), true)]

#endregion

namespace BetEx247.Data.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BetEXDataContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BetEXDataContainer object using the connection string found in the 'BetEXDataContainer' section of the application configuration file.
        /// </summary>
        public BetEXDataContainer() : base("name=BetEXDataContainer", "BetEXDataContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BetEXDataContainer object.
        /// </summary>
        public BetEXDataContainer(string connectionString) : base(connectionString, "BetEXDataContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BetEXDataContainer object.
        /// </summary>
        public BetEXDataContainer(EntityConnection connection) : base(connection, "BetEXDataContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BetStatu> BetStatus
        {
            get
            {
                if ((_BetStatus == null))
                {
                    _BetStatus = base.CreateObjectSet<BetStatu>("BetStatus");
                }
                return _BetStatus;
            }
        }
        private ObjectSet<BetStatu> _BetStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BookMaker> BookMakers
        {
            get
            {
                if ((_BookMakers == null))
                {
                    _BookMakers = base.CreateObjectSet<BookMaker>("BookMakers");
                }
                return _BookMakers;
            }
        }
        private ObjectSet<BookMaker> _BookMakers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CardsInfo> CardsInfoes
        {
            get
            {
                if ((_CardsInfoes == null))
                {
                    _CardsInfoes = base.CreateObjectSet<CardsInfo>("CardsInfoes");
                }
                return _CardsInfoes;
            }
        }
        private ObjectSet<CardsInfo> _CardsInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataControlStatu> DataControlStatus
        {
            get
            {
                if ((_DataControlStatus == null))
                {
                    _DataControlStatus = base.CreateObjectSet<DataControlStatu>("DataControlStatus");
                }
                return _DataControlStatus;
            }
        }
        private ObjectSet<DataControlStatu> _DataControlStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DiscountRate> DiscountRates
        {
            get
            {
                if ((_DiscountRates == null))
                {
                    _DiscountRates = base.CreateObjectSet<DiscountRate>("DiscountRates");
                }
                return _DiscountRates;
            }
        }
        private ObjectSet<DiscountRate> _DiscountRates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoginHistory> LoginHistories
        {
            get
            {
                if ((_LoginHistories == null))
                {
                    _LoginHistories = base.CreateObjectSet<LoginHistory>("LoginHistories");
                }
                return _LoginHistories;
            }
        }
        private ObjectSet<LoginHistory> _LoginHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MatchStatu> MatchStatus
        {
            get
            {
                if ((_MatchStatus == null))
                {
                    _MatchStatus = base.CreateObjectSet<MatchStatu>("MatchStatus");
                }
                return _MatchStatus;
            }
        }
        private ObjectSet<MatchStatu> _MatchStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Member> Members
        {
            get
            {
                if ((_Members == null))
                {
                    _Members = base.CreateObjectSet<Member>("Members");
                }
                return _Members;
            }
        }
        private ObjectSet<Member> _Members;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MyBet> MyBets
        {
            get
            {
                if ((_MyBets == null))
                {
                    _MyBets = base.CreateObjectSet<MyBet>("MyBets");
                }
                return _MyBets;
            }
        }
        private ObjectSet<MyBet> _MyBets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MyCard> MyCards
        {
            get
            {
                if ((_MyCards == null))
                {
                    _MyCards = base.CreateObjectSet<MyCard>("MyCards");
                }
                return _MyCards;
            }
        }
        private ObjectSet<MyCard> _MyCards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MyWallet> MyWallets
        {
            get
            {
                if ((_MyWallets == null))
                {
                    _MyWallets = base.CreateObjectSet<MyWallet>("MyWallets");
                }
                return _MyWallets;
            }
        }
        private ObjectSet<MyWallet> _MyWallets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentMethod> PaymentMethods
        {
            get
            {
                if ((_PaymentMethods == null))
                {
                    _PaymentMethods = base.CreateObjectSet<PaymentMethod>("PaymentMethods");
                }
                return _PaymentMethods;
            }
        }
        private ObjectSet<PaymentMethod> _PaymentMethods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Player> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Player>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Player> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScoreInfo> ScoreInfoes
        {
            get
            {
                if ((_ScoreInfoes == null))
                {
                    _ScoreInfoes = base.CreateObjectSet<ScoreInfo>("ScoreInfoes");
                }
                return _ScoreInfoes;
            }
        }
        private ObjectSet<ScoreInfo> _ScoreInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScoreTypeMST> ScoreTypeMSTs
        {
            get
            {
                if ((_ScoreTypeMSTs == null))
                {
                    _ScoreTypeMSTs = base.CreateObjectSet<ScoreTypeMST>("ScoreTypeMSTs");
                }
                return _ScoreTypeMSTs;
            }
        }
        private ObjectSet<ScoreTypeMST> _ScoreTypeMSTs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Soccer_AsianHandicap> Soccer_AsianHandicap
        {
            get
            {
                if ((_Soccer_AsianHandicap == null))
                {
                    _Soccer_AsianHandicap = base.CreateObjectSet<Soccer_AsianHandicap>("Soccer_AsianHandicap");
                }
                return _Soccer_AsianHandicap;
            }
        }
        private ObjectSet<Soccer_AsianHandicap> _Soccer_AsianHandicap;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Soccer_CorrectScores> Soccer_CorrectScores
        {
            get
            {
                if ((_Soccer_CorrectScores == null))
                {
                    _Soccer_CorrectScores = base.CreateObjectSet<Soccer_CorrectScores>("Soccer_CorrectScores");
                }
                return _Soccer_CorrectScores;
            }
        }
        private ObjectSet<Soccer_CorrectScores> _Soccer_CorrectScores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Soccer_DrawNoBet> Soccer_DrawNoBet
        {
            get
            {
                if ((_Soccer_DrawNoBet == null))
                {
                    _Soccer_DrawNoBet = base.CreateObjectSet<Soccer_DrawNoBet>("Soccer_DrawNoBet");
                }
                return _Soccer_DrawNoBet;
            }
        }
        private ObjectSet<Soccer_DrawNoBet> _Soccer_DrawNoBet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Soccer_MatchedBets> Soccer_MatchedBets
        {
            get
            {
                if ((_Soccer_MatchedBets == null))
                {
                    _Soccer_MatchedBets = base.CreateObjectSet<Soccer_MatchedBets>("Soccer_MatchedBets");
                }
                return _Soccer_MatchedBets;
            }
        }
        private ObjectSet<Soccer_MatchedBets> _Soccer_MatchedBets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Soccer_MatchOdds> Soccer_MatchOdds
        {
            get
            {
                if ((_Soccer_MatchOdds == null))
                {
                    _Soccer_MatchOdds = base.CreateObjectSet<Soccer_MatchOdds>("Soccer_MatchOdds");
                }
                return _Soccer_MatchOdds;
            }
        }
        private ObjectSet<Soccer_MatchOdds> _Soccer_MatchOdds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Soccer_TotalGoalsOE> Soccer_TotalGoalsOE
        {
            get
            {
                if ((_Soccer_TotalGoalsOE == null))
                {
                    _Soccer_TotalGoalsOE = base.CreateObjectSet<Soccer_TotalGoalsOE>("Soccer_TotalGoalsOE");
                }
                return _Soccer_TotalGoalsOE;
            }
        }
        private ObjectSet<Soccer_TotalGoalsOE> _Soccer_TotalGoalsOE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Soccer_TotalGoalsOU> Soccer_TotalGoalsOU
        {
            get
            {
                if ((_Soccer_TotalGoalsOU == null))
                {
                    _Soccer_TotalGoalsOU = base.CreateObjectSet<Soccer_TotalGoalsOU>("Soccer_TotalGoalsOU");
                }
                return _Soccer_TotalGoalsOU;
            }
        }
        private ObjectSet<Soccer_TotalGoalsOU> _Soccer_TotalGoalsOU;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Soccer_WinningMargin> Soccer_WinningMargin
        {
            get
            {
                if ((_Soccer_WinningMargin == null))
                {
                    _Soccer_WinningMargin = base.CreateObjectSet<Soccer_WinningMargin>("Soccer_WinningMargin");
                }
                return _Soccer_WinningMargin;
            }
        }
        private ObjectSet<Soccer_WinningMargin> _Soccer_WinningMargin;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SoccerCountry> SoccerCountries
        {
            get
            {
                if ((_SoccerCountries == null))
                {
                    _SoccerCountries = base.CreateObjectSet<SoccerCountry>("SoccerCountries");
                }
                return _SoccerCountries;
            }
        }
        private ObjectSet<SoccerCountry> _SoccerCountries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SoccerLeague> SoccerLeagues
        {
            get
            {
                if ((_SoccerLeagues == null))
                {
                    _SoccerLeagues = base.CreateObjectSet<SoccerLeague>("SoccerLeagues");
                }
                return _SoccerLeagues;
            }
        }
        private ObjectSet<SoccerLeague> _SoccerLeagues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SoccerMatch> SoccerMatches
        {
            get
            {
                if ((_SoccerMatches == null))
                {
                    _SoccerMatches = base.CreateObjectSet<SoccerMatch>("SoccerMatches");
                }
                return _SoccerMatches;
            }
        }
        private ObjectSet<SoccerMatch> _SoccerMatches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SportCountry> SportCountries
        {
            get
            {
                if ((_SportCountries == null))
                {
                    _SportCountries = base.CreateObjectSet<SportCountry>("SportCountries");
                }
                return _SportCountries;
            }
        }
        private ObjectSet<SportCountry> _SportCountries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SportLeague> SportLeagues
        {
            get
            {
                if ((_SportLeagues == null))
                {
                    _SportLeagues = base.CreateObjectSet<SportLeague>("SportLeagues");
                }
                return _SportLeagues;
            }
        }
        private ObjectSet<SportLeague> _SportLeagues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sport> Sports
        {
            get
            {
                if ((_Sports == null))
                {
                    _Sports = base.CreateObjectSet<Sport>("Sports");
                }
                return _Sports;
            }
        }
        private ObjectSet<Sport> _Sports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sports_AsianHandicap> Sports_AsianHandicap
        {
            get
            {
                if ((_Sports_AsianHandicap == null))
                {
                    _Sports_AsianHandicap = base.CreateObjectSet<Sports_AsianHandicap>("Sports_AsianHandicap");
                }
                return _Sports_AsianHandicap;
            }
        }
        private ObjectSet<Sports_AsianHandicap> _Sports_AsianHandicap;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sports_MatchedBets> Sports_MatchedBets
        {
            get
            {
                if ((_Sports_MatchedBets == null))
                {
                    _Sports_MatchedBets = base.CreateObjectSet<Sports_MatchedBets>("Sports_MatchedBets");
                }
                return _Sports_MatchedBets;
            }
        }
        private ObjectSet<Sports_MatchedBets> _Sports_MatchedBets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sports_MoneyLine> Sports_MoneyLine
        {
            get
            {
                if ((_Sports_MoneyLine == null))
                {
                    _Sports_MoneyLine = base.CreateObjectSet<Sports_MoneyLine>("Sports_MoneyLine");
                }
                return _Sports_MoneyLine;
            }
        }
        private ObjectSet<Sports_MoneyLine> _Sports_MoneyLine;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sports_Outright> Sports_Outright
        {
            get
            {
                if ((_Sports_Outright == null))
                {
                    _Sports_Outright = base.CreateObjectSet<Sports_Outright>("Sports_Outright");
                }
                return _Sports_Outright;
            }
        }
        private ObjectSet<Sports_Outright> _Sports_Outright;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sports_TotalOU> Sports_TotalOU
        {
            get
            {
                if ((_Sports_TotalOU == null))
                {
                    _Sports_TotalOU = base.CreateObjectSet<Sports_TotalOU>("Sports_TotalOU");
                }
                return _Sports_TotalOU;
            }
        }
        private ObjectSet<Sports_TotalOU> _Sports_TotalOU;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SportsMatch> SportsMatches
        {
            get
            {
                if ((_SportsMatches == null))
                {
                    _SportsMatches = base.CreateObjectSet<SportsMatch>("SportsMatches");
                }
                return _SportsMatches;
            }
        }
        private ObjectSet<SportsMatch> _SportsMatches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Statement> Statements
        {
            get
            {
                if ((_Statements == null))
                {
                    _Statements = base.CreateObjectSet<Statement>("Statements");
                }
                return _Statements;
            }
        }
        private ObjectSet<Statement> _Statements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transaction> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transaction>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transaction> _Transactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CardInfoListView> CardInfoListViews
        {
            get
            {
                if ((_CardInfoListViews == null))
                {
                    _CardInfoListViews = base.CreateObjectSet<CardInfoListView>("CardInfoListViews");
                }
                return _CardInfoListViews;
            }
        }
        private ObjectSet<CardInfoListView> _CardInfoListViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PSV_ALLTOURNAMENT> PSV_ALLTOURNAMENT
        {
            get
            {
                if ((_PSV_ALLTOURNAMENT == null))
                {
                    _PSV_ALLTOURNAMENT = base.CreateObjectSet<PSV_ALLTOURNAMENT>("PSV_ALLTOURNAMENT");
                }
                return _PSV_ALLTOURNAMENT;
            }
        }
        private ObjectSet<PSV_ALLTOURNAMENT> _PSV_ALLTOURNAMENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PSV_MATCHES> PSV_MATCHES
        {
            get
            {
                if ((_PSV_MATCHES == null))
                {
                    _PSV_MATCHES = base.CreateObjectSet<PSV_MATCHES>("PSV_MATCHES");
                }
                return _PSV_MATCHES;
            }
        }
        private ObjectSet<PSV_MATCHES> _PSV_MATCHES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PSV_MYBET> PSV_MYBET
        {
            get
            {
                if ((_PSV_MYBET == null))
                {
                    _PSV_MYBET = base.CreateObjectSet<PSV_MYBET>("PSV_MYBET");
                }
                return _PSV_MYBET;
            }
        }
        private ObjectSet<PSV_MYBET> _PSV_MYBET;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PSV_STATEMENTS> PSV_STATEMENTS
        {
            get
            {
                if ((_PSV_STATEMENTS == null))
                {
                    _PSV_STATEMENTS = base.CreateObjectSet<PSV_STATEMENTS>("PSV_STATEMENTS");
                }
                return _PSV_STATEMENTS;
            }
        }
        private ObjectSet<PSV_STATEMENTS> _PSV_STATEMENTS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PSV_TOP_EVENT> PSV_TOP_EVENT
        {
            get
            {
                if ((_PSV_TOP_EVENT == null))
                {
                    _PSV_TOP_EVENT = base.CreateObjectSet<PSV_TOP_EVENT>("PSV_TOP_EVENT");
                }
                return _PSV_TOP_EVENT;
            }
        }
        private ObjectSet<PSV_TOP_EVENT> _PSV_TOP_EVENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PSV_TRANSACTION> PSV_TRANSACTION
        {
            get
            {
                if ((_PSV_TRANSACTION == null))
                {
                    _PSV_TRANSACTION = base.CreateObjectSet<PSV_TRANSACTION>("PSV_TRANSACTION");
                }
                return _PSV_TRANSACTION;
            }
        }
        private ObjectSet<PSV_TRANSACTION> _PSV_TRANSACTION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScorerInfoListView> ScorerInfoListViews
        {
            get
            {
                if ((_ScorerInfoListViews == null))
                {
                    _ScorerInfoListViews = base.CreateObjectSet<ScorerInfoListView>("ScorerInfoListViews");
                }
                return _ScorerInfoListViews;
            }
        }
        private ObjectSet<ScorerInfoListView> _ScorerInfoListViews;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BetStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBetStatus(BetStatu betStatu)
        {
            base.AddObject("BetStatus", betStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BookMakers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBookMakers(BookMaker bookMaker)
        {
            base.AddObject("BookMakers", bookMaker);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CardsInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCardsInfoes(CardsInfo cardsInfo)
        {
            base.AddObject("CardsInfoes", cardsInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataControlStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataControlStatus(DataControlStatu dataControlStatu)
        {
            base.AddObject("DataControlStatus", dataControlStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DiscountRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiscountRates(DiscountRate discountRate)
        {
            base.AddObject("DiscountRates", discountRate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoginHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoginHistories(LoginHistory loginHistory)
        {
            base.AddObject("LoginHistories", loginHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MatchStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMatchStatus(MatchStatu matchStatu)
        {
            base.AddObject("MatchStatus", matchStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembers(Member member)
        {
            base.AddObject("Members", member);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MyBets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMyBets(MyBet myBet)
        {
            base.AddObject("MyBets", myBet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MyCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMyCards(MyCard myCard)
        {
            base.AddObject("MyCards", myCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MyWallets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMyWallets(MyWallet myWallet)
        {
            base.AddObject("MyWallets", myWallet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentMethods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentMethods(PaymentMethod paymentMethod)
        {
            base.AddObject("PaymentMethods", paymentMethod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Player player)
        {
            base.AddObject("Players", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScoreInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScoreInfoes(ScoreInfo scoreInfo)
        {
            base.AddObject("ScoreInfoes", scoreInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScoreTypeMSTs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScoreTypeMSTs(ScoreTypeMST scoreTypeMST)
        {
            base.AddObject("ScoreTypeMSTs", scoreTypeMST);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Soccer_AsianHandicap EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSoccer_AsianHandicap(Soccer_AsianHandicap soccer_AsianHandicap)
        {
            base.AddObject("Soccer_AsianHandicap", soccer_AsianHandicap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Soccer_CorrectScores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSoccer_CorrectScores(Soccer_CorrectScores soccer_CorrectScores)
        {
            base.AddObject("Soccer_CorrectScores", soccer_CorrectScores);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Soccer_DrawNoBet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSoccer_DrawNoBet(Soccer_DrawNoBet soccer_DrawNoBet)
        {
            base.AddObject("Soccer_DrawNoBet", soccer_DrawNoBet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Soccer_MatchedBets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSoccer_MatchedBets(Soccer_MatchedBets soccer_MatchedBets)
        {
            base.AddObject("Soccer_MatchedBets", soccer_MatchedBets);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Soccer_MatchOdds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSoccer_MatchOdds(Soccer_MatchOdds soccer_MatchOdds)
        {
            base.AddObject("Soccer_MatchOdds", soccer_MatchOdds);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Soccer_TotalGoalsOE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSoccer_TotalGoalsOE(Soccer_TotalGoalsOE soccer_TotalGoalsOE)
        {
            base.AddObject("Soccer_TotalGoalsOE", soccer_TotalGoalsOE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Soccer_TotalGoalsOU EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSoccer_TotalGoalsOU(Soccer_TotalGoalsOU soccer_TotalGoalsOU)
        {
            base.AddObject("Soccer_TotalGoalsOU", soccer_TotalGoalsOU);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Soccer_WinningMargin EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSoccer_WinningMargin(Soccer_WinningMargin soccer_WinningMargin)
        {
            base.AddObject("Soccer_WinningMargin", soccer_WinningMargin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SoccerCountries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSoccerCountries(SoccerCountry soccerCountry)
        {
            base.AddObject("SoccerCountries", soccerCountry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SoccerLeagues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSoccerLeagues(SoccerLeague soccerLeague)
        {
            base.AddObject("SoccerLeagues", soccerLeague);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SoccerMatches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSoccerMatches(SoccerMatch soccerMatch)
        {
            base.AddObject("SoccerMatches", soccerMatch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SportCountries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSportCountries(SportCountry sportCountry)
        {
            base.AddObject("SportCountries", sportCountry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SportLeagues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSportLeagues(SportLeague sportLeague)
        {
            base.AddObject("SportLeagues", sportLeague);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSports(Sport sport)
        {
            base.AddObject("Sports", sport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sports_AsianHandicap EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSports_AsianHandicap(Sports_AsianHandicap sports_AsianHandicap)
        {
            base.AddObject("Sports_AsianHandicap", sports_AsianHandicap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sports_MatchedBets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSports_MatchedBets(Sports_MatchedBets sports_MatchedBets)
        {
            base.AddObject("Sports_MatchedBets", sports_MatchedBets);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sports_MoneyLine EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSports_MoneyLine(Sports_MoneyLine sports_MoneyLine)
        {
            base.AddObject("Sports_MoneyLine", sports_MoneyLine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sports_Outright EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSports_Outright(Sports_Outright sports_Outright)
        {
            base.AddObject("Sports_Outright", sports_Outright);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sports_TotalOU EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSports_TotalOU(Sports_TotalOU sports_TotalOU)
        {
            base.AddObject("Sports_TotalOU", sports_TotalOU);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SportsMatches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSportsMatches(SportsMatch sportsMatch)
        {
            base.AddObject("SportsMatches", sportsMatch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Statements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatements(Statement statement)
        {
            base.AddObject("Statements", statement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactions(Transaction transaction)
        {
            base.AddObject("Transactions", transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CardInfoListViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCardInfoListViews(CardInfoListView cardInfoListView)
        {
            base.AddObject("CardInfoListViews", cardInfoListView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PSV_ALLTOURNAMENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPSV_ALLTOURNAMENT(PSV_ALLTOURNAMENT pSV_ALLTOURNAMENT)
        {
            base.AddObject("PSV_ALLTOURNAMENT", pSV_ALLTOURNAMENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PSV_MATCHES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPSV_MATCHES(PSV_MATCHES pSV_MATCHES)
        {
            base.AddObject("PSV_MATCHES", pSV_MATCHES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PSV_MYBET EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPSV_MYBET(PSV_MYBET pSV_MYBET)
        {
            base.AddObject("PSV_MYBET", pSV_MYBET);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PSV_STATEMENTS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPSV_STATEMENTS(PSV_STATEMENTS pSV_STATEMENTS)
        {
            base.AddObject("PSV_STATEMENTS", pSV_STATEMENTS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PSV_TOP_EVENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPSV_TOP_EVENT(PSV_TOP_EVENT pSV_TOP_EVENT)
        {
            base.AddObject("PSV_TOP_EVENT", pSV_TOP_EVENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PSV_TRANSACTION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPSV_TRANSACTION(PSV_TRANSACTION pSV_TRANSACTION)
        {
            base.AddObject("PSV_TRANSACTION", pSV_TRANSACTION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScorerInfoListViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScorerInfoListViews(ScorerInfoListView scorerInfoListView)
        {
            base.AddObject("ScorerInfoListViews", scorerInfoListView);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="memberId">No Metadata Documentation available.</param>
        /// <param name="where">No Metadata Documentation available.</param>
        /// <param name="pageNo">No Metadata Documentation available.</param>
        /// <param name="sRecordsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<PSV_MYBET> PSP_SEARCHMYBETS(Nullable<global::System.Int64> memberId, global::System.String where, Nullable<global::System.Int32> pageNo, Nullable<global::System.Int32> sRecordsPerPage)
        {
            ObjectParameter memberIdParameter;
            if (memberId.HasValue)
            {
                memberIdParameter = new ObjectParameter("memberId", memberId);
            }
            else
            {
                memberIdParameter = new ObjectParameter("memberId", typeof(global::System.Int64));
            }
    
            ObjectParameter whereParameter;
            if (where != null)
            {
                whereParameter = new ObjectParameter("where", where);
            }
            else
            {
                whereParameter = new ObjectParameter("where", typeof(global::System.String));
            }
    
            ObjectParameter pageNoParameter;
            if (pageNo.HasValue)
            {
                pageNoParameter = new ObjectParameter("pageNo", pageNo);
            }
            else
            {
                pageNoParameter = new ObjectParameter("pageNo", typeof(global::System.Int32));
            }
    
            ObjectParameter sRecordsPerPageParameter;
            if (sRecordsPerPage.HasValue)
            {
                sRecordsPerPageParameter = new ObjectParameter("sRecordsPerPage", sRecordsPerPage);
            }
            else
            {
                sRecordsPerPageParameter = new ObjectParameter("sRecordsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PSV_MYBET>("PSP_SEARCHMYBETS", memberIdParameter, whereParameter, pageNoParameter, sRecordsPerPageParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="memberId">No Metadata Documentation available.</param>
        /// <param name="where">No Metadata Documentation available.</param>
        /// <param name="pageNo">No Metadata Documentation available.</param>
        /// <param name="sRecordsPerPage">No Metadata Documentation available.</param>
        public ObjectResult<PSV_MYBET> PSP_SEARCHMYBETS(Nullable<global::System.Int64> memberId, global::System.String where, Nullable<global::System.Int32> pageNo, Nullable<global::System.Int32> sRecordsPerPage, MergeOption mergeOption)
        {
            ObjectParameter memberIdParameter;
            if (memberId.HasValue)
            {
                memberIdParameter = new ObjectParameter("memberId", memberId);
            }
            else
            {
                memberIdParameter = new ObjectParameter("memberId", typeof(global::System.Int64));
            }
    
            ObjectParameter whereParameter;
            if (where != null)
            {
                whereParameter = new ObjectParameter("where", where);
            }
            else
            {
                whereParameter = new ObjectParameter("where", typeof(global::System.String));
            }
    
            ObjectParameter pageNoParameter;
            if (pageNo.HasValue)
            {
                pageNoParameter = new ObjectParameter("pageNo", pageNo);
            }
            else
            {
                pageNoParameter = new ObjectParameter("pageNo", typeof(global::System.Int32));
            }
    
            ObjectParameter sRecordsPerPageParameter;
            if (sRecordsPerPage.HasValue)
            {
                sRecordsPerPageParameter = new ObjectParameter("sRecordsPerPage", sRecordsPerPage);
            }
            else
            {
                sRecordsPerPageParameter = new ObjectParameter("sRecordsPerPage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PSV_MYBET>("PSP_SEARCHMYBETS", mergeOption, memberIdParameter, whereParameter, pageNoParameter, sRecordsPerPageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="memberId">No Metadata Documentation available.</param>
        /// <param name="where">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> PSP_SEARCHMYBETSPAGESIZE(Nullable<global::System.Int64> memberId, global::System.String where)
        {
            ObjectParameter memberIdParameter;
            if (memberId.HasValue)
            {
                memberIdParameter = new ObjectParameter("memberId", memberId);
            }
            else
            {
                memberIdParameter = new ObjectParameter("memberId", typeof(global::System.Int64));
            }
    
            ObjectParameter whereParameter;
            if (where != null)
            {
                whereParameter = new ObjectParameter("where", where);
            }
            else
            {
                whereParameter = new ObjectParameter("where", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("PSP_SEARCHMYBETSPAGESIZE", memberIdParameter, whereParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="memberId">No Metadata Documentation available.</param>
        /// <param name="where">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> PSP_SEARCHSTATEMENTPAGESIZE(Nullable<global::System.Int64> memberId, global::System.String where)
        {
            ObjectParameter memberIdParameter;
            if (memberId.HasValue)
            {
                memberIdParameter = new ObjectParameter("memberId", memberId);
            }
            else
            {
                memberIdParameter = new ObjectParameter("memberId", typeof(global::System.Int64));
            }
    
            ObjectParameter whereParameter;
            if (where != null)
            {
                whereParameter = new ObjectParameter("where", where);
            }
            else
            {
                whereParameter = new ObjectParameter("where", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("PSP_SEARCHSTATEMENTPAGESIZE", memberIdParameter, whereParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="countryId">No Metadata Documentation available.</param>
        public ObjectResult<PSV_ALLTOURNAMENT> PSP_GETCOUNTLEAGUEBYCOUNTRY(Nullable<global::System.Int32> countryId)
        {
            ObjectParameter countryIdParameter;
            if (countryId.HasValue)
            {
                countryIdParameter = new ObjectParameter("countryId", countryId);
            }
            else
            {
                countryIdParameter = new ObjectParameter("countryId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PSV_ALLTOURNAMENT>("PSP_GETCOUNTLEAGUEBYCOUNTRY", countryIdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="countryId">No Metadata Documentation available.</param>
        public ObjectResult<PSV_ALLTOURNAMENT> PSP_GETCOUNTLEAGUEBYCOUNTRY(Nullable<global::System.Int32> countryId, MergeOption mergeOption)
        {
            ObjectParameter countryIdParameter;
            if (countryId.HasValue)
            {
                countryIdParameter = new ObjectParameter("countryId", countryId);
            }
            else
            {
                countryIdParameter = new ObjectParameter("countryId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PSV_ALLTOURNAMENT>("PSP_GETCOUNTLEAGUEBYCOUNTRY", mergeOption, countryIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="leagueId">No Metadata Documentation available.</param>
        /// <param name="cid">No Metadata Documentation available.</param>
        /// <param name="sid">No Metadata Documentation available.</param>
        public ObjectResult<SoccerCountry> PSP_GETCOUNTRYBYLEAGUE(Nullable<global::System.Int64> leagueId, Nullable<global::System.Int32> cid, Nullable<global::System.Int32> sid)
        {
            ObjectParameter leagueIdParameter;
            if (leagueId.HasValue)
            {
                leagueIdParameter = new ObjectParameter("leagueId", leagueId);
            }
            else
            {
                leagueIdParameter = new ObjectParameter("leagueId", typeof(global::System.Int64));
            }
    
            ObjectParameter cidParameter;
            if (cid.HasValue)
            {
                cidParameter = new ObjectParameter("cid", cid);
            }
            else
            {
                cidParameter = new ObjectParameter("cid", typeof(global::System.Int32));
            }
    
            ObjectParameter sidParameter;
            if (sid.HasValue)
            {
                sidParameter = new ObjectParameter("sid", sid);
            }
            else
            {
                sidParameter = new ObjectParameter("sid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SoccerCountry>("PSP_GETCOUNTRYBYLEAGUE", leagueIdParameter, cidParameter, sidParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="leagueId">No Metadata Documentation available.</param>
        /// <param name="cid">No Metadata Documentation available.</param>
        /// <param name="sid">No Metadata Documentation available.</param>
        public ObjectResult<SoccerCountry> PSP_GETCOUNTRYBYLEAGUE(Nullable<global::System.Int64> leagueId, Nullable<global::System.Int32> cid, Nullable<global::System.Int32> sid, MergeOption mergeOption)
        {
            ObjectParameter leagueIdParameter;
            if (leagueId.HasValue)
            {
                leagueIdParameter = new ObjectParameter("leagueId", leagueId);
            }
            else
            {
                leagueIdParameter = new ObjectParameter("leagueId", typeof(global::System.Int64));
            }
    
            ObjectParameter cidParameter;
            if (cid.HasValue)
            {
                cidParameter = new ObjectParameter("cid", cid);
            }
            else
            {
                cidParameter = new ObjectParameter("cid", typeof(global::System.Int32));
            }
    
            ObjectParameter sidParameter;
            if (sid.HasValue)
            {
                sidParameter = new ObjectParameter("sid", sid);
            }
            else
            {
                sidParameter = new ObjectParameter("sid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SoccerCountry>("PSP_GETCOUNTRYBYLEAGUE", mergeOption, leagueIdParameter, cidParameter, sidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="isSoccer">No Metadata Documentation available.</param>
        /// <param name="leagueId">No Metadata Documentation available.</param>
        /// <param name="cid">No Metadata Documentation available.</param>
        /// <param name="sid">No Metadata Documentation available.</param>
        /// <param name="day">No Metadata Documentation available.</param>
        public ObjectResult<PSV_MATCHES> PSP_UPCOMMINGMATCHES(Nullable<global::System.Boolean> isSoccer, Nullable<global::System.Int64> leagueId, Nullable<global::System.Int32> cid, Nullable<global::System.Int32> sid, Nullable<global::System.Int32> day)
        {
            ObjectParameter isSoccerParameter;
            if (isSoccer.HasValue)
            {
                isSoccerParameter = new ObjectParameter("isSoccer", isSoccer);
            }
            else
            {
                isSoccerParameter = new ObjectParameter("isSoccer", typeof(global::System.Boolean));
            }
    
            ObjectParameter leagueIdParameter;
            if (leagueId.HasValue)
            {
                leagueIdParameter = new ObjectParameter("leagueId", leagueId);
            }
            else
            {
                leagueIdParameter = new ObjectParameter("leagueId", typeof(global::System.Int64));
            }
    
            ObjectParameter cidParameter;
            if (cid.HasValue)
            {
                cidParameter = new ObjectParameter("cid", cid);
            }
            else
            {
                cidParameter = new ObjectParameter("cid", typeof(global::System.Int32));
            }
    
            ObjectParameter sidParameter;
            if (sid.HasValue)
            {
                sidParameter = new ObjectParameter("sid", sid);
            }
            else
            {
                sidParameter = new ObjectParameter("sid", typeof(global::System.Int32));
            }
    
            ObjectParameter dayParameter;
            if (day.HasValue)
            {
                dayParameter = new ObjectParameter("day", day);
            }
            else
            {
                dayParameter = new ObjectParameter("day", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PSV_MATCHES>("PSP_UPCOMMINGMATCHES", isSoccerParameter, leagueIdParameter, cidParameter, sidParameter, dayParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="isSoccer">No Metadata Documentation available.</param>
        /// <param name="leagueId">No Metadata Documentation available.</param>
        /// <param name="cid">No Metadata Documentation available.</param>
        /// <param name="sid">No Metadata Documentation available.</param>
        /// <param name="day">No Metadata Documentation available.</param>
        public ObjectResult<PSV_MATCHES> PSP_UPCOMMINGMATCHES(Nullable<global::System.Boolean> isSoccer, Nullable<global::System.Int64> leagueId, Nullable<global::System.Int32> cid, Nullable<global::System.Int32> sid, Nullable<global::System.Int32> day, MergeOption mergeOption)
        {
            ObjectParameter isSoccerParameter;
            if (isSoccer.HasValue)
            {
                isSoccerParameter = new ObjectParameter("isSoccer", isSoccer);
            }
            else
            {
                isSoccerParameter = new ObjectParameter("isSoccer", typeof(global::System.Boolean));
            }
    
            ObjectParameter leagueIdParameter;
            if (leagueId.HasValue)
            {
                leagueIdParameter = new ObjectParameter("leagueId", leagueId);
            }
            else
            {
                leagueIdParameter = new ObjectParameter("leagueId", typeof(global::System.Int64));
            }
    
            ObjectParameter cidParameter;
            if (cid.HasValue)
            {
                cidParameter = new ObjectParameter("cid", cid);
            }
            else
            {
                cidParameter = new ObjectParameter("cid", typeof(global::System.Int32));
            }
    
            ObjectParameter sidParameter;
            if (sid.HasValue)
            {
                sidParameter = new ObjectParameter("sid", sid);
            }
            else
            {
                sidParameter = new ObjectParameter("sid", typeof(global::System.Int32));
            }
    
            ObjectParameter dayParameter;
            if (day.HasValue)
            {
                dayParameter = new ObjectParameter("day", day);
            }
            else
            {
                dayParameter = new ObjectParameter("day", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PSV_MATCHES>("PSP_UPCOMMINGMATCHES", mergeOption, isSoccerParameter, leagueIdParameter, cidParameter, sidParameter, dayParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="isSoccer">No Metadata Documentation available.</param>
        /// <param name="sportId">No Metadata Documentation available.</param>
        /// <param name="countryId">No Metadata Documentation available.</param>
        public ObjectResult<SoccerMatch> PSP_LIVEINPLAYMATCHES(Nullable<global::System.Boolean> isSoccer, Nullable<global::System.Int32> sportId, Nullable<global::System.Int32> countryId)
        {
            ObjectParameter isSoccerParameter;
            if (isSoccer.HasValue)
            {
                isSoccerParameter = new ObjectParameter("isSoccer", isSoccer);
            }
            else
            {
                isSoccerParameter = new ObjectParameter("isSoccer", typeof(global::System.Boolean));
            }
    
            ObjectParameter sportIdParameter;
            if (sportId.HasValue)
            {
                sportIdParameter = new ObjectParameter("sportId", sportId);
            }
            else
            {
                sportIdParameter = new ObjectParameter("sportId", typeof(global::System.Int32));
            }
    
            ObjectParameter countryIdParameter;
            if (countryId.HasValue)
            {
                countryIdParameter = new ObjectParameter("countryId", countryId);
            }
            else
            {
                countryIdParameter = new ObjectParameter("countryId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SoccerMatch>("PSP_LIVEINPLAYMATCHES", isSoccerParameter, sportIdParameter, countryIdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="isSoccer">No Metadata Documentation available.</param>
        /// <param name="sportId">No Metadata Documentation available.</param>
        /// <param name="countryId">No Metadata Documentation available.</param>
        public ObjectResult<SoccerMatch> PSP_LIVEINPLAYMATCHES(Nullable<global::System.Boolean> isSoccer, Nullable<global::System.Int32> sportId, Nullable<global::System.Int32> countryId, MergeOption mergeOption)
        {
            ObjectParameter isSoccerParameter;
            if (isSoccer.HasValue)
            {
                isSoccerParameter = new ObjectParameter("isSoccer", isSoccer);
            }
            else
            {
                isSoccerParameter = new ObjectParameter("isSoccer", typeof(global::System.Boolean));
            }
    
            ObjectParameter sportIdParameter;
            if (sportId.HasValue)
            {
                sportIdParameter = new ObjectParameter("sportId", sportId);
            }
            else
            {
                sportIdParameter = new ObjectParameter("sportId", typeof(global::System.Int32));
            }
    
            ObjectParameter countryIdParameter;
            if (countryId.HasValue)
            {
                countryIdParameter = new ObjectParameter("countryId", countryId);
            }
            else
            {
                countryIdParameter = new ObjectParameter("countryId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SoccerMatch>("PSP_LIVEINPLAYMATCHES", mergeOption, isSoccerParameter, sportIdParameter, countryIdParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="BetStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BetStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BetStatu object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static BetStatu CreateBetStatu(global::System.Int16 id, global::System.String status)
        {
            BetStatu betStatu = new BetStatu();
            betStatu.ID = id;
            betStatu.Status = status;
            return betStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int16 _ID;
        partial void OnIDChanging(global::System.Int16 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="BookMaker")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BookMaker : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BookMaker object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="bookMaker1">Initial value of the BookMaker1 property.</param>
        public static BookMaker CreateBookMaker(global::System.Int32 id, global::System.String bookMaker1)
        {
            BookMaker bookMaker = new BookMaker();
            bookMaker.ID = id;
            bookMaker.BookMaker1 = bookMaker1;
            return bookMaker;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BookMaker1
        {
            get
            {
                return _BookMaker1;
            }
            set
            {
                OnBookMaker1Changing(value);
                ReportPropertyChanging("BookMaker1");
                _BookMaker1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BookMaker1");
                OnBookMaker1Changed();
            }
        }
        private global::System.String _BookMaker1;
        partial void OnBookMaker1Changing(global::System.String value);
        partial void OnBookMaker1Changed();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="CardInfoListView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CardInfoListView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CardInfoListView object.
        /// </summary>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="homeTeam">Initial value of the HomeTeam property.</param>
        /// <param name="awayTeam">Initial value of the AwayTeam property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static CardInfoListView CreateCardInfoListView(global::System.Guid matchID, global::System.String homeTeam, global::System.String awayTeam, global::System.Int64 leagueID, global::System.Int32 sportID, global::System.Int32 countryID)
        {
            CardInfoListView cardInfoListView = new CardInfoListView();
            cardInfoListView.MatchID = matchID;
            cardInfoListView.HomeTeam = homeTeam;
            cardInfoListView.AwayTeam = awayTeam;
            cardInfoListView.LeagueID = leagueID;
            cardInfoListView.SportID = sportID;
            cardInfoListView.CountryID = countryID;
            return cardInfoListView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                if (_MatchID != value)
                {
                    OnMatchIDChanging(value);
                    ReportPropertyChanging("MatchID");
                    _MatchID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MatchID");
                    OnMatchIDChanged();
                }
            }
        }
        private global::System.Guid _MatchID;
        partial void OnMatchIDChanging(global::System.Guid value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> HomeTeam_FTGoals
        {
            get
            {
                return _HomeTeam_FTGoals;
            }
            set
            {
                OnHomeTeam_FTGoalsChanging(value);
                ReportPropertyChanging("HomeTeam_FTGoals");
                _HomeTeam_FTGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeTeam_FTGoals");
                OnHomeTeam_FTGoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _HomeTeam_FTGoals;
        partial void OnHomeTeam_FTGoalsChanging(Nullable<global::System.Int16> value);
        partial void OnHomeTeam_FTGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> AwayTeam_FTGoals
        {
            get
            {
                return _AwayTeam_FTGoals;
            }
            set
            {
                OnAwayTeam_FTGoalsChanging(value);
                ReportPropertyChanging("AwayTeam_FTGoals");
                _AwayTeam_FTGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayTeam_FTGoals");
                OnAwayTeam_FTGoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _AwayTeam_FTGoals;
        partial void OnAwayTeam_FTGoalsChanging(Nullable<global::System.Int16> value);
        partial void OnAwayTeam_FTGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomeTeam
        {
            get
            {
                return _HomeTeam;
            }
            set
            {
                if (_HomeTeam != value)
                {
                    OnHomeTeamChanging(value);
                    ReportPropertyChanging("HomeTeam");
                    _HomeTeam = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HomeTeam");
                    OnHomeTeamChanged();
                }
            }
        }
        private global::System.String _HomeTeam;
        partial void OnHomeTeamChanging(global::System.String value);
        partial void OnHomeTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AwayTeam
        {
            get
            {
                return _AwayTeam;
            }
            set
            {
                if (_AwayTeam != value)
                {
                    OnAwayTeamChanging(value);
                    ReportPropertyChanging("AwayTeam");
                    _AwayTeam = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AwayTeam");
                    OnAwayTeamChanged();
                }
            }
        }
        private global::System.String _AwayTeam;
        partial void OnAwayTeamChanging(global::System.String value);
        partial void OnAwayTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MatchStatus
        {
            get
            {
                return _MatchStatus;
            }
            set
            {
                OnMatchStatusChanging(value);
                ReportPropertyChanging("MatchStatus");
                _MatchStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MatchStatus");
                OnMatchStatusChanged();
            }
        }
        private global::System.String _MatchStatus;
        partial void OnMatchStatusChanging(global::System.String value);
        partial void OnMatchStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                if (_LeagueID != value)
                {
                    OnLeagueIDChanging(value);
                    ReportPropertyChanging("LeagueID");
                    _LeagueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeagueID");
                    OnLeagueIDChanged();
                }
            }
        }
        private global::System.Int64 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int64 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                if (_SportID != value)
                {
                    OnSportIDChanging(value);
                    ReportPropertyChanging("SportID");
                    _SportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportID");
                    OnSportIDChanged();
                }
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDateTime;
        partial void OnStartDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CardType
        {
            get
            {
                return _CardType;
            }
            set
            {
                OnCardTypeChanging(value);
                ReportPropertyChanging("CardType");
                _CardType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardType");
                OnCardTypeChanged();
            }
        }
        private Nullable<global::System.Int16> _CardType;
        partial void OnCardTypeChanging(Nullable<global::System.Int16> value);
        partial void OnCardTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Player
        {
            get
            {
                return _Player;
            }
            set
            {
                OnPlayerChanging(value);
                ReportPropertyChanging("Player");
                _Player = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Player");
                OnPlayerChanged();
            }
        }
        private global::System.String _Player;
        partial void OnPlayerChanging(global::System.String value);
        partial void OnPlayerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BookedTime
        {
            get
            {
                return _BookedTime;
            }
            set
            {
                OnBookedTimeChanging(value);
                ReportPropertyChanging("BookedTime");
                _BookedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookedTime");
                OnBookedTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _BookedTime;
        partial void OnBookedTimeChanging(Nullable<global::System.Int32> value);
        partial void OnBookedTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="CardsInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CardsInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CardsInfo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        public static CardsInfo CreateCardsInfo(global::System.Int64 id, global::System.String matchID, global::System.Int32 leagueID, global::System.Int32 countryID, global::System.Int32 sportID)
        {
            CardsInfo cardsInfo = new CardsInfo();
            cardsInfo.ID = id;
            cardsInfo.MatchID = matchID;
            cardsInfo.LeagueID = leagueID;
            cardsInfo.CountryID = countryID;
            cardsInfo.SportID = sportID;
            return cardsInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CardType
        {
            get
            {
                return _CardType;
            }
            set
            {
                OnCardTypeChanging(value);
                ReportPropertyChanging("CardType");
                _CardType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardType");
                OnCardTypeChanged();
            }
        }
        private Nullable<global::System.Int16> _CardType;
        partial void OnCardTypeChanging(Nullable<global::System.Int16> value);
        partial void OnCardTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Player
        {
            get
            {
                return _Player;
            }
            set
            {
                OnPlayerChanging(value);
                ReportPropertyChanging("Player");
                _Player = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Player");
                OnPlayerChanged();
            }
        }
        private global::System.String _Player;
        partial void OnPlayerChanging(global::System.String value);
        partial void OnPlayerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BookedTime
        {
            get
            {
                return _BookedTime;
            }
            set
            {
                OnBookedTimeChanging(value);
                ReportPropertyChanging("BookedTime");
                _BookedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookedTime");
                OnBookedTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _BookedTime;
        partial void OnBookedTimeChanging(Nullable<global::System.Int32> value);
        partial void OnBookedTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="country1">Initial value of the Country1 property.</param>
        public static Country CreateCountry(global::System.Int64 id, global::System.String country1)
        {
            Country country = new Country();
            country.ID = id;
            country.Country1 = country1;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country1
        {
            get
            {
                return _Country1;
            }
            set
            {
                OnCountry1Changing(value);
                ReportPropertyChanging("Country1");
                _Country1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country1");
                OnCountry1Changed();
            }
        }
        private global::System.String _Country1;
        partial void OnCountry1Changing(global::System.String value);
        partial void OnCountry1Changed();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="DataControlStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataControlStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataControlStatu object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static DataControlStatu CreateDataControlStatu(global::System.Int64 id)
        {
            DataControlStatu dataControlStatu = new DataControlStatu();
            dataControlStatu.ID = id;
            return dataControlStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataObject
        {
            get
            {
                return _DataObject;
            }
            set
            {
                OnDataObjectChanging(value);
                ReportPropertyChanging("DataObject");
                _DataObject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataObject");
                OnDataObjectChanged();
            }
        }
        private global::System.String _DataObject;
        partial void OnDataObjectChanging(global::System.String value);
        partial void OnDataObjectChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="DiscountRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DiscountRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DiscountRate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="points">Initial value of the Points property.</param>
        /// <param name="discountRate1">Initial value of the DiscountRate1 property.</param>
        public static DiscountRate CreateDiscountRate(global::System.Int64 id, global::System.Int64 points, global::System.Int16 discountRate1)
        {
            DiscountRate discountRate = new DiscountRate();
            discountRate.ID = id;
            discountRate.Points = points;
            discountRate.DiscountRate1 = discountRate1;
            return discountRate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private global::System.Int64 _Points;
        partial void OnPointsChanging(global::System.Int64 value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 DiscountRate1
        {
            get
            {
                return _DiscountRate1;
            }
            set
            {
                OnDiscountRate1Changing(value);
                ReportPropertyChanging("DiscountRate1");
                _DiscountRate1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountRate1");
                OnDiscountRate1Changed();
            }
        }
        private global::System.Int16 _DiscountRate1;
        partial void OnDiscountRate1Changing(global::System.Int16 value);
        partial void OnDiscountRate1Changed();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="LoginHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoginHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoginHistory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="loginTime">Initial value of the LoginTime property.</param>
        public static LoginHistory CreateLoginHistory(global::System.Int64 id, global::System.DateTime loginTime)
        {
            LoginHistory loginHistory = new LoginHistory();
            loginHistory.ID = id;
            loginHistory.LoginTime = loginTime;
            return loginHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                OnMemberIDChanging(value);
                ReportPropertyChanging("MemberID");
                _MemberID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberID");
                OnMemberIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MemberID;
        partial void OnMemberIDChanging(Nullable<global::System.Int64> value);
        partial void OnMemberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LoginTime
        {
            get
            {
                return _LoginTime;
            }
            set
            {
                OnLoginTimeChanging(value);
                ReportPropertyChanging("LoginTime");
                _LoginTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginTime");
                OnLoginTimeChanged();
            }
        }
        private global::System.DateTime _LoginTime;
        partial void OnLoginTimeChanging(global::System.DateTime value);
        partial void OnLoginTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogoutTime
        {
            get
            {
                return _LogoutTime;
            }
            set
            {
                OnLogoutTimeChanging(value);
                ReportPropertyChanging("LogoutTime");
                _LogoutTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogoutTime");
                OnLogoutTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogoutTime;
        partial void OnLogoutTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLogoutTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Byte> _Status;
        partial void OnStatusChanging(Nullable<global::System.Byte> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IP
        {
            get
            {
                return _IP;
            }
            set
            {
                OnIPChanging(value);
                ReportPropertyChanging("IP");
                _IP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IP");
                OnIPChanged();
            }
        }
        private global::System.String _IP;
        partial void OnIPChanging(global::System.String value);
        partial void OnIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginFrom
        {
            get
            {
                return _LoginFrom;
            }
            set
            {
                OnLoginFromChanging(value);
                ReportPropertyChanging("LoginFrom");
                _LoginFrom = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoginFrom");
                OnLoginFromChanged();
            }
        }
        private global::System.String _LoginFrom;
        partial void OnLoginFromChanging(global::System.String value);
        partial void OnLoginFromChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_LoginHistory_Members", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_LoginHistory_Members", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_LoginHistory_Members", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_LoginHistory_Members", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("BettingExchangeModel.FK_LoginHistory_Members", "Member", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="MatchStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MatchStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MatchStatu object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static MatchStatu CreateMatchStatu(global::System.Int16 id, global::System.String status)
        {
            MatchStatu matchStatu = new MatchStatu();
            matchStatu.ID = id;
            matchStatu.Status = status;
            return matchStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int16 _ID;
        partial void OnIDChanging(global::System.Int16 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Member")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Member : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Member object.
        /// </summary>
        /// <param name="memberID">Initial value of the MemberID property.</param>
        /// <param name="nickName">Initial value of the NickName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="securityQuestion1">Initial value of the SecurityQuestion1 property.</param>
        /// <param name="securityQuestion2">Initial value of the SecurityQuestion2 property.</param>
        /// <param name="securityAnswer1">Initial value of the SecurityAnswer1 property.</param>
        /// <param name="securityAnswer2">Initial value of the SecurityAnswer2 property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="email1">Initial value of the Email1 property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        public static Member CreateMember(global::System.Int64 memberID, global::System.String nickName, global::System.String password, global::System.String securityQuestion1, global::System.String securityQuestion2, global::System.String securityAnswer1, global::System.String securityAnswer2, global::System.String firstName, global::System.String lastName, global::System.Int64 country, global::System.String email1, global::System.Boolean gender)
        {
            Member member = new Member();
            member.MemberID = memberID;
            member.NickName = nickName;
            member.Password = password;
            member.SecurityQuestion1 = securityQuestion1;
            member.SecurityQuestion2 = securityQuestion2;
            member.SecurityAnswer1 = securityAnswer1;
            member.SecurityAnswer2 = securityAnswer2;
            member.FirstName = firstName;
            member.LastName = lastName;
            member.Country = country;
            member.Email1 = email1;
            member.Gender = gender;
            return member;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                if (_MemberID != value)
                {
                    OnMemberIDChanging(value);
                    ReportPropertyChanging("MemberID");
                    _MemberID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberID");
                    OnMemberIDChanged();
                }
            }
        }
        private global::System.Int64 _MemberID;
        partial void OnMemberIDChanging(global::System.Int64 value);
        partial void OnMemberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityQuestion1
        {
            get
            {
                return _SecurityQuestion1;
            }
            set
            {
                OnSecurityQuestion1Changing(value);
                ReportPropertyChanging("SecurityQuestion1");
                _SecurityQuestion1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityQuestion1");
                OnSecurityQuestion1Changed();
            }
        }
        private global::System.String _SecurityQuestion1;
        partial void OnSecurityQuestion1Changing(global::System.String value);
        partial void OnSecurityQuestion1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityQuestion2
        {
            get
            {
                return _SecurityQuestion2;
            }
            set
            {
                OnSecurityQuestion2Changing(value);
                ReportPropertyChanging("SecurityQuestion2");
                _SecurityQuestion2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityQuestion2");
                OnSecurityQuestion2Changed();
            }
        }
        private global::System.String _SecurityQuestion2;
        partial void OnSecurityQuestion2Changing(global::System.String value);
        partial void OnSecurityQuestion2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityAnswer1
        {
            get
            {
                return _SecurityAnswer1;
            }
            set
            {
                OnSecurityAnswer1Changing(value);
                ReportPropertyChanging("SecurityAnswer1");
                _SecurityAnswer1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityAnswer1");
                OnSecurityAnswer1Changed();
            }
        }
        private global::System.String _SecurityAnswer1;
        partial void OnSecurityAnswer1Changing(global::System.String value);
        partial void OnSecurityAnswer1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityAnswer2
        {
            get
            {
                return _SecurityAnswer2;
            }
            set
            {
                OnSecurityAnswer2Changing(value);
                ReportPropertyChanging("SecurityAnswer2");
                _SecurityAnswer2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityAnswer2");
                OnSecurityAnswer2Changed();
            }
        }
        private global::System.String _SecurityAnswer2;
        partial void OnSecurityAnswer2Changing(global::System.String value);
        partial void OnSecurityAnswer2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.Int64 _Country;
        partial void OnCountryChanging(global::System.Int64 value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cellphone
        {
            get
            {
                return _Cellphone;
            }
            set
            {
                OnCellphoneChanging(value);
                ReportPropertyChanging("Cellphone");
                _Cellphone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cellphone");
                OnCellphoneChanged();
            }
        }
        private global::System.String _Cellphone;
        partial void OnCellphoneChanging(global::System.String value);
        partial void OnCellphoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email1
        {
            get
            {
                return _Email1;
            }
            set
            {
                OnEmail1Changing(value);
                ReportPropertyChanging("Email1");
                _Email1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email1");
                OnEmail1Changed();
            }
        }
        private global::System.String _Email1;
        partial void OnEmail1Changing(global::System.String value);
        partial void OnEmail1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email2
        {
            get
            {
                return _Email2;
            }
            set
            {
                OnEmail2Changing(value);
                ReportPropertyChanging("Email2");
                _Email2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email2");
                OnEmail2Changed();
            }
        }
        private global::System.String _Email2;
        partial void OnEmail2Changing(global::System.String value);
        partial void OnEmail2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.Boolean _Gender;
        partial void OnGenderChanging(global::System.Boolean value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suffix
        {
            get
            {
                return _Suffix;
            }
            set
            {
                OnSuffixChanging(value);
                ReportPropertyChanging("Suffix");
                _Suffix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suffix");
                OnSuffixChanged();
            }
        }
        private global::System.String _Suffix;
        partial void OnSuffixChanging(global::System.String value);
        partial void OnSuffixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalPoints
        {
            get
            {
                return _TotalPoints;
            }
            set
            {
                OnTotalPointsChanging(value);
                ReportPropertyChanging("TotalPoints");
                _TotalPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPoints");
                OnTotalPointsChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalPoints;
        partial void OnTotalPointsChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DiscountRate
        {
            get
            {
                return _DiscountRate;
            }
            set
            {
                OnDiscountRateChanging(value);
                ReportPropertyChanging("DiscountRate");
                _DiscountRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountRate");
                OnDiscountRateChanged();
            }
        }
        private Nullable<global::System.Int32> _DiscountRate;
        partial void OnDiscountRateChanging(Nullable<global::System.Int32> value);
        partial void OnDiscountRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdate
        {
            get
            {
                return _LastUpdate;
            }
            set
            {
                OnLastUpdateChanging(value);
                ReportPropertyChanging("LastUpdate");
                _LastUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdate");
                OnLastUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdate;
        partial void OnLastUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                OnLanguageChanging(value);
                ReportPropertyChanging("Language");
                _Language = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Language");
                OnLanguageChanged();
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BettingRegion
        {
            get
            {
                return _BettingRegion;
            }
            set
            {
                OnBettingRegionChanging(value);
                ReportPropertyChanging("BettingRegion");
                _BettingRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BettingRegion");
                OnBettingRegionChanged();
            }
        }
        private global::System.String _BettingRegion;
        partial void OnBettingRegionChanging(global::System.String value);
        partial void OnBettingRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Timezone
        {
            get
            {
                return _Timezone;
            }
            set
            {
                OnTimezoneChanging(value);
                ReportPropertyChanging("Timezone");
                _Timezone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timezone");
                OnTimezoneChanged();
            }
        }
        private global::System.String _Timezone;
        partial void OnTimezoneChanging(global::System.String value);
        partial void OnTimezoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private Nullable<global::System.Int16> _Currency;
        partial void OnCurrencyChanging(Nullable<global::System.Int16> value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AutoLogout
        {
            get
            {
                return _AutoLogout;
            }
            set
            {
                OnAutoLogoutChanging(value);
                ReportPropertyChanging("AutoLogout");
                _AutoLogout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoLogout");
                OnAutoLogoutChanged();
            }
        }
        private Nullable<global::System.Int32> _AutoLogout;
        partial void OnAutoLogoutChanging(Nullable<global::System.Int32> value);
        partial void OnAutoLogoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailFormat
        {
            get
            {
                return _EmailFormat;
            }
            set
            {
                OnEmailFormatChanging(value);
                ReportPropertyChanging("EmailFormat");
                _EmailFormat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailFormat");
                OnEmailFormatChanged();
            }
        }
        private global::System.String _EmailFormat;
        partial void OnEmailFormatChanging(global::System.String value);
        partial void OnEmailFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ExposureLimit
        {
            get
            {
                return _ExposureLimit;
            }
            set
            {
                OnExposureLimitChanging(value);
                ReportPropertyChanging("ExposureLimit");
                _ExposureLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExposureLimit");
                OnExposureLimitChanged();
            }
        }
        private Nullable<global::System.Double> _ExposureLimit;
        partial void OnExposureLimitChanging(Nullable<global::System.Double> value);
        partial void OnExposureLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PointsLastUpdateTime
        {
            get
            {
                return _PointsLastUpdateTime;
            }
            set
            {
                OnPointsLastUpdateTimeChanging(value);
                ReportPropertyChanging("PointsLastUpdateTime");
                _PointsLastUpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PointsLastUpdateTime");
                OnPointsLastUpdateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _PointsLastUpdateTime;
        partial void OnPointsLastUpdateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnPointsLastUpdateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddedDate
        {
            get
            {
                return _AddedDate;
            }
            set
            {
                OnAddedDateChanging(value);
                ReportPropertyChanging("AddedDate");
                _AddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedDate");
                OnAddedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddedDate;
        partial void OnAddedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Updatedate
        {
            get
            {
                return _Updatedate;
            }
            set
            {
                OnUpdatedateChanging(value);
                ReportPropertyChanging("Updatedate");
                _Updatedate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updatedate");
                OnUpdatedateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Updatedate;
        partial void OnUpdatedateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_LoginHistory_Members", "LoginHistory")]
        public EntityCollection<LoginHistory> LoginHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoginHistory>("BettingExchangeModel.FK_LoginHistory_Members", "LoginHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoginHistory>("BettingExchangeModel.FK_LoginHistory_Members", "LoginHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_Messages_Members", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("BettingExchangeModel.FK_Messages_Members", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("BettingExchangeModel.FK_Messages_Members", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_MyCards_Members", "MyCard")]
        public EntityCollection<MyCard> MyCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MyCard>("BettingExchangeModel.FK_MyCards_Members", "MyCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MyCard>("BettingExchangeModel.FK_MyCards_Members", "MyCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_MyWallet_Members", "MyWallet")]
        public EntityCollection<MyWallet> MyWallets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MyWallet>("BettingExchangeModel.FK_MyWallet_Members", "MyWallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MyWallet>("BettingExchangeModel.FK_MyWallet_Members", "MyWallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_Statements_Members", "Statement")]
        public EntityCollection<Statement> Statements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Statement>("BettingExchangeModel.FK_Statements_Members", "Statement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Statement>("BettingExchangeModel.FK_Statements_Members", "Statement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_Transactions_Members", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("BettingExchangeModel.FK_Transactions_Members", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("BettingExchangeModel.FK_Transactions_Members", "Transaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        public static Message CreateMessage(global::System.Int64 id, global::System.String subject, global::System.String body)
        {
            Message message = new Message();
            message.ID = id;
            message.Subject = subject;
            message.Body = body;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sender
        {
            get
            {
                return _Sender;
            }
            set
            {
                OnSenderChanging(value);
                ReportPropertyChanging("Sender");
                _Sender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sender");
                OnSenderChanged();
            }
        }
        private global::System.String _Sender;
        partial void OnSenderChanging(global::System.String value);
        partial void OnSenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reciepient
        {
            get
            {
                return _Reciepient;
            }
            set
            {
                OnReciepientChanging(value);
                ReportPropertyChanging("Reciepient");
                _Reciepient = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reciepient");
                OnReciepientChanged();
            }
        }
        private global::System.String _Reciepient;
        partial void OnReciepientChanging(global::System.String value);
        partial void OnReciepientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Header
        {
            get
            {
                return _Header;
            }
            set
            {
                OnHeaderChanging(value);
                ReportPropertyChanging("Header");
                _Header = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Header");
                OnHeaderChanged();
            }
        }
        private global::System.String _Header;
        partial void OnHeaderChanging(global::System.String value);
        partial void OnHeaderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Footer
        {
            get
            {
                return _Footer;
            }
            set
            {
                OnFooterChanging(value);
                ReportPropertyChanging("Footer");
                _Footer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Footer");
                OnFooterChanged();
            }
        }
        private global::System.String _Footer;
        partial void OnFooterChanging(global::System.String value);
        partial void OnFooterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MimeType
        {
            get
            {
                return _MimeType;
            }
            set
            {
                OnMimeTypeChanging(value);
                ReportPropertyChanging("MimeType");
                _MimeType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MimeType");
                OnMimeTypeChanged();
            }
        }
        private global::System.String _MimeType;
        partial void OnMimeTypeChanging(global::System.String value);
        partial void OnMimeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateSent
        {
            get
            {
                return _DateSent;
            }
            set
            {
                OnDateSentChanging(value);
                ReportPropertyChanging("DateSent");
                _DateSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSent");
                OnDateSentChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateSent;
        partial void OnDateSentChanging(Nullable<global::System.DateTime> value);
        partial void OnDateSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateReceived
        {
            get
            {
                return _DateReceived;
            }
            set
            {
                OnDateReceivedChanging(value);
                ReportPropertyChanging("DateReceived");
                _DateReceived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateReceived");
                OnDateReceivedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateReceived;
        partial void OnDateReceivedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int16> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int16> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private Nullable<global::System.Int16> _Type;
        partial void OnTypeChanging(Nullable<global::System.Int16> value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                OnMemberIDChanging(value);
                ReportPropertyChanging("MemberID");
                _MemberID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberID");
                OnMemberIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MemberID;
        partial void OnMemberIDChanging(Nullable<global::System.Int64> value);
        partial void OnMemberIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_Messages_Members", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_Messages_Members", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_Messages_Members", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_Messages_Members", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("BettingExchangeModel.FK_Messages_Members", "Member", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="MyBet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MyBet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MyBet object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="memberID">Initial value of the MemberID property.</param>
        /// <param name="marketID">Initial value of the MarketID property.</param>
        /// <param name="oddsTable">Initial value of the OddsTable property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="myEntrant">Initial value of the MyEntrant property.</param>
        /// <param name="bL">Initial value of the BL property.</param>
        /// <param name="isWon">Initial value of the IsWon property.</param>
        /// <param name="isDraw">Initial value of the IsDraw property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="stake">Initial value of the Stake property.</param>
        public static MyBet CreateMyBet(global::System.Guid id, global::System.Int64 memberID, global::System.String marketID, global::System.String oddsTable, global::System.String matchID, global::System.Int32 leagueID, global::System.Int32 countryID, global::System.Int32 sportID, global::System.Int16 myEntrant, global::System.String bL, global::System.Boolean isWon, global::System.Boolean isDraw, global::System.Decimal price, global::System.Decimal stake)
        {
            MyBet myBet = new MyBet();
            myBet.ID = id;
            myBet.MemberID = memberID;
            myBet.MarketID = marketID;
            myBet.OddsTable = oddsTable;
            myBet.MatchID = matchID;
            myBet.LeagueID = leagueID;
            myBet.CountryID = countryID;
            myBet.SportID = sportID;
            myBet.MyEntrant = myEntrant;
            myBet.BL = bL;
            myBet.IsWon = isWon;
            myBet.IsDraw = isDraw;
            myBet.Price = price;
            myBet.Stake = stake;
            return myBet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                OnMemberIDChanging(value);
                ReportPropertyChanging("MemberID");
                _MemberID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberID");
                OnMemberIDChanged();
            }
        }
        private global::System.Int64 _MemberID;
        partial void OnMemberIDChanging(global::System.Int64 value);
        partial void OnMemberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MarketID
        {
            get
            {
                return _MarketID;
            }
            set
            {
                OnMarketIDChanging(value);
                ReportPropertyChanging("MarketID");
                _MarketID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MarketID");
                OnMarketIDChanged();
            }
        }
        private global::System.String _MarketID;
        partial void OnMarketIDChanging(global::System.String value);
        partial void OnMarketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OddsTable
        {
            get
            {
                return _OddsTable;
            }
            set
            {
                OnOddsTableChanging(value);
                ReportPropertyChanging("OddsTable");
                _OddsTable = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OddsTable");
                OnOddsTableChanged();
            }
        }
        private global::System.String _OddsTable;
        partial void OnOddsTableChanging(global::System.String value);
        partial void OnOddsTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 MyEntrant
        {
            get
            {
                return _MyEntrant;
            }
            set
            {
                OnMyEntrantChanging(value);
                ReportPropertyChanging("MyEntrant");
                _MyEntrant = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MyEntrant");
                OnMyEntrantChanged();
            }
        }
        private global::System.Int16 _MyEntrant;
        partial void OnMyEntrantChanging(global::System.Int16 value);
        partial void OnMyEntrantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BL
        {
            get
            {
                return _BL;
            }
            set
            {
                OnBLChanging(value);
                ReportPropertyChanging("BL");
                _BL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BL");
                OnBLChanged();
            }
        }
        private global::System.String _BL;
        partial void OnBLChanging(global::System.String value);
        partial void OnBLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsWon
        {
            get
            {
                return _IsWon;
            }
            set
            {
                OnIsWonChanging(value);
                ReportPropertyChanging("IsWon");
                _IsWon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsWon");
                OnIsWonChanged();
            }
        }
        private global::System.Boolean _IsWon;
        partial void OnIsWonChanging(global::System.Boolean value);
        partial void OnIsWonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDraw
        {
            get
            {
                return _IsDraw;
            }
            set
            {
                OnIsDrawChanging(value);
                ReportPropertyChanging("IsDraw");
                _IsDraw = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDraw");
                OnIsDrawChanged();
            }
        }
        private global::System.Boolean _IsDraw;
        partial void OnIsDrawChanging(global::System.Boolean value);
        partial void OnIsDrawChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Stake
        {
            get
            {
                return _Stake;
            }
            set
            {
                OnStakeChanging(value);
                ReportPropertyChanging("Stake");
                _Stake = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stake");
                OnStakeChanged();
            }
        }
        private global::System.Decimal _Stake;
        partial void OnStakeChanging(global::System.Decimal value);
        partial void OnStakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossProfit
        {
            get
            {
                return _GrossProfit;
            }
            set
            {
                OnGrossProfitChanging(value);
                ReportPropertyChanging("GrossProfit");
                _GrossProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossProfit");
                OnGrossProfitChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossProfit;
        partial void OnGrossProfitChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossProfitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetProfit
        {
            get
            {
                return _NetProfit;
            }
            set
            {
                OnNetProfitChanging(value);
                ReportPropertyChanging("NetProfit");
                _NetProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetProfit");
                OnNetProfitChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetProfit;
        partial void OnNetProfitChanging(Nullable<global::System.Decimal> value);
        partial void OnNetProfitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Exposure
        {
            get
            {
                return _Exposure;
            }
            set
            {
                OnExposureChanging(value);
                ReportPropertyChanging("Exposure");
                _Exposure = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Exposure");
                OnExposureChanged();
            }
        }
        private Nullable<global::System.Decimal> _Exposure;
        partial void OnExposureChanging(Nullable<global::System.Decimal> value);
        partial void OnExposureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Liability
        {
            get
            {
                return _Liability;
            }
            set
            {
                OnLiabilityChanging(value);
                ReportPropertyChanging("Liability");
                _Liability = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Liability");
                OnLiabilityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Liability;
        partial void OnLiabilityChanging(Nullable<global::System.Decimal> value);
        partial void OnLiabilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payouts
        {
            get
            {
                return _Payouts;
            }
            set
            {
                OnPayoutsChanging(value);
                ReportPropertyChanging("Payouts");
                _Payouts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payouts");
                OnPayoutsChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payouts;
        partial void OnPayoutsChanging(Nullable<global::System.Decimal> value);
        partial void OnPayoutsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossWinning
        {
            get
            {
                return _GrossWinning;
            }
            set
            {
                OnGrossWinningChanging(value);
                ReportPropertyChanging("GrossWinning");
                _GrossWinning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossWinning");
                OnGrossWinningChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossWinning;
        partial void OnGrossWinningChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossWinningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubmitedTime
        {
            get
            {
                return _SubmitedTime;
            }
            set
            {
                OnSubmitedTimeChanging(value);
                ReportPropertyChanging("SubmitedTime");
                _SubmitedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubmitedTime");
                OnSubmitedTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubmitedTime;
        partial void OnSubmitedTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnSubmitedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CancelledTime
        {
            get
            {
                return _CancelledTime;
            }
            set
            {
                OnCancelledTimeChanging(value);
                ReportPropertyChanging("CancelledTime");
                _CancelledTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CancelledTime");
                OnCancelledTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CancelledTime;
        partial void OnCancelledTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCancelledTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SettledTime
        {
            get
            {
                return _SettledTime;
            }
            set
            {
                OnSettledTimeChanging(value);
                ReportPropertyChanging("SettledTime");
                _SettledTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SettledTime");
                OnSettledTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _SettledTime;
        partial void OnSettledTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnSettledTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Commission
        {
            get
            {
                return _Commission;
            }
            set
            {
                OnCommissionChanging(value);
                ReportPropertyChanging("Commission");
                _Commission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Commission");
                OnCommissionChanged();
            }
        }
        private Nullable<global::System.Decimal> _Commission;
        partial void OnCommissionChanging(Nullable<global::System.Decimal> value);
        partial void OnCommissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BetStatus
        {
            get
            {
                return _BetStatus;
            }
            set
            {
                OnBetStatusChanging(value);
                ReportPropertyChanging("BetStatus");
                _BetStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BetStatus");
                OnBetStatusChanged();
            }
        }
        private global::System.String _BetStatus;
        partial void OnBetStatusChanging(global::System.String value);
        partial void OnBetStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InPlayBet
        {
            get
            {
                return _InPlayBet;
            }
            set
            {
                OnInPlayBetChanging(value);
                ReportPropertyChanging("InPlayBet");
                _InPlayBet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InPlayBet");
                OnInPlayBetChanged();
            }
        }
        private Nullable<global::System.Boolean> _InPlayBet;
        partial void OnInPlayBetChanging(Nullable<global::System.Boolean> value);
        partial void OnInPlayBetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PointsRefunded
        {
            get
            {
                return _PointsRefunded;
            }
            set
            {
                OnPointsRefundedChanging(value);
                ReportPropertyChanging("PointsRefunded");
                _PointsRefunded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PointsRefunded");
                OnPointsRefundedChanged();
            }
        }
        private Nullable<global::System.Decimal> _PointsRefunded;
        partial void OnPointsRefundedChanging(Nullable<global::System.Decimal> value);
        partial void OnPointsRefundedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="MyCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MyCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MyCard object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="nickName">Initial value of the NickName property.</param>
        /// <param name="paymentMethodId">Initial value of the PaymentMethodId property.</param>
        public static MyCard CreateMyCard(global::System.Int32 id, global::System.String nickName, global::System.Int16 paymentMethodId)
        {
            MyCard myCard = new MyCard();
            myCard.ID = id;
            myCard.NickName = nickName;
            myCard.PaymentMethodId = paymentMethodId;
            return myCard;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DepositOnly
        {
            get
            {
                return _DepositOnly;
            }
            set
            {
                OnDepositOnlyChanging(value);
                ReportPropertyChanging("DepositOnly");
                _DepositOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepositOnly");
                OnDepositOnlyChanged();
            }
        }
        private Nullable<global::System.Boolean> _DepositOnly;
        partial void OnDepositOnlyChanging(Nullable<global::System.Boolean> value);
        partial void OnDepositOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WithdrawOnly
        {
            get
            {
                return _WithdrawOnly;
            }
            set
            {
                OnWithdrawOnlyChanging(value);
                ReportPropertyChanging("WithdrawOnly");
                _WithdrawOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WithdrawOnly");
                OnWithdrawOnlyChanged();
            }
        }
        private Nullable<global::System.Boolean> _WithdrawOnly;
        partial void OnWithdrawOnlyChanging(Nullable<global::System.Boolean> value);
        partial void OnWithdrawOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DepositAndWithdraw
        {
            get
            {
                return _DepositAndWithdraw;
            }
            set
            {
                OnDepositAndWithdrawChanging(value);
                ReportPropertyChanging("DepositAndWithdraw");
                _DepositAndWithdraw = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepositAndWithdraw");
                OnDepositAndWithdrawChanged();
            }
        }
        private Nullable<global::System.Boolean> _DepositAndWithdraw;
        partial void OnDepositAndWithdrawChanging(Nullable<global::System.Boolean> value);
        partial void OnDepositAndWithdrawChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 PaymentMethodId
        {
            get
            {
                return _PaymentMethodId;
            }
            set
            {
                OnPaymentMethodIdChanging(value);
                ReportPropertyChanging("PaymentMethodId");
                _PaymentMethodId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentMethodId");
                OnPaymentMethodIdChanged();
            }
        }
        private global::System.Int16 _PaymentMethodId;
        partial void OnPaymentMethodIdChanging(global::System.Int16 value);
        partial void OnPaymentMethodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                OnMemberIDChanging(value);
                ReportPropertyChanging("MemberID");
                _MemberID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberID");
                OnMemberIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MemberID;
        partial void OnMemberIDChanging(Nullable<global::System.Int64> value);
        partial void OnMemberIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_MyCards_Members", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_MyCards_Members", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_MyCards_Members", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_MyCards_Members", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("BettingExchangeModel.FK_MyCards_Members", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_MyCards_PaymentMethods", "PaymentMethod")]
        public PaymentMethod PaymentMethod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("BettingExchangeModel.FK_MyCards_PaymentMethods", "PaymentMethod").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("BettingExchangeModel.FK_MyCards_PaymentMethods", "PaymentMethod").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentMethod> PaymentMethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("BettingExchangeModel.FK_MyCards_PaymentMethods", "PaymentMethod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentMethod>("BettingExchangeModel.FK_MyCards_PaymentMethods", "PaymentMethod", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="MyWallet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MyWallet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MyWallet object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static MyWallet CreateMyWallet(global::System.Int64 id)
        {
            MyWallet myWallet = new MyWallet();
            myWallet.ID = id;
            return myWallet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                OnMemberIDChanging(value);
                ReportPropertyChanging("MemberID");
                _MemberID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberID");
                OnMemberIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MemberID;
        partial void OnMemberIDChanging(Nullable<global::System.Int64> value);
        partial void OnMemberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Available
        {
            get
            {
                return _Available;
            }
            set
            {
                OnAvailableChanging(value);
                ReportPropertyChanging("Available");
                _Available = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Available");
                OnAvailableChanged();
            }
        }
        private Nullable<global::System.Decimal> _Available;
        partial void OnAvailableChanging(Nullable<global::System.Decimal> value);
        partial void OnAvailableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Exposure
        {
            get
            {
                return _Exposure;
            }
            set
            {
                OnExposureChanging(value);
                ReportPropertyChanging("Exposure");
                _Exposure = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Exposure");
                OnExposureChanged();
            }
        }
        private Nullable<global::System.Decimal> _Exposure;
        partial void OnExposureChanging(Nullable<global::System.Decimal> value);
        partial void OnExposureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Balance;
        partial void OnBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedTime
        {
            get
            {
                return _UpdatedTime;
            }
            set
            {
                OnUpdatedTimeChanging(value);
                ReportPropertyChanging("UpdatedTime");
                _UpdatedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedTime");
                OnUpdatedTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedTime;
        partial void OnUpdatedTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_MyWallet_Members", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_MyWallet_Members", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_MyWallet_Members", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_MyWallet_Members", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("BettingExchangeModel.FK_MyWallet_Members", "Member", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="PaymentMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentMethod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentMethod object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creditCardNumber">Initial value of the CreditCardNumber property.</param>
        /// <param name="nameOnCard">Initial value of the NameOnCard property.</param>
        /// <param name="validFrom">Initial value of the ValidFrom property.</param>
        /// <param name="validTo">Initial value of the ValidTo property.</param>
        public static PaymentMethod CreatePaymentMethod(global::System.Int16 id, global::System.String creditCardNumber, global::System.String nameOnCard, global::System.DateTime validFrom, global::System.DateTime validTo)
        {
            PaymentMethod paymentMethod = new PaymentMethod();
            paymentMethod.ID = id;
            paymentMethod.CreditCardNumber = creditCardNumber;
            paymentMethod.NameOnCard = nameOnCard;
            paymentMethod.ValidFrom = validFrom;
            paymentMethod.ValidTo = validTo;
            return paymentMethod;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int16 _ID;
        partial void OnIDChanging(global::System.Int16 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardType
        {
            get
            {
                return _CardType;
            }
            set
            {
                OnCardTypeChanging(value);
                ReportPropertyChanging("CardType");
                _CardType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardType");
                OnCardTypeChanged();
            }
        }
        private global::System.String _CardType;
        partial void OnCardTypeChanging(global::System.String value);
        partial void OnCardTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreditCardNumber
        {
            get
            {
                return _CreditCardNumber;
            }
            set
            {
                OnCreditCardNumberChanging(value);
                ReportPropertyChanging("CreditCardNumber");
                _CreditCardNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreditCardNumber");
                OnCreditCardNumberChanged();
            }
        }
        private global::System.String _CreditCardNumber;
        partial void OnCreditCardNumberChanging(global::System.String value);
        partial void OnCreditCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameOnCard
        {
            get
            {
                return _NameOnCard;
            }
            set
            {
                OnNameOnCardChanging(value);
                ReportPropertyChanging("NameOnCard");
                _NameOnCard = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NameOnCard");
                OnNameOnCardChanged();
            }
        }
        private global::System.String _NameOnCard;
        partial void OnNameOnCardChanging(global::System.String value);
        partial void OnNameOnCardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaskedCreditCardNumber
        {
            get
            {
                return _MaskedCreditCardNumber;
            }
            set
            {
                OnMaskedCreditCardNumberChanging(value);
                ReportPropertyChanging("MaskedCreditCardNumber");
                _MaskedCreditCardNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaskedCreditCardNumber");
                OnMaskedCreditCardNumberChanged();
            }
        }
        private global::System.String _MaskedCreditCardNumber;
        partial void OnMaskedCreditCardNumberChanging(global::System.String value);
        partial void OnMaskedCreditCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardCvv2
        {
            get
            {
                return _CardCvv2;
            }
            set
            {
                OnCardCvv2Changing(value);
                ReportPropertyChanging("CardCvv2");
                _CardCvv2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardCvv2");
                OnCardCvv2Changed();
            }
        }
        private global::System.String _CardCvv2;
        partial void OnCardCvv2Changing(global::System.String value);
        partial void OnCardCvv2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidFrom
        {
            get
            {
                return _ValidFrom;
            }
            set
            {
                OnValidFromChanging(value);
                ReportPropertyChanging("ValidFrom");
                _ValidFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidFrom");
                OnValidFromChanged();
            }
        }
        private global::System.DateTime _ValidFrom;
        partial void OnValidFromChanging(global::System.DateTime value);
        partial void OnValidFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidTo
        {
            get
            {
                return _ValidTo;
            }
            set
            {
                OnValidToChanging(value);
                ReportPropertyChanging("ValidTo");
                _ValidTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidTo");
                OnValidToChanged();
            }
        }
        private global::System.DateTime _ValidTo;
        partial void OnValidToChanging(global::System.DateTime value);
        partial void OnValidToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardExpirationMonth
        {
            get
            {
                return _CardExpirationMonth;
            }
            set
            {
                OnCardExpirationMonthChanging(value);
                ReportPropertyChanging("CardExpirationMonth");
                _CardExpirationMonth = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardExpirationMonth");
                OnCardExpirationMonthChanged();
            }
        }
        private global::System.String _CardExpirationMonth;
        partial void OnCardExpirationMonthChanging(global::System.String value);
        partial void OnCardExpirationMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardExpirationYear
        {
            get
            {
                return _CardExpirationYear;
            }
            set
            {
                OnCardExpirationYearChanging(value);
                ReportPropertyChanging("CardExpirationYear");
                _CardExpirationYear = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardExpirationYear");
                OnCardExpirationYearChanged();
            }
        }
        private global::System.String _CardExpirationYear;
        partial void OnCardExpirationYearChanging(global::System.String value);
        partial void OnCardExpirationYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zipcode
        {
            get
            {
                return _Zipcode;
            }
            set
            {
                OnZipcodeChanging(value);
                ReportPropertyChanging("Zipcode");
                _Zipcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zipcode");
                OnZipcodeChanged();
            }
        }
        private global::System.String _Zipcode;
        partial void OnZipcodeChanging(global::System.String value);
        partial void OnZipcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bank
        {
            get
            {
                return _Bank;
            }
            set
            {
                OnBankChanging(value);
                ReportPropertyChanging("Bank");
                _Bank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bank");
                OnBankChanged();
            }
        }
        private global::System.String _Bank;
        partial void OnBankChanging(global::System.String value);
        partial void OnBankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Branch
        {
            get
            {
                return _Branch;
            }
            set
            {
                OnBranchChanging(value);
                ReportPropertyChanging("Branch");
                _Branch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Branch");
                OnBranchChanged();
            }
        }
        private global::System.String _Branch;
        partial void OnBranchChanging(global::System.String value);
        partial void OnBranchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BranchCode
        {
            get
            {
                return _BranchCode;
            }
            set
            {
                OnBranchCodeChanging(value);
                ReportPropertyChanging("BranchCode");
                _BranchCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BranchCode");
                OnBranchCodeChanged();
            }
        }
        private global::System.String _BranchCode;
        partial void OnBranchCodeChanging(global::System.String value);
        partial void OnBranchCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SwiftCode
        {
            get
            {
                return _SwiftCode;
            }
            set
            {
                OnSwiftCodeChanging(value);
                ReportPropertyChanging("SwiftCode");
                _SwiftCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SwiftCode");
                OnSwiftCodeChanged();
            }
        }
        private global::System.String _SwiftCode;
        partial void OnSwiftCodeChanging(global::System.String value);
        partial void OnSwiftCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IBAN
        {
            get
            {
                return _IBAN;
            }
            set
            {
                OnIBANChanging(value);
                ReportPropertyChanging("IBAN");
                _IBAN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IBAN");
                OnIBANChanged();
            }
        }
        private global::System.String _IBAN;
        partial void OnIBANChanging(global::System.String value);
        partial void OnIBANChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Verified
        {
            get
            {
                return _Verified;
            }
            set
            {
                OnVerifiedChanging(value);
                ReportPropertyChanging("Verified");
                _Verified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Verified");
                OnVerifiedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Verified;
        partial void OnVerifiedChanging(Nullable<global::System.Boolean> value);
        partial void OnVerifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassName
        {
            get
            {
                return _ClassName;
            }
            set
            {
                OnClassNameChanging(value);
                ReportPropertyChanging("ClassName");
                _ClassName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClassName");
                OnClassNameChanged();
            }
        }
        private global::System.String _ClassName;
        partial void OnClassNameChanging(global::System.String value);
        partial void OnClassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddedDate
        {
            get
            {
                return _AddedDate;
            }
            set
            {
                OnAddedDateChanging(value);
                ReportPropertyChanging("AddedDate");
                _AddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedDate");
                OnAddedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddedDate;
        partial void OnAddedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifyDate
        {
            get
            {
                return _ModifyDate;
            }
            set
            {
                OnModifyDateChanging(value);
                ReportPropertyChanging("ModifyDate");
                _ModifyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifyDate");
                OnModifyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifyDate;
        partial void OnModifyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifyDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_MyCards_PaymentMethods", "MyCard")]
        public EntityCollection<MyCard> MyCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MyCard>("BettingExchangeModel.FK_MyCards_PaymentMethods", "MyCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MyCard>("BettingExchangeModel.FK_MyCards_PaymentMethods", "MyCard", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Player object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="playerName">Initial value of the PlayerName property.</param>
        /// <param name="nationality">Initial value of the Nationality property.</param>
        public static Player CreatePlayer(global::System.Int64 id, global::System.String playerName, global::System.Int64 nationality)
        {
            Player player = new Player();
            player.ID = id;
            player.PlayerName = playerName;
            player.Nationality = nationality;
            return player;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlayerName
        {
            get
            {
                return _PlayerName;
            }
            set
            {
                OnPlayerNameChanging(value);
                ReportPropertyChanging("PlayerName");
                _PlayerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PlayerName");
                OnPlayerNameChanged();
            }
        }
        private global::System.String _PlayerName;
        partial void OnPlayerNameChanging(global::System.String value);
        partial void OnPlayerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int32> value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private Nullable<global::System.Double> _Height;
        partial void OnHeightChanging(Nullable<global::System.Double> value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Double> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Double> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.Int64 _Nationality;
        partial void OnNationalityChanging(global::System.Int64 value);
        partial void OnNationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Porfolio
        {
            get
            {
                return _Porfolio;
            }
            set
            {
                OnPorfolioChanging(value);
                ReportPropertyChanging("Porfolio");
                _Porfolio = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Porfolio");
                OnPorfolioChanged();
            }
        }
        private global::System.String _Porfolio;
        partial void OnPorfolioChanging(global::System.String value);
        partial void OnPorfolioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThumbnailPhoto
        {
            get
            {
                return _ThumbnailPhoto;
            }
            set
            {
                OnThumbnailPhotoChanging(value);
                ReportPropertyChanging("ThumbnailPhoto");
                _ThumbnailPhoto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ThumbnailPhoto");
                OnThumbnailPhotoChanged();
            }
        }
        private global::System.String _ThumbnailPhoto;
        partial void OnThumbnailPhotoChanging(global::System.String value);
        partial void OnThumbnailPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private Nullable<global::System.Int64> _TeamID;
        partial void OnTeamIDChanging(Nullable<global::System.Int64> value);
        partial void OnTeamIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="PSV_ALLTOURNAMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PSV_ALLTOURNAMENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PSV_ALLTOURNAMENT object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="leagueName_WebDisplay">Initial value of the LeagueName_WebDisplay property.</param>
        public static PSV_ALLTOURNAMENT CreatePSV_ALLTOURNAMENT(global::System.Int64 id, global::System.Int32 sportID, global::System.Int32 countryID, global::System.String leagueName_WebDisplay)
        {
            PSV_ALLTOURNAMENT pSV_ALLTOURNAMENT = new PSV_ALLTOURNAMENT();
            pSV_ALLTOURNAMENT.ID = id;
            pSV_ALLTOURNAMENT.SportID = sportID;
            pSV_ALLTOURNAMENT.CountryID = countryID;
            pSV_ALLTOURNAMENT.LeagueName_WebDisplay = leagueName_WebDisplay;
            return pSV_ALLTOURNAMENT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                if (_SportID != value)
                {
                    OnSportIDChanging(value);
                    ReportPropertyChanging("SportID");
                    _SportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportID");
                    OnSportIDChanged();
                }
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeagueName_WebDisplay
        {
            get
            {
                return _LeagueName_WebDisplay;
            }
            set
            {
                if (_LeagueName_WebDisplay != value)
                {
                    OnLeagueName_WebDisplayChanging(value);
                    ReportPropertyChanging("LeagueName_WebDisplay");
                    _LeagueName_WebDisplay = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LeagueName_WebDisplay");
                    OnLeagueName_WebDisplayChanged();
                }
            }
        }
        private global::System.String _LeagueName_WebDisplay;
        partial void OnLeagueName_WebDisplayChanging(global::System.String value);
        partial void OnLeagueName_WebDisplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private Nullable<global::System.Int32> _Total;
        partial void OnTotalChanging(Nullable<global::System.Int32> value);
        partial void OnTotalChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="PSV_MATCHES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PSV_MATCHES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PSV_MATCHES object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="homeTeam">Initial value of the HomeTeam property.</param>
        /// <param name="awayTeam">Initial value of the AwayTeam property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="leagueName">Initial value of the LeagueName property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="sportName">Initial value of the SportName property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        public static PSV_MATCHES CreatePSV_MATCHES(global::System.Guid id, global::System.String homeTeam, global::System.String awayTeam, global::System.Int64 leagueID, global::System.String leagueName, global::System.Int32 sportID, global::System.String sportName, global::System.Int32 countryID, global::System.String country)
        {
            PSV_MATCHES pSV_MATCHES = new PSV_MATCHES();
            pSV_MATCHES.ID = id;
            pSV_MATCHES.HomeTeam = homeTeam;
            pSV_MATCHES.AwayTeam = awayTeam;
            pSV_MATCHES.LeagueID = leagueID;
            pSV_MATCHES.LeagueName = leagueName;
            pSV_MATCHES.SportID = sportID;
            pSV_MATCHES.SportName = sportName;
            pSV_MATCHES.CountryID = countryID;
            pSV_MATCHES.Country = country;
            return pSV_MATCHES;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomeTeam
        {
            get
            {
                return _HomeTeam;
            }
            set
            {
                if (_HomeTeam != value)
                {
                    OnHomeTeamChanging(value);
                    ReportPropertyChanging("HomeTeam");
                    _HomeTeam = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HomeTeam");
                    OnHomeTeamChanged();
                }
            }
        }
        private global::System.String _HomeTeam;
        partial void OnHomeTeamChanging(global::System.String value);
        partial void OnHomeTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AwayTeam
        {
            get
            {
                return _AwayTeam;
            }
            set
            {
                if (_AwayTeam != value)
                {
                    OnAwayTeamChanging(value);
                    ReportPropertyChanging("AwayTeam");
                    _AwayTeam = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AwayTeam");
                    OnAwayTeamChanged();
                }
            }
        }
        private global::System.String _AwayTeam;
        partial void OnAwayTeamChanging(global::System.String value);
        partial void OnAwayTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                if (_LeagueID != value)
                {
                    OnLeagueIDChanging(value);
                    ReportPropertyChanging("LeagueID");
                    _LeagueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeagueID");
                    OnLeagueIDChanged();
                }
            }
        }
        private global::System.Int64 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int64 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeagueName
        {
            get
            {
                return _LeagueName;
            }
            set
            {
                if (_LeagueName != value)
                {
                    OnLeagueNameChanging(value);
                    ReportPropertyChanging("LeagueName");
                    _LeagueName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LeagueName");
                    OnLeagueNameChanged();
                }
            }
        }
        private global::System.String _LeagueName;
        partial void OnLeagueNameChanging(global::System.String value);
        partial void OnLeagueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                if (_SportID != value)
                {
                    OnSportIDChanging(value);
                    ReportPropertyChanging("SportID");
                    _SportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportID");
                    OnSportIDChanged();
                }
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportName
        {
            get
            {
                return _SportName;
            }
            set
            {
                if (_SportName != value)
                {
                    OnSportNameChanging(value);
                    ReportPropertyChanging("SportName");
                    _SportName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SportName");
                    OnSportNameChanged();
                }
            }
        }
        private global::System.String _SportName;
        partial void OnSportNameChanging(global::System.String value);
        partial void OnSportNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                if (_Country != value)
                {
                    OnCountryChanging(value);
                    ReportPropertyChanging("Country");
                    _Country = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Country");
                    OnCountryChanged();
                }
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MatchStatus
        {
            get
            {
                return _MatchStatus;
            }
            set
            {
                OnMatchStatusChanging(value);
                ReportPropertyChanging("MatchStatus");
                _MatchStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MatchStatus");
                OnMatchStatusChanged();
            }
        }
        private global::System.String _MatchStatus;
        partial void OnMatchStatusChanging(global::System.String value);
        partial void OnMatchStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDateTime;
        partial void OnStartDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="PSV_MYBET")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PSV_MYBET : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PSV_MYBET object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="memberID">Initial value of the MemberID property.</param>
        /// <param name="marketID">Initial value of the MarketID property.</param>
        /// <param name="oddsTable">Initial value of the OddsTable property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="homeTeam">Initial value of the HomeTeam property.</param>
        /// <param name="awayTeam">Initial value of the AwayTeam property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="leagueName_WebDisplay">Initial value of the LeagueName_WebDisplay property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="sportName">Initial value of the SportName property.</param>
        /// <param name="myEntrant">Initial value of the MyEntrant property.</param>
        /// <param name="bL">Initial value of the BL property.</param>
        /// <param name="isWon">Initial value of the IsWon property.</param>
        /// <param name="isDraw">Initial value of the IsDraw property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="stake">Initial value of the Stake property.</param>
        public static PSV_MYBET CreatePSV_MYBET(global::System.Guid id, global::System.Int64 memberID, global::System.String marketID, global::System.String oddsTable, global::System.String matchID, global::System.String homeTeam, global::System.String awayTeam, global::System.Int32 leagueID, global::System.String leagueName_WebDisplay, global::System.Int32 countryID, global::System.String country, global::System.Int32 sportID, global::System.String sportName, global::System.Int16 myEntrant, global::System.String bL, global::System.Boolean isWon, global::System.Boolean isDraw, global::System.Decimal price, global::System.Decimal stake)
        {
            PSV_MYBET pSV_MYBET = new PSV_MYBET();
            pSV_MYBET.ID = id;
            pSV_MYBET.MemberID = memberID;
            pSV_MYBET.MarketID = marketID;
            pSV_MYBET.OddsTable = oddsTable;
            pSV_MYBET.MatchID = matchID;
            pSV_MYBET.HomeTeam = homeTeam;
            pSV_MYBET.AwayTeam = awayTeam;
            pSV_MYBET.LeagueID = leagueID;
            pSV_MYBET.LeagueName_WebDisplay = leagueName_WebDisplay;
            pSV_MYBET.CountryID = countryID;
            pSV_MYBET.Country = country;
            pSV_MYBET.SportID = sportID;
            pSV_MYBET.SportName = sportName;
            pSV_MYBET.MyEntrant = myEntrant;
            pSV_MYBET.BL = bL;
            pSV_MYBET.IsWon = isWon;
            pSV_MYBET.IsDraw = isDraw;
            pSV_MYBET.Price = price;
            pSV_MYBET.Stake = stake;
            return pSV_MYBET;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Row
        {
            get
            {
                return _Row;
            }
            set
            {
                OnRowChanging(value);
                ReportPropertyChanging("Row");
                _Row = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Row");
                OnRowChanged();
            }
        }
        private Nullable<global::System.Int64> _Row;
        partial void OnRowChanging(Nullable<global::System.Int64> value);
        partial void OnRowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                if (_MemberID != value)
                {
                    OnMemberIDChanging(value);
                    ReportPropertyChanging("MemberID");
                    _MemberID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberID");
                    OnMemberIDChanged();
                }
            }
        }
        private global::System.Int64 _MemberID;
        partial void OnMemberIDChanging(global::System.Int64 value);
        partial void OnMemberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MarketID
        {
            get
            {
                return _MarketID;
            }
            set
            {
                if (_MarketID != value)
                {
                    OnMarketIDChanging(value);
                    ReportPropertyChanging("MarketID");
                    _MarketID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MarketID");
                    OnMarketIDChanged();
                }
            }
        }
        private global::System.String _MarketID;
        partial void OnMarketIDChanging(global::System.String value);
        partial void OnMarketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OddsTable
        {
            get
            {
                return _OddsTable;
            }
            set
            {
                if (_OddsTable != value)
                {
                    OnOddsTableChanging(value);
                    ReportPropertyChanging("OddsTable");
                    _OddsTable = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("OddsTable");
                    OnOddsTableChanged();
                }
            }
        }
        private global::System.String _OddsTable;
        partial void OnOddsTableChanging(global::System.String value);
        partial void OnOddsTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                if (_MatchID != value)
                {
                    OnMatchIDChanging(value);
                    ReportPropertyChanging("MatchID");
                    _MatchID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MatchID");
                    OnMatchIDChanged();
                }
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomeTeam
        {
            get
            {
                return _HomeTeam;
            }
            set
            {
                if (_HomeTeam != value)
                {
                    OnHomeTeamChanging(value);
                    ReportPropertyChanging("HomeTeam");
                    _HomeTeam = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HomeTeam");
                    OnHomeTeamChanged();
                }
            }
        }
        private global::System.String _HomeTeam;
        partial void OnHomeTeamChanging(global::System.String value);
        partial void OnHomeTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AwayTeam
        {
            get
            {
                return _AwayTeam;
            }
            set
            {
                if (_AwayTeam != value)
                {
                    OnAwayTeamChanging(value);
                    ReportPropertyChanging("AwayTeam");
                    _AwayTeam = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AwayTeam");
                    OnAwayTeamChanged();
                }
            }
        }
        private global::System.String _AwayTeam;
        partial void OnAwayTeamChanging(global::System.String value);
        partial void OnAwayTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WinningTeam
        {
            get
            {
                return _WinningTeam;
            }
            set
            {
                OnWinningTeamChanging(value);
                ReportPropertyChanging("WinningTeam");
                _WinningTeam = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WinningTeam");
                OnWinningTeamChanged();
            }
        }
        private global::System.String _WinningTeam;
        partial void OnWinningTeamChanging(global::System.String value);
        partial void OnWinningTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MatchStatus
        {
            get
            {
                return _MatchStatus;
            }
            set
            {
                OnMatchStatusChanging(value);
                ReportPropertyChanging("MatchStatus");
                _MatchStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MatchStatus");
                OnMatchStatusChanged();
            }
        }
        private global::System.String _MatchStatus;
        partial void OnMatchStatusChanging(global::System.String value);
        partial void OnMatchStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDateTime;
        partial void OnStartDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                if (_LeagueID != value)
                {
                    OnLeagueIDChanging(value);
                    ReportPropertyChanging("LeagueID");
                    _LeagueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeagueID");
                    OnLeagueIDChanged();
                }
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeagueName_WebDisplay
        {
            get
            {
                return _LeagueName_WebDisplay;
            }
            set
            {
                if (_LeagueName_WebDisplay != value)
                {
                    OnLeagueName_WebDisplayChanging(value);
                    ReportPropertyChanging("LeagueName_WebDisplay");
                    _LeagueName_WebDisplay = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LeagueName_WebDisplay");
                    OnLeagueName_WebDisplayChanged();
                }
            }
        }
        private global::System.String _LeagueName_WebDisplay;
        partial void OnLeagueName_WebDisplayChanging(global::System.String value);
        partial void OnLeagueName_WebDisplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChampionTitle
        {
            get
            {
                return _ChampionTitle;
            }
            set
            {
                OnChampionTitleChanging(value);
                ReportPropertyChanging("ChampionTitle");
                _ChampionTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChampionTitle");
                OnChampionTitleChanged();
            }
        }
        private global::System.String _ChampionTitle;
        partial void OnChampionTitleChanging(global::System.String value);
        partial void OnChampionTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                if (_Country != value)
                {
                    OnCountryChanging(value);
                    ReportPropertyChanging("Country");
                    _Country = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Country");
                    OnCountryChanged();
                }
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                if (_SportID != value)
                {
                    OnSportIDChanging(value);
                    ReportPropertyChanging("SportID");
                    _SportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportID");
                    OnSportIDChanged();
                }
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportName
        {
            get
            {
                return _SportName;
            }
            set
            {
                if (_SportName != value)
                {
                    OnSportNameChanging(value);
                    ReportPropertyChanging("SportName");
                    _SportName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SportName");
                    OnSportNameChanged();
                }
            }
        }
        private global::System.String _SportName;
        partial void OnSportNameChanging(global::System.String value);
        partial void OnSportNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 MyEntrant
        {
            get
            {
                return _MyEntrant;
            }
            set
            {
                if (_MyEntrant != value)
                {
                    OnMyEntrantChanging(value);
                    ReportPropertyChanging("MyEntrant");
                    _MyEntrant = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MyEntrant");
                    OnMyEntrantChanged();
                }
            }
        }
        private global::System.Int16 _MyEntrant;
        partial void OnMyEntrantChanging(global::System.Int16 value);
        partial void OnMyEntrantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BL
        {
            get
            {
                return _BL;
            }
            set
            {
                if (_BL != value)
                {
                    OnBLChanging(value);
                    ReportPropertyChanging("BL");
                    _BL = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BL");
                    OnBLChanged();
                }
            }
        }
        private global::System.String _BL;
        partial void OnBLChanging(global::System.String value);
        partial void OnBLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsWon
        {
            get
            {
                return _IsWon;
            }
            set
            {
                if (_IsWon != value)
                {
                    OnIsWonChanging(value);
                    ReportPropertyChanging("IsWon");
                    _IsWon = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsWon");
                    OnIsWonChanged();
                }
            }
        }
        private global::System.Boolean _IsWon;
        partial void OnIsWonChanging(global::System.Boolean value);
        partial void OnIsWonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDraw
        {
            get
            {
                return _IsDraw;
            }
            set
            {
                if (_IsDraw != value)
                {
                    OnIsDrawChanging(value);
                    ReportPropertyChanging("IsDraw");
                    _IsDraw = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsDraw");
                    OnIsDrawChanged();
                }
            }
        }
        private global::System.Boolean _IsDraw;
        partial void OnIsDrawChanging(global::System.Boolean value);
        partial void OnIsDrawChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                if (_Price != value)
                {
                    OnPriceChanging(value);
                    ReportPropertyChanging("Price");
                    _Price = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Price");
                    OnPriceChanged();
                }
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Stake
        {
            get
            {
                return _Stake;
            }
            set
            {
                if (_Stake != value)
                {
                    OnStakeChanging(value);
                    ReportPropertyChanging("Stake");
                    _Stake = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Stake");
                    OnStakeChanged();
                }
            }
        }
        private global::System.Decimal _Stake;
        partial void OnStakeChanging(global::System.Decimal value);
        partial void OnStakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossProfit
        {
            get
            {
                return _GrossProfit;
            }
            set
            {
                OnGrossProfitChanging(value);
                ReportPropertyChanging("GrossProfit");
                _GrossProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossProfit");
                OnGrossProfitChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossProfit;
        partial void OnGrossProfitChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossProfitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetProfit
        {
            get
            {
                return _NetProfit;
            }
            set
            {
                OnNetProfitChanging(value);
                ReportPropertyChanging("NetProfit");
                _NetProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetProfit");
                OnNetProfitChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetProfit;
        partial void OnNetProfitChanging(Nullable<global::System.Decimal> value);
        partial void OnNetProfitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Exposure
        {
            get
            {
                return _Exposure;
            }
            set
            {
                OnExposureChanging(value);
                ReportPropertyChanging("Exposure");
                _Exposure = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Exposure");
                OnExposureChanged();
            }
        }
        private Nullable<global::System.Decimal> _Exposure;
        partial void OnExposureChanging(Nullable<global::System.Decimal> value);
        partial void OnExposureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Liability
        {
            get
            {
                return _Liability;
            }
            set
            {
                OnLiabilityChanging(value);
                ReportPropertyChanging("Liability");
                _Liability = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Liability");
                OnLiabilityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Liability;
        partial void OnLiabilityChanging(Nullable<global::System.Decimal> value);
        partial void OnLiabilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payouts
        {
            get
            {
                return _Payouts;
            }
            set
            {
                OnPayoutsChanging(value);
                ReportPropertyChanging("Payouts");
                _Payouts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payouts");
                OnPayoutsChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payouts;
        partial void OnPayoutsChanging(Nullable<global::System.Decimal> value);
        partial void OnPayoutsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossWinning
        {
            get
            {
                return _GrossWinning;
            }
            set
            {
                OnGrossWinningChanging(value);
                ReportPropertyChanging("GrossWinning");
                _GrossWinning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossWinning");
                OnGrossWinningChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossWinning;
        partial void OnGrossWinningChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossWinningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubmitedTime
        {
            get
            {
                return _SubmitedTime;
            }
            set
            {
                OnSubmitedTimeChanging(value);
                ReportPropertyChanging("SubmitedTime");
                _SubmitedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubmitedTime");
                OnSubmitedTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubmitedTime;
        partial void OnSubmitedTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnSubmitedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CancelledTime
        {
            get
            {
                return _CancelledTime;
            }
            set
            {
                OnCancelledTimeChanging(value);
                ReportPropertyChanging("CancelledTime");
                _CancelledTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CancelledTime");
                OnCancelledTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CancelledTime;
        partial void OnCancelledTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCancelledTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SettledTime
        {
            get
            {
                return _SettledTime;
            }
            set
            {
                OnSettledTimeChanging(value);
                ReportPropertyChanging("SettledTime");
                _SettledTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SettledTime");
                OnSettledTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _SettledTime;
        partial void OnSettledTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnSettledTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Commission
        {
            get
            {
                return _Commission;
            }
            set
            {
                OnCommissionChanging(value);
                ReportPropertyChanging("Commission");
                _Commission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Commission");
                OnCommissionChanged();
            }
        }
        private Nullable<global::System.Decimal> _Commission;
        partial void OnCommissionChanging(Nullable<global::System.Decimal> value);
        partial void OnCommissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BetStatus
        {
            get
            {
                return _BetStatus;
            }
            set
            {
                OnBetStatusChanging(value);
                ReportPropertyChanging("BetStatus");
                _BetStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BetStatus");
                OnBetStatusChanged();
            }
        }
        private global::System.String _BetStatus;
        partial void OnBetStatusChanging(global::System.String value);
        partial void OnBetStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InPlayBet
        {
            get
            {
                return _InPlayBet;
            }
            set
            {
                OnInPlayBetChanging(value);
                ReportPropertyChanging("InPlayBet");
                _InPlayBet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InPlayBet");
                OnInPlayBetChanged();
            }
        }
        private Nullable<global::System.Boolean> _InPlayBet;
        partial void OnInPlayBetChanging(Nullable<global::System.Boolean> value);
        partial void OnInPlayBetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PointsRefunded
        {
            get
            {
                return _PointsRefunded;
            }
            set
            {
                OnPointsRefundedChanging(value);
                ReportPropertyChanging("PointsRefunded");
                _PointsRefunded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PointsRefunded");
                OnPointsRefundedChanged();
            }
        }
        private Nullable<global::System.Decimal> _PointsRefunded;
        partial void OnPointsRefundedChanging(Nullable<global::System.Decimal> value);
        partial void OnPointsRefundedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="PSV_STATEMENTS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PSV_STATEMENTS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PSV_STATEMENTS object.
        /// </summary>
        /// <param name="homeTeam">Initial value of the HomeTeam property.</param>
        /// <param name="awayTeam">Initial value of the AwayTeam property.</param>
        /// <param name="marketID">Initial value of the MarketID property.</param>
        /// <param name="myEntrant">Initial value of the MyEntrant property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        /// <param name="statementTime">Initial value of the StatementTime property.</param>
        public static PSV_STATEMENTS CreatePSV_STATEMENTS(global::System.String homeTeam, global::System.String awayTeam, global::System.String marketID, global::System.Int16 myEntrant, global::System.Int64 id, global::System.Int64 memberId, global::System.DateTime statementTime)
        {
            PSV_STATEMENTS pSV_STATEMENTS = new PSV_STATEMENTS();
            pSV_STATEMENTS.HomeTeam = homeTeam;
            pSV_STATEMENTS.AwayTeam = awayTeam;
            pSV_STATEMENTS.MarketID = marketID;
            pSV_STATEMENTS.MyEntrant = myEntrant;
            pSV_STATEMENTS.ID = id;
            pSV_STATEMENTS.MemberId = memberId;
            pSV_STATEMENTS.StatementTime = statementTime;
            return pSV_STATEMENTS;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Row
        {
            get
            {
                return _Row;
            }
            set
            {
                OnRowChanging(value);
                ReportPropertyChanging("Row");
                _Row = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Row");
                OnRowChanged();
            }
        }
        private Nullable<global::System.Int64> _Row;
        partial void OnRowChanging(Nullable<global::System.Int64> value);
        partial void OnRowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomeTeam
        {
            get
            {
                return _HomeTeam;
            }
            set
            {
                if (_HomeTeam != value)
                {
                    OnHomeTeamChanging(value);
                    ReportPropertyChanging("HomeTeam");
                    _HomeTeam = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HomeTeam");
                    OnHomeTeamChanged();
                }
            }
        }
        private global::System.String _HomeTeam;
        partial void OnHomeTeamChanging(global::System.String value);
        partial void OnHomeTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AwayTeam
        {
            get
            {
                return _AwayTeam;
            }
            set
            {
                if (_AwayTeam != value)
                {
                    OnAwayTeamChanging(value);
                    ReportPropertyChanging("AwayTeam");
                    _AwayTeam = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AwayTeam");
                    OnAwayTeamChanged();
                }
            }
        }
        private global::System.String _AwayTeam;
        partial void OnAwayTeamChanging(global::System.String value);
        partial void OnAwayTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MatchStatus
        {
            get
            {
                return _MatchStatus;
            }
            set
            {
                OnMatchStatusChanging(value);
                ReportPropertyChanging("MatchStatus");
                _MatchStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MatchStatus");
                OnMatchStatusChanged();
            }
        }
        private global::System.String _MatchStatus;
        partial void OnMatchStatusChanging(global::System.String value);
        partial void OnMatchStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDateTime;
        partial void OnStartDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MarketID
        {
            get
            {
                return _MarketID;
            }
            set
            {
                if (_MarketID != value)
                {
                    OnMarketIDChanging(value);
                    ReportPropertyChanging("MarketID");
                    _MarketID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MarketID");
                    OnMarketIDChanged();
                }
            }
        }
        private global::System.String _MarketID;
        partial void OnMarketIDChanging(global::System.String value);
        partial void OnMarketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 MyEntrant
        {
            get
            {
                return _MyEntrant;
            }
            set
            {
                if (_MyEntrant != value)
                {
                    OnMyEntrantChanging(value);
                    ReportPropertyChanging("MyEntrant");
                    _MyEntrant = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MyEntrant");
                    OnMyEntrantChanged();
                }
            }
        }
        private global::System.Int16 _MyEntrant;
        partial void OnMyEntrantChanging(global::System.Int16 value);
        partial void OnMyEntrantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                if (_MemberId != value)
                {
                    OnMemberIdChanging(value);
                    ReportPropertyChanging("MemberId");
                    _MemberId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberId");
                    OnMemberIdChanged();
                }
            }
        }
        private global::System.Int64 _MemberId;
        partial void OnMemberIdChanging(global::System.Int64 value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BetId
        {
            get
            {
                return _BetId;
            }
            set
            {
                OnBetIdChanging(value);
                ReportPropertyChanging("BetId");
                _BetId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BetId");
                OnBetIdChanged();
            }
        }
        private global::System.String _BetId;
        partial void OnBetIdChanging(global::System.String value);
        partial void OnBetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StatementTime
        {
            get
            {
                return _StatementTime;
            }
            set
            {
                if (_StatementTime != value)
                {
                    OnStatementTimeChanging(value);
                    ReportPropertyChanging("StatementTime");
                    _StatementTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatementTime");
                    OnStatementTimeChanged();
                }
            }
        }
        private global::System.DateTime _StatementTime;
        partial void OnStatementTimeChanging(global::System.DateTime value);
        partial void OnStatementTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Selection
        {
            get
            {
                return _Selection;
            }
            set
            {
                OnSelectionChanging(value);
                ReportPropertyChanging("Selection");
                _Selection = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Selection");
                OnSelectionChanged();
            }
        }
        private global::System.String _Selection;
        partial void OnSelectionChanging(global::System.String value);
        partial void OnSelectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> BackOrLay
        {
            get
            {
                return _BackOrLay;
            }
            set
            {
                OnBackOrLayChanging(value);
                ReportPropertyChanging("BackOrLay");
                _BackOrLay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BackOrLay");
                OnBackOrLayChanged();
            }
        }
        private Nullable<global::System.Byte> _BackOrLay;
        partial void OnBackOrLayChanging(Nullable<global::System.Byte> value);
        partial void OnBackOrLayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Stake
        {
            get
            {
                return _Stake;
            }
            set
            {
                OnStakeChanging(value);
                ReportPropertyChanging("Stake");
                _Stake = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stake");
                OnStakeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Stake;
        partial void OnStakeChanging(Nullable<global::System.Decimal> value);
        partial void OnStakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Odds
        {
            get
            {
                return _Odds;
            }
            set
            {
                OnOddsChanging(value);
                ReportPropertyChanging("Odds");
                _Odds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Odds");
                OnOddsChanged();
            }
        }
        private Nullable<global::System.Decimal> _Odds;
        partial void OnOddsChanging(Nullable<global::System.Decimal> value);
        partial void OnOddsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type_Result
        {
            get
            {
                return _Type_Result;
            }
            set
            {
                OnType_ResultChanging(value);
                ReportPropertyChanging("Type_Result");
                _Type_Result = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type_Result");
                OnType_ResultChanged();
            }
        }
        private global::System.String _Type_Result;
        partial void OnType_ResultChanging(global::System.String value);
        partial void OnType_ResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossProfit
        {
            get
            {
                return _GrossProfit;
            }
            set
            {
                OnGrossProfitChanging(value);
                ReportPropertyChanging("GrossProfit");
                _GrossProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossProfit");
                OnGrossProfitChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossProfit;
        partial void OnGrossProfitChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossProfitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetProfit
        {
            get
            {
                return _NetProfit;
            }
            set
            {
                OnNetProfitChanging(value);
                ReportPropertyChanging("NetProfit");
                _NetProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetProfit");
                OnNetProfitChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetProfit;
        partial void OnNetProfitChanging(Nullable<global::System.Decimal> value);
        partial void OnNetProfitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Commission
        {
            get
            {
                return _Commission;
            }
            set
            {
                OnCommissionChanging(value);
                ReportPropertyChanging("Commission");
                _Commission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Commission");
                OnCommissionChanged();
            }
        }
        private Nullable<global::System.Decimal> _Commission;
        partial void OnCommissionChanging(Nullable<global::System.Decimal> value);
        partial void OnCommissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AmountDeposit
        {
            get
            {
                return _AmountDeposit;
            }
            set
            {
                OnAmountDepositChanging(value);
                ReportPropertyChanging("AmountDeposit");
                _AmountDeposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountDeposit");
                OnAmountDepositChanged();
            }
        }
        private Nullable<global::System.Decimal> _AmountDeposit;
        partial void OnAmountDepositChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountDepositChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AmountWithdrawal
        {
            get
            {
                return _AmountWithdrawal;
            }
            set
            {
                OnAmountWithdrawalChanging(value);
                ReportPropertyChanging("AmountWithdrawal");
                _AmountWithdrawal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountWithdrawal");
                OnAmountWithdrawalChanged();
            }
        }
        private Nullable<global::System.Decimal> _AmountWithdrawal;
        partial void OnAmountWithdrawalChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountWithdrawalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CardId
        {
            get
            {
                return _CardId;
            }
            set
            {
                OnCardIdChanging(value);
                ReportPropertyChanging("CardId");
                _CardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardId");
                OnCardIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CardId;
        partial void OnCardIdChanging(Nullable<global::System.Int32> value);
        partial void OnCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FeeCharged
        {
            get
            {
                return _FeeCharged;
            }
            set
            {
                OnFeeChargedChanging(value);
                ReportPropertyChanging("FeeCharged");
                _FeeCharged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeeCharged");
                OnFeeChargedChanged();
            }
        }
        private Nullable<global::System.Decimal> _FeeCharged;
        partial void OnFeeChargedChanging(Nullable<global::System.Decimal> value);
        partial void OnFeeChargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MarketAmountRefund
        {
            get
            {
                return _MarketAmountRefund;
            }
            set
            {
                OnMarketAmountRefundChanging(value);
                ReportPropertyChanging("MarketAmountRefund");
                _MarketAmountRefund = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketAmountRefund");
                OnMarketAmountRefundChanged();
            }
        }
        private Nullable<global::System.Decimal> _MarketAmountRefund;
        partial void OnMarketAmountRefundChanging(Nullable<global::System.Decimal> value);
        partial void OnMarketAmountRefundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisplayId
        {
            get
            {
                return _DisplayId;
            }
            set
            {
                OnDisplayIdChanging(value);
                ReportPropertyChanging("DisplayId");
                _DisplayId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayId");
                OnDisplayIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DisplayId;
        partial void OnDisplayIdChanging(Nullable<global::System.Int32> value);
        partial void OnDisplayIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="PSV_TOP_EVENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PSV_TOP_EVENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PSV_TOP_EVENT object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="sportName">Initial value of the SportName property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="is_Soccer">Initial value of the Is_Soccer property.</param>
        /// <param name="leagueName_WebDisplay">Initial value of the LeagueName_WebDisplay property.</param>
        public static PSV_TOP_EVENT CreatePSV_TOP_EVENT(global::System.Int64 id, global::System.Int32 sportID, global::System.String sportName, global::System.Int32 countryID, global::System.Boolean is_Soccer, global::System.String leagueName_WebDisplay)
        {
            PSV_TOP_EVENT pSV_TOP_EVENT = new PSV_TOP_EVENT();
            pSV_TOP_EVENT.ID = id;
            pSV_TOP_EVENT.SportID = sportID;
            pSV_TOP_EVENT.SportName = sportName;
            pSV_TOP_EVENT.CountryID = countryID;
            pSV_TOP_EVENT.Is_Soccer = is_Soccer;
            pSV_TOP_EVENT.LeagueName_WebDisplay = leagueName_WebDisplay;
            return pSV_TOP_EVENT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                if (_SportID != value)
                {
                    OnSportIDChanging(value);
                    ReportPropertyChanging("SportID");
                    _SportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportID");
                    OnSportIDChanged();
                }
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportName
        {
            get
            {
                return _SportName;
            }
            set
            {
                if (_SportName != value)
                {
                    OnSportNameChanging(value);
                    ReportPropertyChanging("SportName");
                    _SportName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SportName");
                    OnSportNameChanged();
                }
            }
        }
        private global::System.String _SportName;
        partial void OnSportNameChanging(global::System.String value);
        partial void OnSportNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Is_Soccer
        {
            get
            {
                return _Is_Soccer;
            }
            set
            {
                if (_Is_Soccer != value)
                {
                    OnIs_SoccerChanging(value);
                    ReportPropertyChanging("Is_Soccer");
                    _Is_Soccer = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Is_Soccer");
                    OnIs_SoccerChanged();
                }
            }
        }
        private global::System.Boolean _Is_Soccer;
        partial void OnIs_SoccerChanging(global::System.Boolean value);
        partial void OnIs_SoccerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeagueName_WebDisplay
        {
            get
            {
                return _LeagueName_WebDisplay;
            }
            set
            {
                if (_LeagueName_WebDisplay != value)
                {
                    OnLeagueName_WebDisplayChanging(value);
                    ReportPropertyChanging("LeagueName_WebDisplay");
                    _LeagueName_WebDisplay = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LeagueName_WebDisplay");
                    OnLeagueName_WebDisplayChanged();
                }
            }
        }
        private global::System.String _LeagueName_WebDisplay;
        partial void OnLeagueName_WebDisplayChanging(global::System.String value);
        partial void OnLeagueName_WebDisplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="PSV_TRANSACTION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PSV_TRANSACTION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PSV_TRANSACTION object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="creditCardNumber">Initial value of the CreditCardNumber property.</param>
        /// <param name="nameOnCard">Initial value of the NameOnCard property.</param>
        /// <param name="validFrom">Initial value of the ValidFrom property.</param>
        /// <param name="validTo">Initial value of the ValidTo property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        /// <param name="paymentMenthodID">Initial value of the PaymentMenthodID property.</param>
        public static PSV_TRANSACTION CreatePSV_TRANSACTION(global::System.Int64 id, global::System.String creditCardNumber, global::System.String nameOnCard, global::System.DateTime validFrom, global::System.DateTime validTo, global::System.Byte type, global::System.Decimal amount, global::System.Int32 status, global::System.Int64 memberId, global::System.Int64 paymentMenthodID)
        {
            PSV_TRANSACTION pSV_TRANSACTION = new PSV_TRANSACTION();
            pSV_TRANSACTION.ID = id;
            pSV_TRANSACTION.CreditCardNumber = creditCardNumber;
            pSV_TRANSACTION.NameOnCard = nameOnCard;
            pSV_TRANSACTION.ValidFrom = validFrom;
            pSV_TRANSACTION.ValidTo = validTo;
            pSV_TRANSACTION.Type = type;
            pSV_TRANSACTION.Amount = amount;
            pSV_TRANSACTION.Status = status;
            pSV_TRANSACTION.MemberId = memberId;
            pSV_TRANSACTION.PaymentMenthodID = paymentMenthodID;
            return pSV_TRANSACTION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Row
        {
            get
            {
                return _Row;
            }
            set
            {
                OnRowChanging(value);
                ReportPropertyChanging("Row");
                _Row = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Row");
                OnRowChanged();
            }
        }
        private Nullable<global::System.Int64> _Row;
        partial void OnRowChanging(Nullable<global::System.Int64> value);
        partial void OnRowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardType
        {
            get
            {
                return _CardType;
            }
            set
            {
                OnCardTypeChanging(value);
                ReportPropertyChanging("CardType");
                _CardType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardType");
                OnCardTypeChanged();
            }
        }
        private global::System.String _CardType;
        partial void OnCardTypeChanging(global::System.String value);
        partial void OnCardTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreditCardNumber
        {
            get
            {
                return _CreditCardNumber;
            }
            set
            {
                if (_CreditCardNumber != value)
                {
                    OnCreditCardNumberChanging(value);
                    ReportPropertyChanging("CreditCardNumber");
                    _CreditCardNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CreditCardNumber");
                    OnCreditCardNumberChanged();
                }
            }
        }
        private global::System.String _CreditCardNumber;
        partial void OnCreditCardNumberChanging(global::System.String value);
        partial void OnCreditCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameOnCard
        {
            get
            {
                return _NameOnCard;
            }
            set
            {
                if (_NameOnCard != value)
                {
                    OnNameOnCardChanging(value);
                    ReportPropertyChanging("NameOnCard");
                    _NameOnCard = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NameOnCard");
                    OnNameOnCardChanged();
                }
            }
        }
        private global::System.String _NameOnCard;
        partial void OnNameOnCardChanging(global::System.String value);
        partial void OnNameOnCardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidFrom
        {
            get
            {
                return _ValidFrom;
            }
            set
            {
                if (_ValidFrom != value)
                {
                    OnValidFromChanging(value);
                    ReportPropertyChanging("ValidFrom");
                    _ValidFrom = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValidFrom");
                    OnValidFromChanged();
                }
            }
        }
        private global::System.DateTime _ValidFrom;
        partial void OnValidFromChanging(global::System.DateTime value);
        partial void OnValidFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidTo
        {
            get
            {
                return _ValidTo;
            }
            set
            {
                if (_ValidTo != value)
                {
                    OnValidToChanging(value);
                    ReportPropertyChanging("ValidTo");
                    _ValidTo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValidTo");
                    OnValidToChanged();
                }
            }
        }
        private global::System.DateTime _ValidTo;
        partial void OnValidToChanging(global::System.DateTime value);
        partial void OnValidToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardExpirationMonth
        {
            get
            {
                return _CardExpirationMonth;
            }
            set
            {
                OnCardExpirationMonthChanging(value);
                ReportPropertyChanging("CardExpirationMonth");
                _CardExpirationMonth = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardExpirationMonth");
                OnCardExpirationMonthChanged();
            }
        }
        private global::System.String _CardExpirationMonth;
        partial void OnCardExpirationMonthChanging(global::System.String value);
        partial void OnCardExpirationMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardExpirationYear
        {
            get
            {
                return _CardExpirationYear;
            }
            set
            {
                OnCardExpirationYearChanging(value);
                ReportPropertyChanging("CardExpirationYear");
                _CardExpirationYear = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardExpirationYear");
                OnCardExpirationYearChanged();
            }
        }
        private global::System.String _CardExpirationYear;
        partial void OnCardExpirationYearChanging(global::System.String value);
        partial void OnCardExpirationYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zipcode
        {
            get
            {
                return _Zipcode;
            }
            set
            {
                OnZipcodeChanging(value);
                ReportPropertyChanging("Zipcode");
                _Zipcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zipcode");
                OnZipcodeChanged();
            }
        }
        private global::System.String _Zipcode;
        partial void OnZipcodeChanging(global::System.String value);
        partial void OnZipcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Type
        {
            get
            {
                return _Type;
            }
            set
            {
                if (_Type != value)
                {
                    OnTypeChanging(value);
                    ReportPropertyChanging("Type");
                    _Type = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Type");
                    OnTypeChanged();
                }
            }
        }
        private global::System.Byte _Type;
        partial void OnTypeChanging(global::System.Byte value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                if (_Amount != value)
                {
                    OnAmountChanging(value);
                    ReportPropertyChanging("Amount");
                    _Amount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Amount");
                    OnAmountChanged();
                }
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardId
        {
            get
            {
                return _CardId;
            }
            set
            {
                OnCardIdChanging(value);
                ReportPropertyChanging("CardId");
                _CardId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardId");
                OnCardIdChanged();
            }
        }
        private global::System.String _CardId;
        partial void OnCardIdChanging(global::System.String value);
        partial void OnCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                if (_MemberId != value)
                {
                    OnMemberIdChanging(value);
                    ReportPropertyChanging("MemberId");
                    _MemberId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberId");
                    OnMemberIdChanged();
                }
            }
        }
        private global::System.Int64 _MemberId;
        partial void OnMemberIdChanging(global::System.Int64 value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PaymentMenthodID
        {
            get
            {
                return _PaymentMenthodID;
            }
            set
            {
                if (_PaymentMenthodID != value)
                {
                    OnPaymentMenthodIDChanging(value);
                    ReportPropertyChanging("PaymentMenthodID");
                    _PaymentMenthodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentMenthodID");
                    OnPaymentMenthodIDChanged();
                }
            }
        }
        private global::System.Int64 _PaymentMenthodID;
        partial void OnPaymentMenthodIDChanging(global::System.Int64 value);
        partial void OnPaymentMenthodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ResponeTranId
        {
            get
            {
                return _ResponeTranId;
            }
            set
            {
                OnResponeTranIdChanging(value);
                ReportPropertyChanging("ResponeTranId");
                _ResponeTranId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponeTranId");
                OnResponeTranIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ResponeTranId;
        partial void OnResponeTranIdChanging(Nullable<global::System.Int64> value);
        partial void OnResponeTranIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemberEmail
        {
            get
            {
                return _MemberEmail;
            }
            set
            {
                OnMemberEmailChanging(value);
                ReportPropertyChanging("MemberEmail");
                _MemberEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemberEmail");
                OnMemberEmailChanged();
            }
        }
        private global::System.String _MemberEmail;
        partial void OnMemberEmailChanging(global::System.String value);
        partial void OnMemberEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemberIP
        {
            get
            {
                return _MemberIP;
            }
            set
            {
                OnMemberIPChanging(value);
                ReportPropertyChanging("MemberIP");
                _MemberIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemberIP");
                OnMemberIPChanged();
            }
        }
        private global::System.String _MemberIP;
        partial void OnMemberIPChanging(global::System.String value);
        partial void OnMemberIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddedDate
        {
            get
            {
                return _AddedDate;
            }
            set
            {
                OnAddedDateChanging(value);
                ReportPropertyChanging("AddedDate");
                _AddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedDate");
                OnAddedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddedDate;
        partial void OnAddedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifyDate
        {
            get
            {
                return _ModifyDate;
            }
            set
            {
                OnModifyDateChanging(value);
                ReportPropertyChanging("ModifyDate");
                _ModifyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifyDate");
                OnModifyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifyDate;
        partial void OnModifyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifyDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="ScoreInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScoreInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScoreInfo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="scorer">Initial value of the Scorer property.</param>
        /// <param name="scoreTime">Initial value of the ScoreTime property.</param>
        public static ScoreInfo CreateScoreInfo(global::System.Int64 id, global::System.String matchID, global::System.Int32 leagueID, global::System.Int32 countryID, global::System.Int32 sportID, global::System.String scorer, global::System.Int32 scoreTime)
        {
            ScoreInfo scoreInfo = new ScoreInfo();
            scoreInfo.ID = id;
            scoreInfo.MatchID = matchID;
            scoreInfo.LeagueID = leagueID;
            scoreInfo.CountryID = countryID;
            scoreInfo.SportID = sportID;
            scoreInfo.Scorer = scorer;
            scoreInfo.ScoreTime = scoreTime;
            return scoreInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Scorer
        {
            get
            {
                return _Scorer;
            }
            set
            {
                OnScorerChanging(value);
                ReportPropertyChanging("Scorer");
                _Scorer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Scorer");
                OnScorerChanged();
            }
        }
        private global::System.String _Scorer;
        partial void OnScorerChanging(global::System.String value);
        partial void OnScorerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScoreTime
        {
            get
            {
                return _ScoreTime;
            }
            set
            {
                OnScoreTimeChanging(value);
                ReportPropertyChanging("ScoreTime");
                _ScoreTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScoreTime");
                OnScoreTimeChanged();
            }
        }
        private global::System.Int32 _ScoreTime;
        partial void OnScoreTimeChanging(global::System.Int32 value);
        partial void OnScoreTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Team
        {
            get
            {
                return _Team;
            }
            set
            {
                OnTeamChanging(value);
                ReportPropertyChanging("Team");
                _Team = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Team");
                OnTeamChanged();
            }
        }
        private global::System.String _Team;
        partial void OnTeamChanging(global::System.String value);
        partial void OnTeamChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="ScorerInfoListView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScorerInfoListView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScorerInfoListView object.
        /// </summary>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="homeTeam">Initial value of the HomeTeam property.</param>
        /// <param name="awayTeam">Initial value of the AwayTeam property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static ScorerInfoListView CreateScorerInfoListView(global::System.Guid matchID, global::System.String homeTeam, global::System.String awayTeam, global::System.Int64 leagueID, global::System.Int32 sportID, global::System.Int32 countryID)
        {
            ScorerInfoListView scorerInfoListView = new ScorerInfoListView();
            scorerInfoListView.MatchID = matchID;
            scorerInfoListView.HomeTeam = homeTeam;
            scorerInfoListView.AwayTeam = awayTeam;
            scorerInfoListView.LeagueID = leagueID;
            scorerInfoListView.SportID = sportID;
            scorerInfoListView.CountryID = countryID;
            return scorerInfoListView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                if (_MatchID != value)
                {
                    OnMatchIDChanging(value);
                    ReportPropertyChanging("MatchID");
                    _MatchID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MatchID");
                    OnMatchIDChanged();
                }
            }
        }
        private global::System.Guid _MatchID;
        partial void OnMatchIDChanging(global::System.Guid value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> HomeTeam_FTGoals
        {
            get
            {
                return _HomeTeam_FTGoals;
            }
            set
            {
                OnHomeTeam_FTGoalsChanging(value);
                ReportPropertyChanging("HomeTeam_FTGoals");
                _HomeTeam_FTGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeTeam_FTGoals");
                OnHomeTeam_FTGoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _HomeTeam_FTGoals;
        partial void OnHomeTeam_FTGoalsChanging(Nullable<global::System.Int16> value);
        partial void OnHomeTeam_FTGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> AwayTeam_FTGoals
        {
            get
            {
                return _AwayTeam_FTGoals;
            }
            set
            {
                OnAwayTeam_FTGoalsChanging(value);
                ReportPropertyChanging("AwayTeam_FTGoals");
                _AwayTeam_FTGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayTeam_FTGoals");
                OnAwayTeam_FTGoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _AwayTeam_FTGoals;
        partial void OnAwayTeam_FTGoalsChanging(Nullable<global::System.Int16> value);
        partial void OnAwayTeam_FTGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomeTeam
        {
            get
            {
                return _HomeTeam;
            }
            set
            {
                if (_HomeTeam != value)
                {
                    OnHomeTeamChanging(value);
                    ReportPropertyChanging("HomeTeam");
                    _HomeTeam = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HomeTeam");
                    OnHomeTeamChanged();
                }
            }
        }
        private global::System.String _HomeTeam;
        partial void OnHomeTeamChanging(global::System.String value);
        partial void OnHomeTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AwayTeam
        {
            get
            {
                return _AwayTeam;
            }
            set
            {
                if (_AwayTeam != value)
                {
                    OnAwayTeamChanging(value);
                    ReportPropertyChanging("AwayTeam");
                    _AwayTeam = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AwayTeam");
                    OnAwayTeamChanged();
                }
            }
        }
        private global::System.String _AwayTeam;
        partial void OnAwayTeamChanging(global::System.String value);
        partial void OnAwayTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MatchStatus
        {
            get
            {
                return _MatchStatus;
            }
            set
            {
                OnMatchStatusChanging(value);
                ReportPropertyChanging("MatchStatus");
                _MatchStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MatchStatus");
                OnMatchStatusChanged();
            }
        }
        private global::System.String _MatchStatus;
        partial void OnMatchStatusChanging(global::System.String value);
        partial void OnMatchStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                if (_LeagueID != value)
                {
                    OnLeagueIDChanging(value);
                    ReportPropertyChanging("LeagueID");
                    _LeagueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeagueID");
                    OnLeagueIDChanged();
                }
            }
        }
        private global::System.Int64 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int64 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                if (_SportID != value)
                {
                    OnSportIDChanging(value);
                    ReportPropertyChanging("SportID");
                    _SportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportID");
                    OnSportIDChanged();
                }
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDateTime;
        partial void OnStartDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Scorer
        {
            get
            {
                return _Scorer;
            }
            set
            {
                OnScorerChanging(value);
                ReportPropertyChanging("Scorer");
                _Scorer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Scorer");
                OnScorerChanged();
            }
        }
        private global::System.String _Scorer;
        partial void OnScorerChanging(global::System.String value);
        partial void OnScorerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScoreTime
        {
            get
            {
                return _ScoreTime;
            }
            set
            {
                OnScoreTimeChanging(value);
                ReportPropertyChanging("ScoreTime");
                _ScoreTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScoreTime");
                OnScoreTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _ScoreTime;
        partial void OnScoreTimeChanging(Nullable<global::System.Int32> value);
        partial void OnScoreTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Team
        {
            get
            {
                return _Team;
            }
            set
            {
                OnTeamChanging(value);
                ReportPropertyChanging("Team");
                _Team = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Team");
                OnTeamChanged();
            }
        }
        private global::System.String _Team;
        partial void OnTeamChanging(global::System.String value);
        partial void OnTeamChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="ScoreTypeMST")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScoreTypeMST : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScoreTypeMST object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="scoreType">Initial value of the ScoreType property.</param>
        public static ScoreTypeMST CreateScoreTypeMST(global::System.Int16 id, global::System.String scoreType)
        {
            ScoreTypeMST scoreTypeMST = new ScoreTypeMST();
            scoreTypeMST.ID = id;
            scoreTypeMST.ScoreType = scoreType;
            return scoreTypeMST;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int16 _ID;
        partial void OnIDChanging(global::System.Int16 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScoreType
        {
            get
            {
                return _ScoreType;
            }
            set
            {
                OnScoreTypeChanging(value);
                ReportPropertyChanging("ScoreType");
                _ScoreType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScoreType");
                OnScoreTypeChanged();
            }
        }
        private global::System.String _ScoreType;
        partial void OnScoreTypeChanging(global::System.String value);
        partial void OnScoreTypeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Soccer_AsianHandicap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Soccer_AsianHandicap : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Soccer_AsianHandicap object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="homeHandicap">Initial value of the HomeHandicap property.</param>
        /// <param name="homePrice">Initial value of the HomePrice property.</param>
        /// <param name="awayPrice">Initial value of the AwayPrice property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        public static Soccer_AsianHandicap CreateSoccer_AsianHandicap(global::System.Guid id, global::System.String matchID, global::System.Int32 leagueID, global::System.Int32 countryID, global::System.Int32 sportID, global::System.String homeHandicap, global::System.Decimal homePrice, global::System.Decimal awayPrice, global::System.Byte period)
        {
            Soccer_AsianHandicap soccer_AsianHandicap = new Soccer_AsianHandicap();
            soccer_AsianHandicap.ID = id;
            soccer_AsianHandicap.MatchID = matchID;
            soccer_AsianHandicap.LeagueID = leagueID;
            soccer_AsianHandicap.CountryID = countryID;
            soccer_AsianHandicap.SportID = sportID;
            soccer_AsianHandicap.HomeHandicap = homeHandicap;
            soccer_AsianHandicap.HomePrice = homePrice;
            soccer_AsianHandicap.AwayPrice = awayPrice;
            soccer_AsianHandicap.Period = period;
            return soccer_AsianHandicap;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomeHandicap
        {
            get
            {
                return _HomeHandicap;
            }
            set
            {
                OnHomeHandicapChanging(value);
                ReportPropertyChanging("HomeHandicap");
                _HomeHandicap = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HomeHandicap");
                OnHomeHandicapChanged();
            }
        }
        private global::System.String _HomeHandicap;
        partial void OnHomeHandicapChanging(global::System.String value);
        partial void OnHomeHandicapChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HomePrice
        {
            get
            {
                return _HomePrice;
            }
            set
            {
                OnHomePriceChanging(value);
                ReportPropertyChanging("HomePrice");
                _HomePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomePrice");
                OnHomePriceChanged();
            }
        }
        private global::System.Decimal _HomePrice;
        partial void OnHomePriceChanging(global::System.Decimal value);
        partial void OnHomePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AwayPrice
        {
            get
            {
                return _AwayPrice;
            }
            set
            {
                OnAwayPriceChanging(value);
                ReportPropertyChanging("AwayPrice");
                _AwayPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayPrice");
                OnAwayPriceChanged();
            }
        }
        private global::System.Decimal _AwayPrice;
        partial void OnAwayPriceChanging(global::System.Decimal value);
        partial void OnAwayPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdated;
        partial void OnLastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InPlay
        {
            get
            {
                return _InPlay;
            }
            set
            {
                OnInPlayChanging(value);
                ReportPropertyChanging("InPlay");
                _InPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InPlay");
                OnInPlayChanged();
            }
        }
        private Nullable<global::System.DateTime> _InPlay;
        partial void OnInPlayChanging(Nullable<global::System.DateTime> value);
        partial void OnInPlayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.Byte _Period;
        partial void OnPeriodChanging(global::System.Byte value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Entrants
        {
            get
            {
                return _Entrants;
            }
            set
            {
                OnEntrantsChanging(value);
                ReportPropertyChanging("Entrants");
                _Entrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entrants");
                OnEntrantsChanged();
            }
        }
        private Nullable<global::System.Int16> _Entrants;
        partial void OnEntrantsChanging(Nullable<global::System.Int16> value);
        partial void OnEntrantsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Soccer_CorrectScores")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Soccer_CorrectScores : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Soccer_CorrectScores object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="correctScore">Initial value of the CorrectScore property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        public static Soccer_CorrectScores CreateSoccer_CorrectScores(global::System.Guid id, global::System.String matchID, global::System.Int32 leagueID, global::System.Int32 countryID, global::System.Int32 sportID, global::System.String correctScore, global::System.Decimal price, global::System.DateTime lastUpdated, global::System.Byte period)
        {
            Soccer_CorrectScores soccer_CorrectScores = new Soccer_CorrectScores();
            soccer_CorrectScores.ID = id;
            soccer_CorrectScores.MatchID = matchID;
            soccer_CorrectScores.LeagueID = leagueID;
            soccer_CorrectScores.CountryID = countryID;
            soccer_CorrectScores.SportID = sportID;
            soccer_CorrectScores.CorrectScore = correctScore;
            soccer_CorrectScores.Price = price;
            soccer_CorrectScores.LastUpdated = lastUpdated;
            soccer_CorrectScores.Period = period;
            return soccer_CorrectScores;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CorrectScore
        {
            get
            {
                return _CorrectScore;
            }
            set
            {
                OnCorrectScoreChanging(value);
                ReportPropertyChanging("CorrectScore");
                _CorrectScore = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CorrectScore");
                OnCorrectScoreChanged();
            }
        }
        private global::System.String _CorrectScore;
        partial void OnCorrectScoreChanging(global::System.String value);
        partial void OnCorrectScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InPlay
        {
            get
            {
                return _InPlay;
            }
            set
            {
                OnInPlayChanging(value);
                ReportPropertyChanging("InPlay");
                _InPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InPlay");
                OnInPlayChanged();
            }
        }
        private Nullable<global::System.Boolean> _InPlay;
        partial void OnInPlayChanging(Nullable<global::System.Boolean> value);
        partial void OnInPlayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.Byte _Period;
        partial void OnPeriodChanging(global::System.Byte value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Entrants
        {
            get
            {
                return _Entrants;
            }
            set
            {
                OnEntrantsChanging(value);
                ReportPropertyChanging("Entrants");
                _Entrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entrants");
                OnEntrantsChanged();
            }
        }
        private Nullable<global::System.Int16> _Entrants;
        partial void OnEntrantsChanging(Nullable<global::System.Int16> value);
        partial void OnEntrantsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Soccer_DrawNoBet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Soccer_DrawNoBet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Soccer_DrawNoBet object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="awayPrice">Initial value of the AwayPrice property.</param>
        /// <param name="entrants">Initial value of the Entrants property.</param>
        public static Soccer_DrawNoBet CreateSoccer_DrawNoBet(global::System.Guid id, global::System.String matchID, global::System.Int32 leagueID, global::System.Int32 countryID, global::System.Int32 sportID, global::System.Decimal awayPrice, global::System.Int16 entrants)
        {
            Soccer_DrawNoBet soccer_DrawNoBet = new Soccer_DrawNoBet();
            soccer_DrawNoBet.ID = id;
            soccer_DrawNoBet.MatchID = matchID;
            soccer_DrawNoBet.LeagueID = leagueID;
            soccer_DrawNoBet.CountryID = countryID;
            soccer_DrawNoBet.SportID = sportID;
            soccer_DrawNoBet.AwayPrice = awayPrice;
            soccer_DrawNoBet.Entrants = entrants;
            return soccer_DrawNoBet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HomePrice
        {
            get
            {
                return _HomePrice;
            }
            set
            {
                OnHomePriceChanging(value);
                ReportPropertyChanging("HomePrice");
                _HomePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomePrice");
                OnHomePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _HomePrice;
        partial void OnHomePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnHomePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AwayPrice
        {
            get
            {
                return _AwayPrice;
            }
            set
            {
                OnAwayPriceChanging(value);
                ReportPropertyChanging("AwayPrice");
                _AwayPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayPrice");
                OnAwayPriceChanged();
            }
        }
        private global::System.Decimal _AwayPrice;
        partial void OnAwayPriceChanging(global::System.Decimal value);
        partial void OnAwayPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdated;
        partial void OnLastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InPlay
        {
            get
            {
                return _InPlay;
            }
            set
            {
                OnInPlayChanging(value);
                ReportPropertyChanging("InPlay");
                _InPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InPlay");
                OnInPlayChanged();
            }
        }
        private Nullable<global::System.Boolean> _InPlay;
        partial void OnInPlayChanging(Nullable<global::System.Boolean> value);
        partial void OnInPlayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.String _Period;
        partial void OnPeriodChanging(global::System.String value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Entrants
        {
            get
            {
                return _Entrants;
            }
            set
            {
                OnEntrantsChanging(value);
                ReportPropertyChanging("Entrants");
                _Entrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entrants");
                OnEntrantsChanged();
            }
        }
        private global::System.Int16 _Entrants;
        partial void OnEntrantsChanging(global::System.Int16 value);
        partial void OnEntrantsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Soccer_MatchedBets")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Soccer_MatchedBets : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Soccer_MatchedBets object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="backBetID">Initial value of the BackBetID property.</param>
        /// <param name="layBetID">Initial value of the LayBetID property.</param>
        /// <param name="matchedPrice">Initial value of the MatchedPrice property.</param>
        /// <param name="matchedStake">Initial value of the MatchedStake property.</param>
        /// <param name="commissionCharged">Initial value of the CommissionCharged property.</param>
        /// <param name="matchedTime">Initial value of the MatchedTime property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        public static Soccer_MatchedBets CreateSoccer_MatchedBets(global::System.Guid id, global::System.String backBetID, global::System.String layBetID, global::System.Decimal matchedPrice, global::System.Decimal matchedStake, global::System.Decimal commissionCharged, global::System.DateTime matchedTime, global::System.String matchID, global::System.Int32 countryID, global::System.Int32 sportID, global::System.Int32 leagueID)
        {
            Soccer_MatchedBets soccer_MatchedBets = new Soccer_MatchedBets();
            soccer_MatchedBets.ID = id;
            soccer_MatchedBets.BackBetID = backBetID;
            soccer_MatchedBets.LayBetID = layBetID;
            soccer_MatchedBets.MatchedPrice = matchedPrice;
            soccer_MatchedBets.MatchedStake = matchedStake;
            soccer_MatchedBets.CommissionCharged = commissionCharged;
            soccer_MatchedBets.MatchedTime = matchedTime;
            soccer_MatchedBets.MatchID = matchID;
            soccer_MatchedBets.CountryID = countryID;
            soccer_MatchedBets.SportID = sportID;
            soccer_MatchedBets.LeagueID = leagueID;
            return soccer_MatchedBets;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BackBetID
        {
            get
            {
                return _BackBetID;
            }
            set
            {
                OnBackBetIDChanging(value);
                ReportPropertyChanging("BackBetID");
                _BackBetID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BackBetID");
                OnBackBetIDChanged();
            }
        }
        private global::System.String _BackBetID;
        partial void OnBackBetIDChanging(global::System.String value);
        partial void OnBackBetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LayBetID
        {
            get
            {
                return _LayBetID;
            }
            set
            {
                OnLayBetIDChanging(value);
                ReportPropertyChanging("LayBetID");
                _LayBetID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LayBetID");
                OnLayBetIDChanged();
            }
        }
        private global::System.String _LayBetID;
        partial void OnLayBetIDChanging(global::System.String value);
        partial void OnLayBetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MatchedPrice
        {
            get
            {
                return _MatchedPrice;
            }
            set
            {
                OnMatchedPriceChanging(value);
                ReportPropertyChanging("MatchedPrice");
                _MatchedPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MatchedPrice");
                OnMatchedPriceChanged();
            }
        }
        private global::System.Decimal _MatchedPrice;
        partial void OnMatchedPriceChanging(global::System.Decimal value);
        partial void OnMatchedPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MatchedStake
        {
            get
            {
                return _MatchedStake;
            }
            set
            {
                OnMatchedStakeChanging(value);
                ReportPropertyChanging("MatchedStake");
                _MatchedStake = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MatchedStake");
                OnMatchedStakeChanged();
            }
        }
        private global::System.Decimal _MatchedStake;
        partial void OnMatchedStakeChanging(global::System.Decimal value);
        partial void OnMatchedStakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CommissionCharged
        {
            get
            {
                return _CommissionCharged;
            }
            set
            {
                OnCommissionChargedChanging(value);
                ReportPropertyChanging("CommissionCharged");
                _CommissionCharged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionCharged");
                OnCommissionChargedChanged();
            }
        }
        private global::System.Decimal _CommissionCharged;
        partial void OnCommissionChargedChanging(global::System.Decimal value);
        partial void OnCommissionChargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MatchedTime
        {
            get
            {
                return _MatchedTime;
            }
            set
            {
                OnMatchedTimeChanging(value);
                ReportPropertyChanging("MatchedTime");
                _MatchedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MatchedTime");
                OnMatchedTimeChanged();
            }
        }
        private global::System.DateTime _MatchedTime;
        partial void OnMatchedTimeChanging(global::System.DateTime value);
        partial void OnMatchedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Soccer_MatchOdds")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Soccer_MatchOdds : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Soccer_MatchOdds object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="homePrice">Initial value of the HomePrice property.</param>
        /// <param name="awayPrice">Initial value of the AwayPrice property.</param>
        /// <param name="drawPrice">Initial value of the DrawPrice property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="entrants">Initial value of the Entrants property.</param>
        public static Soccer_MatchOdds CreateSoccer_MatchOdds(global::System.Guid id, global::System.String matchID, global::System.Int32 leagueID, global::System.Int32 countryID, global::System.Int32 sportID, global::System.Decimal homePrice, global::System.Decimal awayPrice, global::System.Decimal drawPrice, global::System.Byte period, global::System.Int16 entrants)
        {
            Soccer_MatchOdds soccer_MatchOdds = new Soccer_MatchOdds();
            soccer_MatchOdds.ID = id;
            soccer_MatchOdds.MatchID = matchID;
            soccer_MatchOdds.LeagueID = leagueID;
            soccer_MatchOdds.CountryID = countryID;
            soccer_MatchOdds.SportID = sportID;
            soccer_MatchOdds.HomePrice = homePrice;
            soccer_MatchOdds.AwayPrice = awayPrice;
            soccer_MatchOdds.DrawPrice = drawPrice;
            soccer_MatchOdds.Period = period;
            soccer_MatchOdds.Entrants = entrants;
            return soccer_MatchOdds;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HomePrice
        {
            get
            {
                return _HomePrice;
            }
            set
            {
                OnHomePriceChanging(value);
                ReportPropertyChanging("HomePrice");
                _HomePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomePrice");
                OnHomePriceChanged();
            }
        }
        private global::System.Decimal _HomePrice;
        partial void OnHomePriceChanging(global::System.Decimal value);
        partial void OnHomePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AwayPrice
        {
            get
            {
                return _AwayPrice;
            }
            set
            {
                OnAwayPriceChanging(value);
                ReportPropertyChanging("AwayPrice");
                _AwayPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayPrice");
                OnAwayPriceChanged();
            }
        }
        private global::System.Decimal _AwayPrice;
        partial void OnAwayPriceChanging(global::System.Decimal value);
        partial void OnAwayPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DrawPrice
        {
            get
            {
                return _DrawPrice;
            }
            set
            {
                OnDrawPriceChanging(value);
                ReportPropertyChanging("DrawPrice");
                _DrawPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrawPrice");
                OnDrawPriceChanged();
            }
        }
        private global::System.Decimal _DrawPrice;
        partial void OnDrawPriceChanging(global::System.Decimal value);
        partial void OnDrawPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdated;
        partial void OnLastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InPlay
        {
            get
            {
                return _InPlay;
            }
            set
            {
                OnInPlayChanging(value);
                ReportPropertyChanging("InPlay");
                _InPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InPlay");
                OnInPlayChanged();
            }
        }
        private Nullable<global::System.Boolean> _InPlay;
        partial void OnInPlayChanging(Nullable<global::System.Boolean> value);
        partial void OnInPlayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.Byte _Period;
        partial void OnPeriodChanging(global::System.Byte value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Entrants
        {
            get
            {
                return _Entrants;
            }
            set
            {
                OnEntrantsChanging(value);
                ReportPropertyChanging("Entrants");
                _Entrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entrants");
                OnEntrantsChanged();
            }
        }
        private global::System.Int16 _Entrants;
        partial void OnEntrantsChanging(global::System.Int16 value);
        partial void OnEntrantsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Soccer_TotalGoalsOE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Soccer_TotalGoalsOE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Soccer_TotalGoalsOE object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="oddPrice">Initial value of the OddPrice property.</param>
        /// <param name="evenPrice">Initial value of the EvenPrice property.</param>
        /// <param name="inPlay">Initial value of the InPlay property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="xMLFeedsFile">Initial value of the XMLFeedsFile property.</param>
        /// <param name="entrants">Initial value of the Entrants property.</param>
        public static Soccer_TotalGoalsOE CreateSoccer_TotalGoalsOE(global::System.Int64 id, global::System.Int64 matchID, global::System.Decimal oddPrice, global::System.Decimal evenPrice, global::System.Boolean inPlay, global::System.Byte period, global::System.String xMLFeedsFile, global::System.Int32 entrants)
        {
            Soccer_TotalGoalsOE soccer_TotalGoalsOE = new Soccer_TotalGoalsOE();
            soccer_TotalGoalsOE.ID = id;
            soccer_TotalGoalsOE.MatchID = matchID;
            soccer_TotalGoalsOE.OddPrice = oddPrice;
            soccer_TotalGoalsOE.EvenPrice = evenPrice;
            soccer_TotalGoalsOE.InPlay = inPlay;
            soccer_TotalGoalsOE.Period = period;
            soccer_TotalGoalsOE.XMLFeedsFile = xMLFeedsFile;
            soccer_TotalGoalsOE.Entrants = entrants;
            return soccer_TotalGoalsOE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.Int64 _MatchID;
        partial void OnMatchIDChanging(global::System.Int64 value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OddPrice
        {
            get
            {
                return _OddPrice;
            }
            set
            {
                OnOddPriceChanging(value);
                ReportPropertyChanging("OddPrice");
                _OddPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OddPrice");
                OnOddPriceChanged();
            }
        }
        private global::System.Decimal _OddPrice;
        partial void OnOddPriceChanging(global::System.Decimal value);
        partial void OnOddPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EvenPrice
        {
            get
            {
                return _EvenPrice;
            }
            set
            {
                OnEvenPriceChanging(value);
                ReportPropertyChanging("EvenPrice");
                _EvenPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EvenPrice");
                OnEvenPriceChanged();
            }
        }
        private global::System.Decimal _EvenPrice;
        partial void OnEvenPriceChanging(global::System.Decimal value);
        partial void OnEvenPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdated;
        partial void OnLastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean InPlay
        {
            get
            {
                return _InPlay;
            }
            set
            {
                OnInPlayChanging(value);
                ReportPropertyChanging("InPlay");
                _InPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InPlay");
                OnInPlayChanged();
            }
        }
        private global::System.Boolean _InPlay;
        partial void OnInPlayChanging(global::System.Boolean value);
        partial void OnInPlayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBestPrice
        {
            get
            {
                return _IsBestPrice;
            }
            set
            {
                OnIsBestPriceChanging(value);
                ReportPropertyChanging("IsBestPrice");
                _IsBestPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBestPrice");
                OnIsBestPriceChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBestPrice;
        partial void OnIsBestPriceChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBestPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.Byte _Period;
        partial void OnPeriodChanging(global::System.Byte value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String XMLFeedsFile
        {
            get
            {
                return _XMLFeedsFile;
            }
            set
            {
                OnXMLFeedsFileChanging(value);
                ReportPropertyChanging("XMLFeedsFile");
                _XMLFeedsFile = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("XMLFeedsFile");
                OnXMLFeedsFileChanged();
            }
        }
        private global::System.String _XMLFeedsFile;
        partial void OnXMLFeedsFileChanging(global::System.String value);
        partial void OnXMLFeedsFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Entrants
        {
            get
            {
                return _Entrants;
            }
            set
            {
                OnEntrantsChanging(value);
                ReportPropertyChanging("Entrants");
                _Entrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entrants");
                OnEntrantsChanged();
            }
        }
        private global::System.Int32 _Entrants;
        partial void OnEntrantsChanging(global::System.Int32 value);
        partial void OnEntrantsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Soccer_TotalGoalsOU")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Soccer_TotalGoalsOU : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Soccer_TotalGoalsOU object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="oU">Initial value of the OU property.</param>
        /// <param name="overPrice">Initial value of the OverPrice property.</param>
        /// <param name="underPrice">Initial value of the UnderPrice property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="marketCloseTime">Initial value of the MarketCloseTime property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="entrants">Initial value of the Entrants property.</param>
        public static Soccer_TotalGoalsOU CreateSoccer_TotalGoalsOU(global::System.Guid id, global::System.String matchID, global::System.Int32 leagueID, global::System.Int32 countryID, global::System.Int32 sportID, global::System.Decimal oU, global::System.Decimal overPrice, global::System.Decimal underPrice, global::System.DateTime lastUpdated, global::System.DateTime marketCloseTime, global::System.Byte period, global::System.Int32 entrants)
        {
            Soccer_TotalGoalsOU soccer_TotalGoalsOU = new Soccer_TotalGoalsOU();
            soccer_TotalGoalsOU.ID = id;
            soccer_TotalGoalsOU.MatchID = matchID;
            soccer_TotalGoalsOU.LeagueID = leagueID;
            soccer_TotalGoalsOU.CountryID = countryID;
            soccer_TotalGoalsOU.SportID = sportID;
            soccer_TotalGoalsOU.OU = oU;
            soccer_TotalGoalsOU.OverPrice = overPrice;
            soccer_TotalGoalsOU.UnderPrice = underPrice;
            soccer_TotalGoalsOU.LastUpdated = lastUpdated;
            soccer_TotalGoalsOU.MarketCloseTime = marketCloseTime;
            soccer_TotalGoalsOU.Period = period;
            soccer_TotalGoalsOU.Entrants = entrants;
            return soccer_TotalGoalsOU;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OU
        {
            get
            {
                return _OU;
            }
            set
            {
                OnOUChanging(value);
                ReportPropertyChanging("OU");
                _OU = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OU");
                OnOUChanged();
            }
        }
        private global::System.Decimal _OU;
        partial void OnOUChanging(global::System.Decimal value);
        partial void OnOUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OverPrice
        {
            get
            {
                return _OverPrice;
            }
            set
            {
                OnOverPriceChanging(value);
                ReportPropertyChanging("OverPrice");
                _OverPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverPrice");
                OnOverPriceChanged();
            }
        }
        private global::System.Decimal _OverPrice;
        partial void OnOverPriceChanging(global::System.Decimal value);
        partial void OnOverPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnderPrice
        {
            get
            {
                return _UnderPrice;
            }
            set
            {
                OnUnderPriceChanging(value);
                ReportPropertyChanging("UnderPrice");
                _UnderPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnderPrice");
                OnUnderPriceChanged();
            }
        }
        private global::System.Decimal _UnderPrice;
        partial void OnUnderPriceChanging(global::System.Decimal value);
        partial void OnUnderPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InPlay
        {
            get
            {
                return _InPlay;
            }
            set
            {
                OnInPlayChanging(value);
                ReportPropertyChanging("InPlay");
                _InPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InPlay");
                OnInPlayChanged();
            }
        }
        private Nullable<global::System.Boolean> _InPlay;
        partial void OnInPlayChanging(Nullable<global::System.Boolean> value);
        partial void OnInPlayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private global::System.DateTime _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(global::System.DateTime value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.Byte _Period;
        partial void OnPeriodChanging(global::System.Byte value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Entrants
        {
            get
            {
                return _Entrants;
            }
            set
            {
                OnEntrantsChanging(value);
                ReportPropertyChanging("Entrants");
                _Entrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entrants");
                OnEntrantsChanged();
            }
        }
        private global::System.Int32 _Entrants;
        partial void OnEntrantsChanging(global::System.Int32 value);
        partial void OnEntrantsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Soccer_WinningMargin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Soccer_WinningMargin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Soccer_WinningMargin object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="winningMargin">Initial value of the WinningMargin property.</param>
        /// <param name="winningTeam">Initial value of the WinningTeam property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="entrants">Initial value of the Entrants property.</param>
        public static Soccer_WinningMargin CreateSoccer_WinningMargin(global::System.Int64 id, global::System.Int64 matchID, global::System.Int16 winningMargin, global::System.String winningTeam, global::System.Decimal price, global::System.Int16 period, global::System.Int16 entrants)
        {
            Soccer_WinningMargin soccer_WinningMargin = new Soccer_WinningMargin();
            soccer_WinningMargin.ID = id;
            soccer_WinningMargin.MatchID = matchID;
            soccer_WinningMargin.WinningMargin = winningMargin;
            soccer_WinningMargin.WinningTeam = winningTeam;
            soccer_WinningMargin.Price = price;
            soccer_WinningMargin.Period = period;
            soccer_WinningMargin.Entrants = entrants;
            return soccer_WinningMargin;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.Int64 _MatchID;
        partial void OnMatchIDChanging(global::System.Int64 value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 WinningMargin
        {
            get
            {
                return _WinningMargin;
            }
            set
            {
                OnWinningMarginChanging(value);
                ReportPropertyChanging("WinningMargin");
                _WinningMargin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WinningMargin");
                OnWinningMarginChanged();
            }
        }
        private global::System.Int16 _WinningMargin;
        partial void OnWinningMarginChanging(global::System.Int16 value);
        partial void OnWinningMarginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WinningTeam
        {
            get
            {
                return _WinningTeam;
            }
            set
            {
                OnWinningTeamChanging(value);
                ReportPropertyChanging("WinningTeam");
                _WinningTeam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WinningTeam");
                OnWinningTeamChanged();
            }
        }
        private global::System.String _WinningTeam;
        partial void OnWinningTeamChanging(global::System.String value);
        partial void OnWinningTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdated;
        partial void OnLastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InPlay
        {
            get
            {
                return _InPlay;
            }
            set
            {
                OnInPlayChanging(value);
                ReportPropertyChanging("InPlay");
                _InPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InPlay");
                OnInPlayChanged();
            }
        }
        private Nullable<global::System.Boolean> _InPlay;
        partial void OnInPlayChanging(Nullable<global::System.Boolean> value);
        partial void OnInPlayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketClosingTime
        {
            get
            {
                return _MarketClosingTime;
            }
            set
            {
                OnMarketClosingTimeChanging(value);
                ReportPropertyChanging("MarketClosingTime");
                _MarketClosingTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketClosingTime");
                OnMarketClosingTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketClosingTime;
        partial void OnMarketClosingTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketClosingTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.Int16 _Period;
        partial void OnPeriodChanging(global::System.Int16 value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBestPrice
        {
            get
            {
                return _IsBestPrice;
            }
            set
            {
                OnIsBestPriceChanging(value);
                ReportPropertyChanging("IsBestPrice");
                _IsBestPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBestPrice");
                OnIsBestPriceChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBestPrice;
        partial void OnIsBestPriceChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBestPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XMLFeedsFile
        {
            get
            {
                return _XMLFeedsFile;
            }
            set
            {
                OnXMLFeedsFileChanging(value);
                ReportPropertyChanging("XMLFeedsFile");
                _XMLFeedsFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("XMLFeedsFile");
                OnXMLFeedsFileChanged();
            }
        }
        private global::System.String _XMLFeedsFile;
        partial void OnXMLFeedsFileChanging(global::System.String value);
        partial void OnXMLFeedsFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Entrants
        {
            get
            {
                return _Entrants;
            }
            set
            {
                OnEntrantsChanging(value);
                ReportPropertyChanging("Entrants");
                _Entrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entrants");
                OnEntrantsChanged();
            }
        }
        private global::System.Int16 _Entrants;
        partial void OnEntrantsChanging(global::System.Int16 value);
        partial void OnEntrantsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="SoccerCountry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SoccerCountry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SoccerCountry object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        public static SoccerCountry CreateSoccerCountry(global::System.Int32 id, global::System.String country)
        {
            SoccerCountry soccerCountry = new SoccerCountry();
            soccerCountry.ID = id;
            soccerCountry.Country = country;
            return soccerCountry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Goalserve_OddsFeed
        {
            get
            {
                return _Goalserve_OddsFeed;
            }
            set
            {
                OnGoalserve_OddsFeedChanging(value);
                ReportPropertyChanging("Goalserve_OddsFeed");
                _Goalserve_OddsFeed = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Goalserve_OddsFeed");
                OnGoalserve_OddsFeedChanged();
            }
        }
        private global::System.String _Goalserve_OddsFeed;
        partial void OnGoalserve_OddsFeedChanging(global::System.String value);
        partial void OnGoalserve_OddsFeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Goalserve_LivescoreFeed
        {
            get
            {
                return _Goalserve_LivescoreFeed;
            }
            set
            {
                OnGoalserve_LivescoreFeedChanging(value);
                ReportPropertyChanging("Goalserve_LivescoreFeed");
                _Goalserve_LivescoreFeed = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Goalserve_LivescoreFeed");
                OnGoalserve_LivescoreFeedChanged();
            }
        }
        private global::System.String _Goalserve_LivescoreFeed;
        partial void OnGoalserve_LivescoreFeedChanging(global::System.String value);
        partial void OnGoalserve_LivescoreFeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Betclick_OddsFeed
        {
            get
            {
                return _Betclick_OddsFeed;
            }
            set
            {
                OnBetclick_OddsFeedChanging(value);
                ReportPropertyChanging("Betclick_OddsFeed");
                _Betclick_OddsFeed = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Betclick_OddsFeed");
                OnBetclick_OddsFeedChanged();
            }
        }
        private global::System.String _Betclick_OddsFeed;
        partial void OnBetclick_OddsFeedChanging(global::System.String value);
        partial void OnBetclick_OddsFeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> International
        {
            get
            {
                return _International;
            }
            set
            {
                OnInternationalChanging(value);
                ReportPropertyChanging("International");
                _International = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("International");
                OnInternationalChanged();
            }
        }
        private Nullable<global::System.Boolean> _International;
        partial void OnInternationalChanging(Nullable<global::System.Boolean> value);
        partial void OnInternationalChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="SoccerLeague")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SoccerLeague : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SoccerLeague object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="is_Soccer">Initial value of the Is_Soccer property.</param>
        /// <param name="leagueName_Goalserve">Initial value of the LeagueName_Goalserve property.</param>
        /// <param name="leagueName_WebDisplay">Initial value of the LeagueName_WebDisplay property.</param>
        public static SoccerLeague CreateSoccerLeague(global::System.Int64 id, global::System.Int32 sportID, global::System.Int32 countryID, global::System.Boolean is_Soccer, global::System.String leagueName_Goalserve, global::System.String leagueName_WebDisplay)
        {
            SoccerLeague soccerLeague = new SoccerLeague();
            soccerLeague.ID = id;
            soccerLeague.SportID = sportID;
            soccerLeague.CountryID = countryID;
            soccerLeague.Is_Soccer = is_Soccer;
            soccerLeague.LeagueName_Goalserve = leagueName_Goalserve;
            soccerLeague.LeagueName_WebDisplay = leagueName_WebDisplay;
            return soccerLeague;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                if (_SportID != value)
                {
                    OnSportIDChanging(value);
                    ReportPropertyChanging("SportID");
                    _SportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportID");
                    OnSportIDChanged();
                }
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Is_Soccer
        {
            get
            {
                return _Is_Soccer;
            }
            set
            {
                OnIs_SoccerChanging(value);
                ReportPropertyChanging("Is_Soccer");
                _Is_Soccer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Is_Soccer");
                OnIs_SoccerChanged();
            }
        }
        private global::System.Boolean _Is_Soccer;
        partial void OnIs_SoccerChanging(global::System.Boolean value);
        partial void OnIs_SoccerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeagueName_Goalserve
        {
            get
            {
                return _LeagueName_Goalserve;
            }
            set
            {
                OnLeagueName_GoalserveChanging(value);
                ReportPropertyChanging("LeagueName_Goalserve");
                _LeagueName_Goalserve = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LeagueName_Goalserve");
                OnLeagueName_GoalserveChanged();
            }
        }
        private global::System.String _LeagueName_Goalserve;
        partial void OnLeagueName_GoalserveChanging(global::System.String value);
        partial void OnLeagueName_GoalserveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeagueName_Betclick
        {
            get
            {
                return _LeagueName_Betclick;
            }
            set
            {
                OnLeagueName_BetclickChanging(value);
                ReportPropertyChanging("LeagueName_Betclick");
                _LeagueName_Betclick = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LeagueName_Betclick");
                OnLeagueName_BetclickChanged();
            }
        }
        private global::System.String _LeagueName_Betclick;
        partial void OnLeagueName_BetclickChanging(global::System.String value);
        partial void OnLeagueName_BetclickChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeagueName_WebDisplay
        {
            get
            {
                return _LeagueName_WebDisplay;
            }
            set
            {
                OnLeagueName_WebDisplayChanging(value);
                ReportPropertyChanging("LeagueName_WebDisplay");
                _LeagueName_WebDisplay = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LeagueName_WebDisplay");
                OnLeagueName_WebDisplayChanged();
            }
        }
        private global::System.String _LeagueName_WebDisplay;
        partial void OnLeagueName_WebDisplayChanging(global::System.String value);
        partial void OnLeagueName_WebDisplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChampionTitle
        {
            get
            {
                return _ChampionTitle;
            }
            set
            {
                OnChampionTitleChanging(value);
                ReportPropertyChanging("ChampionTitle");
                _ChampionTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChampionTitle");
                OnChampionTitleChanged();
            }
        }
        private global::System.String _ChampionTitle;
        partial void OnChampionTitleChanging(global::System.String value);
        partial void OnChampionTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TotalTeams
        {
            get
            {
                return _TotalTeams;
            }
            set
            {
                OnTotalTeamsChanging(value);
                ReportPropertyChanging("TotalTeams");
                _TotalTeams = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalTeams");
                OnTotalTeamsChanged();
            }
        }
        private Nullable<global::System.Int64> _TotalTeams;
        partial void OnTotalTeamsChanging(Nullable<global::System.Int64> value);
        partial void OnTotalTeamsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TotalPlayers
        {
            get
            {
                return _TotalPlayers;
            }
            set
            {
                OnTotalPlayersChanging(value);
                ReportPropertyChanging("TotalPlayers");
                _TotalPlayers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPlayers");
                OnTotalPlayersChanged();
            }
        }
        private Nullable<global::System.Int64> _TotalPlayers;
        partial void OnTotalPlayersChanging(Nullable<global::System.Int64> value);
        partial void OnTotalPlayersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TopEvent
        {
            get
            {
                return _TopEvent;
            }
            set
            {
                OnTopEventChanging(value);
                ReportPropertyChanging("TopEvent");
                _TopEvent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopEvent");
                OnTopEventChanged();
            }
        }
        private Nullable<global::System.Boolean> _TopEvent;
        partial void OnTopEventChanging(Nullable<global::System.Boolean> value);
        partial void OnTopEventChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="SoccerMatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SoccerMatch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SoccerMatch object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="homeTeam">Initial value of the HomeTeam property.</param>
        /// <param name="awayTeam">Initial value of the AwayTeam property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static SoccerMatch CreateSoccerMatch(global::System.Guid id, global::System.String homeTeam, global::System.String awayTeam, global::System.Int64 leagueID, global::System.Int32 sportID, global::System.Int32 countryID)
        {
            SoccerMatch soccerMatch = new SoccerMatch();
            soccerMatch.ID = id;
            soccerMatch.HomeTeam = homeTeam;
            soccerMatch.AwayTeam = awayTeam;
            soccerMatch.LeagueID = leagueID;
            soccerMatch.SportID = sportID;
            soccerMatch.CountryID = countryID;
            return soccerMatch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> HomeTeam_1stHalfGoals
        {
            get
            {
                return _HomeTeam_1stHalfGoals;
            }
            set
            {
                OnHomeTeam_1stHalfGoalsChanging(value);
                ReportPropertyChanging("HomeTeam_1stHalfGoals");
                _HomeTeam_1stHalfGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeTeam_1stHalfGoals");
                OnHomeTeam_1stHalfGoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _HomeTeam_1stHalfGoals;
        partial void OnHomeTeam_1stHalfGoalsChanging(Nullable<global::System.Int16> value);
        partial void OnHomeTeam_1stHalfGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> AwayTeam_1stHalfGoals
        {
            get
            {
                return _AwayTeam_1stHalfGoals;
            }
            set
            {
                OnAwayTeam_1stHalfGoalsChanging(value);
                ReportPropertyChanging("AwayTeam_1stHalfGoals");
                _AwayTeam_1stHalfGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayTeam_1stHalfGoals");
                OnAwayTeam_1stHalfGoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _AwayTeam_1stHalfGoals;
        partial void OnAwayTeam_1stHalfGoalsChanging(Nullable<global::System.Int16> value);
        partial void OnAwayTeam_1stHalfGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> HomeTeam_2ndHalfGoals
        {
            get
            {
                return _HomeTeam_2ndHalfGoals;
            }
            set
            {
                OnHomeTeam_2ndHalfGoalsChanging(value);
                ReportPropertyChanging("HomeTeam_2ndHalfGoals");
                _HomeTeam_2ndHalfGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeTeam_2ndHalfGoals");
                OnHomeTeam_2ndHalfGoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _HomeTeam_2ndHalfGoals;
        partial void OnHomeTeam_2ndHalfGoalsChanging(Nullable<global::System.Int16> value);
        partial void OnHomeTeam_2ndHalfGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> AwayTeam_2ndHalfGoals
        {
            get
            {
                return _AwayTeam_2ndHalfGoals;
            }
            set
            {
                OnAwayTeam_2ndHalfGoalsChanging(value);
                ReportPropertyChanging("AwayTeam_2ndHalfGoals");
                _AwayTeam_2ndHalfGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayTeam_2ndHalfGoals");
                OnAwayTeam_2ndHalfGoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _AwayTeam_2ndHalfGoals;
        partial void OnAwayTeam_2ndHalfGoalsChanging(Nullable<global::System.Int16> value);
        partial void OnAwayTeam_2ndHalfGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> HomeTeam_ET1Goals
        {
            get
            {
                return _HomeTeam_ET1Goals;
            }
            set
            {
                OnHomeTeam_ET1GoalsChanging(value);
                ReportPropertyChanging("HomeTeam_ET1Goals");
                _HomeTeam_ET1Goals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeTeam_ET1Goals");
                OnHomeTeam_ET1GoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _HomeTeam_ET1Goals;
        partial void OnHomeTeam_ET1GoalsChanging(Nullable<global::System.Int16> value);
        partial void OnHomeTeam_ET1GoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> AwayTeam_ET1Goals
        {
            get
            {
                return _AwayTeam_ET1Goals;
            }
            set
            {
                OnAwayTeam_ET1GoalsChanging(value);
                ReportPropertyChanging("AwayTeam_ET1Goals");
                _AwayTeam_ET1Goals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayTeam_ET1Goals");
                OnAwayTeam_ET1GoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _AwayTeam_ET1Goals;
        partial void OnAwayTeam_ET1GoalsChanging(Nullable<global::System.Int16> value);
        partial void OnAwayTeam_ET1GoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> HomeTeam_FTGoals
        {
            get
            {
                return _HomeTeam_FTGoals;
            }
            set
            {
                OnHomeTeam_FTGoalsChanging(value);
                ReportPropertyChanging("HomeTeam_FTGoals");
                _HomeTeam_FTGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeTeam_FTGoals");
                OnHomeTeam_FTGoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _HomeTeam_FTGoals;
        partial void OnHomeTeam_FTGoalsChanging(Nullable<global::System.Int16> value);
        partial void OnHomeTeam_FTGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> AwayTeam_FTGoals
        {
            get
            {
                return _AwayTeam_FTGoals;
            }
            set
            {
                OnAwayTeam_FTGoalsChanging(value);
                ReportPropertyChanging("AwayTeam_FTGoals");
                _AwayTeam_FTGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayTeam_FTGoals");
                OnAwayTeam_FTGoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _AwayTeam_FTGoals;
        partial void OnAwayTeam_FTGoalsChanging(Nullable<global::System.Int16> value);
        partial void OnAwayTeam_FTGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> HomeTeam_PKGoals
        {
            get
            {
                return _HomeTeam_PKGoals;
            }
            set
            {
                OnHomeTeam_PKGoalsChanging(value);
                ReportPropertyChanging("HomeTeam_PKGoals");
                _HomeTeam_PKGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeTeam_PKGoals");
                OnHomeTeam_PKGoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _HomeTeam_PKGoals;
        partial void OnHomeTeam_PKGoalsChanging(Nullable<global::System.Int16> value);
        partial void OnHomeTeam_PKGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> AwayTeam_PKGoals
        {
            get
            {
                return _AwayTeam_PKGoals;
            }
            set
            {
                OnAwayTeam_PKGoalsChanging(value);
                ReportPropertyChanging("AwayTeam_PKGoals");
                _AwayTeam_PKGoals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayTeam_PKGoals");
                OnAwayTeam_PKGoalsChanged();
            }
        }
        private Nullable<global::System.Int16> _AwayTeam_PKGoals;
        partial void OnAwayTeam_PKGoalsChanging(Nullable<global::System.Int16> value);
        partial void OnAwayTeam_PKGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WinningTeam
        {
            get
            {
                return _WinningTeam;
            }
            set
            {
                OnWinningTeamChanging(value);
                ReportPropertyChanging("WinningTeam");
                _WinningTeam = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WinningTeam");
                OnWinningTeamChanged();
            }
        }
        private global::System.String _WinningTeam;
        partial void OnWinningTeamChanging(global::System.String value);
        partial void OnWinningTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomeTeam
        {
            get
            {
                return _HomeTeam;
            }
            set
            {
                OnHomeTeamChanging(value);
                ReportPropertyChanging("HomeTeam");
                _HomeTeam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HomeTeam");
                OnHomeTeamChanged();
            }
        }
        private global::System.String _HomeTeam;
        partial void OnHomeTeamChanging(global::System.String value);
        partial void OnHomeTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AwayTeam
        {
            get
            {
                return _AwayTeam;
            }
            set
            {
                OnAwayTeamChanging(value);
                ReportPropertyChanging("AwayTeam");
                _AwayTeam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AwayTeam");
                OnAwayTeamChanged();
            }
        }
        private global::System.String _AwayTeam;
        partial void OnAwayTeamChanging(global::System.String value);
        partial void OnAwayTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Soccer_MatchStats_XMLFile
        {
            get
            {
                return _Soccer_MatchStats_XMLFile;
            }
            set
            {
                OnSoccer_MatchStats_XMLFileChanging(value);
                ReportPropertyChanging("Soccer_MatchStats_XMLFile");
                _Soccer_MatchStats_XMLFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Soccer_MatchStats_XMLFile");
                OnSoccer_MatchStats_XMLFileChanged();
            }
        }
        private global::System.String _Soccer_MatchStats_XMLFile;
        partial void OnSoccer_MatchStats_XMLFileChanging(global::System.String value);
        partial void OnSoccer_MatchStats_XMLFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MatchStatus
        {
            get
            {
                return _MatchStatus;
            }
            set
            {
                OnMatchStatusChanging(value);
                ReportPropertyChanging("MatchStatus");
                _MatchStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MatchStatus");
                OnMatchStatusChanged();
            }
        }
        private global::System.String _MatchStatus;
        partial void OnMatchStatusChanging(global::System.String value);
        partial void OnMatchStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int64 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int64 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDateTime;
        partial void OnStartDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Updated;
        partial void OnUpdatedChanging(Nullable<global::System.Boolean> value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                OnUpdateTimeChanging(value);
                ReportPropertyChanging("UpdateTime");
                _UpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateTime");
                OnUpdateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateTime;
        partial void OnUpdateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Settled
        {
            get
            {
                return _Settled;
            }
            set
            {
                OnSettledChanging(value);
                ReportPropertyChanging("Settled");
                _Settled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Settled");
                OnSettledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Settled;
        partial void OnSettledChanging(Nullable<global::System.Boolean> value);
        partial void OnSettledChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Sport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sport object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sportName">Initial value of the SportName property.</param>
        public static Sport CreateSport(global::System.Int32 id, global::System.String sportName)
        {
            Sport sport = new Sport();
            sport.ID = id;
            sport.SportName = sportName;
            return sport;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportName
        {
            get
            {
                return _SportName;
            }
            set
            {
                OnSportNameChanging(value);
                ReportPropertyChanging("SportName");
                _SportName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportName");
                OnSportNameChanged();
            }
        }
        private global::System.String _SportName;
        partial void OnSportNameChanging(global::System.String value);
        partial void OnSportNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportName_Goalserve
        {
            get
            {
                return _SportName_Goalserve;
            }
            set
            {
                OnSportName_GoalserveChanging(value);
                ReportPropertyChanging("SportName_Goalserve");
                _SportName_Goalserve = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SportName_Goalserve");
                OnSportName_GoalserveChanged();
            }
        }
        private global::System.String _SportName_Goalserve;
        partial void OnSportName_GoalserveChanging(global::System.String value);
        partial void OnSportName_GoalserveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportName_Pinacle
        {
            get
            {
                return _SportName_Pinacle;
            }
            set
            {
                OnSportName_PinacleChanging(value);
                ReportPropertyChanging("SportName_Pinacle");
                _SportName_Pinacle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SportName_Pinacle");
                OnSportName_PinacleChanged();
            }
        }
        private global::System.String _SportName_Pinacle;
        partial void OnSportName_PinacleChanging(global::System.String value);
        partial void OnSportName_PinacleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportName_Betclick
        {
            get
            {
                return _SportName_Betclick;
            }
            set
            {
                OnSportName_BetclickChanging(value);
                ReportPropertyChanging("SportName_Betclick");
                _SportName_Betclick = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SportName_Betclick");
                OnSportName_BetclickChanged();
            }
        }
        private global::System.String _SportName_Betclick;
        partial void OnSportName_BetclickChanging(global::System.String value);
        partial void OnSportName_BetclickChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="SportCountry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportCountry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SportCountry object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="goalserve_OddsFeed">Initial value of the Goalserve_OddsFeed property.</param>
        /// <param name="goalserve_LivescoreFeed">Initial value of the Goalserve_LivescoreFeed property.</param>
        /// <param name="international">Initial value of the International property.</param>
        public static SportCountry CreateSportCountry(global::System.Int64 id, global::System.Int32 sportID, global::System.String country, global::System.String goalserve_OddsFeed, global::System.String goalserve_LivescoreFeed, global::System.Boolean international)
        {
            SportCountry sportCountry = new SportCountry();
            sportCountry.ID = id;
            sportCountry.SportID = sportID;
            sportCountry.Country = country;
            sportCountry.Goalserve_OddsFeed = goalserve_OddsFeed;
            sportCountry.Goalserve_LivescoreFeed = goalserve_LivescoreFeed;
            sportCountry.International = international;
            return sportCountry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                if (_SportID != value)
                {
                    OnSportIDChanging(value);
                    ReportPropertyChanging("SportID");
                    _SportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportID");
                    OnSportIDChanged();
                }
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Goalserve_OddsFeed
        {
            get
            {
                return _Goalserve_OddsFeed;
            }
            set
            {
                OnGoalserve_OddsFeedChanging(value);
                ReportPropertyChanging("Goalserve_OddsFeed");
                _Goalserve_OddsFeed = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Goalserve_OddsFeed");
                OnGoalserve_OddsFeedChanged();
            }
        }
        private global::System.String _Goalserve_OddsFeed;
        partial void OnGoalserve_OddsFeedChanging(global::System.String value);
        partial void OnGoalserve_OddsFeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Goalserve_LivescoreFeed
        {
            get
            {
                return _Goalserve_LivescoreFeed;
            }
            set
            {
                OnGoalserve_LivescoreFeedChanging(value);
                ReportPropertyChanging("Goalserve_LivescoreFeed");
                _Goalserve_LivescoreFeed = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Goalserve_LivescoreFeed");
                OnGoalserve_LivescoreFeedChanged();
            }
        }
        private global::System.String _Goalserve_LivescoreFeed;
        partial void OnGoalserve_LivescoreFeedChanging(global::System.String value);
        partial void OnGoalserve_LivescoreFeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean International
        {
            get
            {
                return _International;
            }
            set
            {
                OnInternationalChanging(value);
                ReportPropertyChanging("International");
                _International = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("International");
                OnInternationalChanged();
            }
        }
        private global::System.Boolean _International;
        partial void OnInternationalChanging(global::System.Boolean value);
        partial void OnInternationalChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="SportLeague")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportLeague : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SportLeague object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="leagueName">Initial value of the LeagueName property.</param>
        public static SportLeague CreateSportLeague(global::System.Int64 id, global::System.Int32 sportID, global::System.Int32 countryID, global::System.String leagueName)
        {
            SportLeague sportLeague = new SportLeague();
            sportLeague.ID = id;
            sportLeague.SportID = sportID;
            sportLeague.CountryID = countryID;
            sportLeague.LeagueName = leagueName;
            return sportLeague;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                if (_SportID != value)
                {
                    OnSportIDChanging(value);
                    ReportPropertyChanging("SportID");
                    _SportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportID");
                    OnSportIDChanged();
                }
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeagueName
        {
            get
            {
                return _LeagueName;
            }
            set
            {
                OnLeagueNameChanging(value);
                ReportPropertyChanging("LeagueName");
                _LeagueName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LeagueName");
                OnLeagueNameChanged();
            }
        }
        private global::System.String _LeagueName;
        partial void OnLeagueNameChanging(global::System.String value);
        partial void OnLeagueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TopEvent
        {
            get
            {
                return _TopEvent;
            }
            set
            {
                OnTopEventChanging(value);
                ReportPropertyChanging("TopEvent");
                _TopEvent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopEvent");
                OnTopEventChanged();
            }
        }
        private Nullable<global::System.Boolean> _TopEvent;
        partial void OnTopEventChanging(Nullable<global::System.Boolean> value);
        partial void OnTopEventChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Sports_AsianHandicap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sports_AsianHandicap : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sports_AsianHandicap object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="handicap">Initial value of the Handicap property.</param>
        /// <param name="homePrice">Initial value of the HomePrice property.</param>
        /// <param name="awayPrice">Initial value of the AwayPrice property.</param>
        public static Sports_AsianHandicap CreateSports_AsianHandicap(global::System.Guid id, global::System.String matchID, global::System.Int32 leagueID, global::System.Int32 countryID, global::System.Int32 sportID, global::System.String handicap, global::System.Decimal homePrice, global::System.Decimal awayPrice)
        {
            Sports_AsianHandicap sports_AsianHandicap = new Sports_AsianHandicap();
            sports_AsianHandicap.ID = id;
            sports_AsianHandicap.MatchID = matchID;
            sports_AsianHandicap.LeagueID = leagueID;
            sports_AsianHandicap.CountryID = countryID;
            sports_AsianHandicap.SportID = sportID;
            sports_AsianHandicap.Handicap = handicap;
            sports_AsianHandicap.HomePrice = homePrice;
            sports_AsianHandicap.AwayPrice = awayPrice;
            return sports_AsianHandicap;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Handicap
        {
            get
            {
                return _Handicap;
            }
            set
            {
                OnHandicapChanging(value);
                ReportPropertyChanging("Handicap");
                _Handicap = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Handicap");
                OnHandicapChanged();
            }
        }
        private global::System.String _Handicap;
        partial void OnHandicapChanging(global::System.String value);
        partial void OnHandicapChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HomePrice
        {
            get
            {
                return _HomePrice;
            }
            set
            {
                OnHomePriceChanging(value);
                ReportPropertyChanging("HomePrice");
                _HomePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomePrice");
                OnHomePriceChanged();
            }
        }
        private global::System.Decimal _HomePrice;
        partial void OnHomePriceChanging(global::System.Decimal value);
        partial void OnHomePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AwayPrice
        {
            get
            {
                return _AwayPrice;
            }
            set
            {
                OnAwayPriceChanging(value);
                ReportPropertyChanging("AwayPrice");
                _AwayPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayPrice");
                OnAwayPriceChanged();
            }
        }
        private global::System.Decimal _AwayPrice;
        partial void OnAwayPriceChanging(global::System.Decimal value);
        partial void OnAwayPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdated;
        partial void OnLastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InPlay
        {
            get
            {
                return _InPlay;
            }
            set
            {
                OnInPlayChanging(value);
                ReportPropertyChanging("InPlay");
                _InPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InPlay");
                OnInPlayChanged();
            }
        }
        private Nullable<global::System.Boolean> _InPlay;
        partial void OnInPlayChanging(Nullable<global::System.Boolean> value);
        partial void OnInPlayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int16> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int16> value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Entrants
        {
            get
            {
                return _Entrants;
            }
            set
            {
                OnEntrantsChanging(value);
                ReportPropertyChanging("Entrants");
                _Entrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entrants");
                OnEntrantsChanged();
            }
        }
        private Nullable<global::System.Int16> _Entrants;
        partial void OnEntrantsChanging(Nullable<global::System.Int16> value);
        partial void OnEntrantsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Sports_MatchedBets")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sports_MatchedBets : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sports_MatchedBets object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="backBetID">Initial value of the BackBetID property.</param>
        /// <param name="layBetID">Initial value of the LayBetID property.</param>
        /// <param name="matchedPrice">Initial value of the MatchedPrice property.</param>
        /// <param name="matchedStake">Initial value of the MatchedStake property.</param>
        /// <param name="commissionCharged">Initial value of the CommissionCharged property.</param>
        /// <param name="matchedTime">Initial value of the MatchedTime property.</param>
        public static Sports_MatchedBets CreateSports_MatchedBets(global::System.Guid id, global::System.String matchID, global::System.Int32 leagueID, global::System.Int32 countryID, global::System.Int32 sportID, global::System.Int64 backBetID, global::System.Int64 layBetID, global::System.Decimal matchedPrice, global::System.Decimal matchedStake, global::System.Decimal commissionCharged, global::System.Decimal matchedTime)
        {
            Sports_MatchedBets sports_MatchedBets = new Sports_MatchedBets();
            sports_MatchedBets.ID = id;
            sports_MatchedBets.MatchID = matchID;
            sports_MatchedBets.LeagueID = leagueID;
            sports_MatchedBets.CountryID = countryID;
            sports_MatchedBets.SportID = sportID;
            sports_MatchedBets.BackBetID = backBetID;
            sports_MatchedBets.LayBetID = layBetID;
            sports_MatchedBets.MatchedPrice = matchedPrice;
            sports_MatchedBets.MatchedStake = matchedStake;
            sports_MatchedBets.CommissionCharged = commissionCharged;
            sports_MatchedBets.MatchedTime = matchedTime;
            return sports_MatchedBets;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BackBetID
        {
            get
            {
                return _BackBetID;
            }
            set
            {
                OnBackBetIDChanging(value);
                ReportPropertyChanging("BackBetID");
                _BackBetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BackBetID");
                OnBackBetIDChanged();
            }
        }
        private global::System.Int64 _BackBetID;
        partial void OnBackBetIDChanging(global::System.Int64 value);
        partial void OnBackBetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LayBetID
        {
            get
            {
                return _LayBetID;
            }
            set
            {
                OnLayBetIDChanging(value);
                ReportPropertyChanging("LayBetID");
                _LayBetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LayBetID");
                OnLayBetIDChanged();
            }
        }
        private global::System.Int64 _LayBetID;
        partial void OnLayBetIDChanging(global::System.Int64 value);
        partial void OnLayBetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MatchedPrice
        {
            get
            {
                return _MatchedPrice;
            }
            set
            {
                OnMatchedPriceChanging(value);
                ReportPropertyChanging("MatchedPrice");
                _MatchedPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MatchedPrice");
                OnMatchedPriceChanged();
            }
        }
        private global::System.Decimal _MatchedPrice;
        partial void OnMatchedPriceChanging(global::System.Decimal value);
        partial void OnMatchedPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MatchedStake
        {
            get
            {
                return _MatchedStake;
            }
            set
            {
                OnMatchedStakeChanging(value);
                ReportPropertyChanging("MatchedStake");
                _MatchedStake = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MatchedStake");
                OnMatchedStakeChanged();
            }
        }
        private global::System.Decimal _MatchedStake;
        partial void OnMatchedStakeChanging(global::System.Decimal value);
        partial void OnMatchedStakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CommissionCharged
        {
            get
            {
                return _CommissionCharged;
            }
            set
            {
                OnCommissionChargedChanging(value);
                ReportPropertyChanging("CommissionCharged");
                _CommissionCharged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionCharged");
                OnCommissionChargedChanged();
            }
        }
        private global::System.Decimal _CommissionCharged;
        partial void OnCommissionChargedChanging(global::System.Decimal value);
        partial void OnCommissionChargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MatchedTime
        {
            get
            {
                return _MatchedTime;
            }
            set
            {
                OnMatchedTimeChanging(value);
                ReportPropertyChanging("MatchedTime");
                _MatchedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MatchedTime");
                OnMatchedTimeChanged();
            }
        }
        private global::System.Decimal _MatchedTime;
        partial void OnMatchedTimeChanging(global::System.Decimal value);
        partial void OnMatchedTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Sports_MoneyLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sports_MoneyLine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sports_MoneyLine object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        public static Sports_MoneyLine CreateSports_MoneyLine(global::System.Guid id, global::System.String matchID, global::System.Int32 leagueID, global::System.Int32 countryID, global::System.Int32 sportID)
        {
            Sports_MoneyLine sports_MoneyLine = new Sports_MoneyLine();
            sports_MoneyLine.ID = id;
            sports_MoneyLine.MatchID = matchID;
            sports_MoneyLine.LeagueID = leagueID;
            sports_MoneyLine.CountryID = countryID;
            sports_MoneyLine.SportID = sportID;
            return sports_MoneyLine;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HomePrice
        {
            get
            {
                return _HomePrice;
            }
            set
            {
                OnHomePriceChanging(value);
                ReportPropertyChanging("HomePrice");
                _HomePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomePrice");
                OnHomePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _HomePrice;
        partial void OnHomePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnHomePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AwayPrice
        {
            get
            {
                return _AwayPrice;
            }
            set
            {
                OnAwayPriceChanging(value);
                ReportPropertyChanging("AwayPrice");
                _AwayPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwayPrice");
                OnAwayPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _AwayPrice;
        partial void OnAwayPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnAwayPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DrawPrice
        {
            get
            {
                return _DrawPrice;
            }
            set
            {
                OnDrawPriceChanging(value);
                ReportPropertyChanging("DrawPrice");
                _DrawPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrawPrice");
                OnDrawPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _DrawPrice;
        partial void OnDrawPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnDrawPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdated;
        partial void OnLastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InPlay
        {
            get
            {
                return _InPlay;
            }
            set
            {
                OnInPlayChanging(value);
                ReportPropertyChanging("InPlay");
                _InPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InPlay");
                OnInPlayChanged();
            }
        }
        private Nullable<global::System.Boolean> _InPlay;
        partial void OnInPlayChanging(Nullable<global::System.Boolean> value);
        partial void OnInPlayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.String _Period;
        partial void OnPeriodChanging(global::System.String value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Entrants
        {
            get
            {
                return _Entrants;
            }
            set
            {
                OnEntrantsChanging(value);
                ReportPropertyChanging("Entrants");
                _Entrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entrants");
                OnEntrantsChanged();
            }
        }
        private Nullable<global::System.Int16> _Entrants;
        partial void OnEntrantsChanging(Nullable<global::System.Int16> value);
        partial void OnEntrantsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Sports_Outright")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sports_Outright : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sports_Outright object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="outRightWinner">Initial value of the OutRightWinner property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="entrants">Initial value of the Entrants property.</param>
        public static Sports_Outright CreateSports_Outright(global::System.Int64 id, global::System.Int64 matchID, global::System.String outRightWinner, global::System.Decimal price, global::System.Int16 period, global::System.Int16 entrants)
        {
            Sports_Outright sports_Outright = new Sports_Outright();
            sports_Outright.ID = id;
            sports_Outright.MatchID = matchID;
            sports_Outright.OutRightWinner = outRightWinner;
            sports_Outright.Price = price;
            sports_Outright.Period = period;
            sports_Outright.Entrants = entrants;
            return sports_Outright;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.Int64 _MatchID;
        partial void OnMatchIDChanging(global::System.Int64 value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OutRightWinner
        {
            get
            {
                return _OutRightWinner;
            }
            set
            {
                OnOutRightWinnerChanging(value);
                ReportPropertyChanging("OutRightWinner");
                _OutRightWinner = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OutRightWinner");
                OnOutRightWinnerChanged();
            }
        }
        private global::System.String _OutRightWinner;
        partial void OnOutRightWinnerChanging(global::System.String value);
        partial void OnOutRightWinnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdated;
        partial void OnLastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.Int16 _Period;
        partial void OnPeriodChanging(global::System.Int16 value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Entrants
        {
            get
            {
                return _Entrants;
            }
            set
            {
                OnEntrantsChanging(value);
                ReportPropertyChanging("Entrants");
                _Entrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entrants");
                OnEntrantsChanged();
            }
        }
        private global::System.Int16 _Entrants;
        partial void OnEntrantsChanging(global::System.Int16 value);
        partial void OnEntrantsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Sports_TotalOU")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sports_TotalOU : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sports_TotalOU object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="inPlay">Initial value of the InPlay property.</param>
        /// <param name="marketCloseTime">Initial value of the MarketCloseTime property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="entrants">Initial value of the Entrants property.</param>
        public static Sports_TotalOU CreateSports_TotalOU(global::System.Guid id, global::System.String matchID, global::System.Int32 leagueID, global::System.Int32 countryID, global::System.DateTime lastUpdated, global::System.Boolean inPlay, global::System.DateTime marketCloseTime, global::System.Int16 period, global::System.Int16 entrants)
        {
            Sports_TotalOU sports_TotalOU = new Sports_TotalOU();
            sports_TotalOU.ID = id;
            sports_TotalOU.MatchID = matchID;
            sports_TotalOU.LeagueID = leagueID;
            sports_TotalOU.CountryID = countryID;
            sports_TotalOU.LastUpdated = lastUpdated;
            sports_TotalOU.InPlay = inPlay;
            sports_TotalOU.MarketCloseTime = marketCloseTime;
            sports_TotalOU.Period = period;
            sports_TotalOU.Entrants = entrants;
            return sports_TotalOU;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.String _MatchID;
        partial void OnMatchIDChanging(global::System.String value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SportID;
        partial void OnSportIDChanging(Nullable<global::System.Int32> value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnderOver
        {
            get
            {
                return _UnderOver;
            }
            set
            {
                OnUnderOverChanging(value);
                ReportPropertyChanging("UnderOver");
                _UnderOver = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnderOver");
                OnUnderOverChanged();
            }
        }
        private global::System.String _UnderOver;
        partial void OnUnderOverChanging(global::System.String value);
        partial void OnUnderOverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OverPrice
        {
            get
            {
                return _OverPrice;
            }
            set
            {
                OnOverPriceChanging(value);
                ReportPropertyChanging("OverPrice");
                _OverPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverPrice");
                OnOverPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _OverPrice;
        partial void OnOverPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnOverPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnderPrice
        {
            get
            {
                return _UnderPrice;
            }
            set
            {
                OnUnderPriceChanging(value);
                ReportPropertyChanging("UnderPrice");
                _UnderPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnderPrice");
                OnUnderPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnderPrice;
        partial void OnUnderPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnUnderPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean InPlay
        {
            get
            {
                return _InPlay;
            }
            set
            {
                OnInPlayChanging(value);
                ReportPropertyChanging("InPlay");
                _InPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InPlay");
                OnInPlayChanged();
            }
        }
        private global::System.Boolean _InPlay;
        partial void OnInPlayChanging(global::System.Boolean value);
        partial void OnInPlayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private global::System.DateTime _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(global::System.DateTime value);
        partial void OnMarketCloseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.Int16 _Period;
        partial void OnPeriodChanging(global::System.Int16 value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Entrants
        {
            get
            {
                return _Entrants;
            }
            set
            {
                OnEntrantsChanging(value);
                ReportPropertyChanging("Entrants");
                _Entrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Entrants");
                OnEntrantsChanged();
            }
        }
        private global::System.Int16 _Entrants;
        partial void OnEntrantsChanging(global::System.Int16 value);
        partial void OnEntrantsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="SportsMatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportsMatch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SportsMatch object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="matchName">Initial value of the MatchName property.</param>
        /// <param name="startDateTime">Initial value of the StartDateTime property.</param>
        /// <param name="homeTeam">Initial value of the HomeTeam property.</param>
        /// <param name="awayTeam">Initial value of the AwayTeam property.</param>
        /// <param name="leagueID">Initial value of the LeagueID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static SportsMatch CreateSportsMatch(global::System.Guid id, global::System.String matchName, global::System.DateTime startDateTime, global::System.String homeTeam, global::System.String awayTeam, global::System.Int32 leagueID, global::System.Int32 sportID, global::System.Int32 countryID)
        {
            SportsMatch sportsMatch = new SportsMatch();
            sportsMatch.ID = id;
            sportsMatch.MatchName = matchName;
            sportsMatch.StartDateTime = startDateTime;
            sportsMatch.HomeTeam = homeTeam;
            sportsMatch.AwayTeam = awayTeam;
            sportsMatch.LeagueID = leagueID;
            sportsMatch.SportID = sportID;
            sportsMatch.CountryID = countryID;
            return sportsMatch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchName
        {
            get
            {
                return _MatchName;
            }
            set
            {
                OnMatchNameChanging(value);
                ReportPropertyChanging("MatchName");
                _MatchName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchName");
                OnMatchNameChanged();
            }
        }
        private global::System.String _MatchName;
        partial void OnMatchNameChanging(global::System.String value);
        partial void OnMatchNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomeTeam
        {
            get
            {
                return _HomeTeam;
            }
            set
            {
                OnHomeTeamChanging(value);
                ReportPropertyChanging("HomeTeam");
                _HomeTeam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HomeTeam");
                OnHomeTeamChanged();
            }
        }
        private global::System.String _HomeTeam;
        partial void OnHomeTeamChanging(global::System.String value);
        partial void OnHomeTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AwayTeam
        {
            get
            {
                return _AwayTeam;
            }
            set
            {
                OnAwayTeamChanging(value);
                ReportPropertyChanging("AwayTeam");
                _AwayTeam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AwayTeam");
                OnAwayTeamChanged();
            }
        }
        private global::System.String _AwayTeam;
        partial void OnAwayTeamChanging(global::System.String value);
        partial void OnAwayTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Set1Score
        {
            get
            {
                return _Set1Score;
            }
            set
            {
                OnSet1ScoreChanging(value);
                ReportPropertyChanging("Set1Score");
                _Set1Score = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Set1Score");
                OnSet1ScoreChanged();
            }
        }
        private global::System.String _Set1Score;
        partial void OnSet1ScoreChanging(global::System.String value);
        partial void OnSet1ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Set2Score
        {
            get
            {
                return _Set2Score;
            }
            set
            {
                OnSet2ScoreChanging(value);
                ReportPropertyChanging("Set2Score");
                _Set2Score = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Set2Score");
                OnSet2ScoreChanged();
            }
        }
        private global::System.String _Set2Score;
        partial void OnSet2ScoreChanging(global::System.String value);
        partial void OnSet2ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Set3Score
        {
            get
            {
                return _Set3Score;
            }
            set
            {
                OnSet3ScoreChanging(value);
                ReportPropertyChanging("Set3Score");
                _Set3Score = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Set3Score");
                OnSet3ScoreChanged();
            }
        }
        private global::System.String _Set3Score;
        partial void OnSet3ScoreChanging(global::System.String value);
        partial void OnSet3ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Set4Score
        {
            get
            {
                return _Set4Score;
            }
            set
            {
                OnSet4ScoreChanging(value);
                ReportPropertyChanging("Set4Score");
                _Set4Score = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Set4Score");
                OnSet4ScoreChanged();
            }
        }
        private global::System.String _Set4Score;
        partial void OnSet4ScoreChanging(global::System.String value);
        partial void OnSet4ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Set5Score
        {
            get
            {
                return _Set5Score;
            }
            set
            {
                OnSet5ScoreChanging(value);
                ReportPropertyChanging("Set5Score");
                _Set5Score = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Set5Score");
                OnSet5ScoreChanged();
            }
        }
        private global::System.String _Set5Score;
        partial void OnSet5ScoreChanging(global::System.String value);
        partial void OnSet5ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Set7Score
        {
            get
            {
                return _Set7Score;
            }
            set
            {
                OnSet7ScoreChanging(value);
                ReportPropertyChanging("Set7Score");
                _Set7Score = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Set7Score");
                OnSet7ScoreChanged();
            }
        }
        private global::System.String _Set7Score;
        partial void OnSet7ScoreChanging(global::System.String value);
        partial void OnSet7ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Set8Score
        {
            get
            {
                return _Set8Score;
            }
            set
            {
                OnSet8ScoreChanging(value);
                ReportPropertyChanging("Set8Score");
                _Set8Score = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Set8Score");
                OnSet8ScoreChanged();
            }
        }
        private global::System.String _Set8Score;
        partial void OnSet8ScoreChanging(global::System.String value);
        partial void OnSet8ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Set9Score
        {
            get
            {
                return _Set9Score;
            }
            set
            {
                OnSet9ScoreChanging(value);
                ReportPropertyChanging("Set9Score");
                _Set9Score = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Set9Score");
                OnSet9ScoreChanged();
            }
        }
        private global::System.String _Set9Score;
        partial void OnSet9ScoreChanging(global::System.String value);
        partial void OnSet9ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExtraTimeScore
        {
            get
            {
                return _ExtraTimeScore;
            }
            set
            {
                OnExtraTimeScoreChanging(value);
                ReportPropertyChanging("ExtraTimeScore");
                _ExtraTimeScore = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExtraTimeScore");
                OnExtraTimeScoreChanged();
            }
        }
        private global::System.String _ExtraTimeScore;
        partial void OnExtraTimeScoreChanging(global::System.String value);
        partial void OnExtraTimeScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PKScore
        {
            get
            {
                return _PKScore;
            }
            set
            {
                OnPKScoreChanging(value);
                ReportPropertyChanging("PKScore");
                _PKScore = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PKScore");
                OnPKScoreChanged();
            }
        }
        private global::System.String _PKScore;
        partial void OnPKScoreChanging(global::System.String value);
        partial void OnPKScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Winner
        {
            get
            {
                return _Winner;
            }
            set
            {
                OnWinnerChanging(value);
                ReportPropertyChanging("Winner");
                _Winner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Winner");
                OnWinnerChanged();
            }
        }
        private global::System.String _Winner;
        partial void OnWinnerChanging(global::System.String value);
        partial void OnWinnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDraw
        {
            get
            {
                return _IsDraw;
            }
            set
            {
                OnIsDrawChanging(value);
                ReportPropertyChanging("IsDraw");
                _IsDraw = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDraw");
                OnIsDrawChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDraw;
        partial void OnIsDrawChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDrawChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MatchStats_XMLFile
        {
            get
            {
                return _MatchStats_XMLFile;
            }
            set
            {
                OnMatchStats_XMLFileChanging(value);
                ReportPropertyChanging("MatchStats_XMLFile");
                _MatchStats_XMLFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MatchStats_XMLFile");
                OnMatchStats_XMLFileChanged();
            }
        }
        private global::System.String _MatchStats_XMLFile;
        partial void OnMatchStats_XMLFileChanging(global::System.String value);
        partial void OnMatchStats_XMLFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MatchStatus
        {
            get
            {
                return _MatchStatus;
            }
            set
            {
                OnMatchStatusChanging(value);
                ReportPropertyChanging("MatchStatus");
                _MatchStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MatchStatus");
                OnMatchStatusChanged();
            }
        }
        private global::System.String _MatchStatus;
        partial void OnMatchStatusChanging(global::System.String value);
        partial void OnMatchStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private global::System.Int32 _LeagueID;
        partial void OnLeagueIDChanging(global::System.Int32 value);
        partial void OnLeagueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.Int32 _SportID;
        partial void OnSportIDChanging(global::System.Int32 value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Updated;
        partial void OnUpdatedChanging(Nullable<global::System.Boolean> value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                OnUpdateTimeChanging(value);
                ReportPropertyChanging("UpdateTime");
                _UpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateTime");
                OnUpdateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateTime;
        partial void OnUpdateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Settled
        {
            get
            {
                return _Settled;
            }
            set
            {
                OnSettledChanging(value);
                ReportPropertyChanging("Settled");
                _Settled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Settled");
                OnSettledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Settled;
        partial void OnSettledChanging(Nullable<global::System.Boolean> value);
        partial void OnSettledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarketCloseTime
        {
            get
            {
                return _MarketCloseTime;
            }
            set
            {
                OnMarketCloseTimeChanging(value);
                ReportPropertyChanging("MarketCloseTime");
                _MarketCloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketCloseTime");
                OnMarketCloseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarketCloseTime;
        partial void OnMarketCloseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMarketCloseTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Statement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Statement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Statement object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        /// <param name="statementTime">Initial value of the StatementTime property.</param>
        public static Statement CreateStatement(global::System.Int64 id, global::System.Int64 memberId, global::System.DateTime statementTime)
        {
            Statement statement = new Statement();
            statement.ID = id;
            statement.MemberId = memberId;
            statement.StatementTime = statementTime;
            return statement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                OnMemberIdChanging(value);
                ReportPropertyChanging("MemberId");
                _MemberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberId");
                OnMemberIdChanged();
            }
        }
        private global::System.Int64 _MemberId;
        partial void OnMemberIdChanging(global::System.Int64 value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BetId
        {
            get
            {
                return _BetId;
            }
            set
            {
                OnBetIdChanging(value);
                ReportPropertyChanging("BetId");
                _BetId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BetId");
                OnBetIdChanged();
            }
        }
        private global::System.String _BetId;
        partial void OnBetIdChanging(global::System.String value);
        partial void OnBetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StatementTime
        {
            get
            {
                return _StatementTime;
            }
            set
            {
                OnStatementTimeChanging(value);
                ReportPropertyChanging("StatementTime");
                _StatementTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatementTime");
                OnStatementTimeChanged();
            }
        }
        private global::System.DateTime _StatementTime;
        partial void OnStatementTimeChanging(global::System.DateTime value);
        partial void OnStatementTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Selection
        {
            get
            {
                return _Selection;
            }
            set
            {
                OnSelectionChanging(value);
                ReportPropertyChanging("Selection");
                _Selection = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Selection");
                OnSelectionChanged();
            }
        }
        private global::System.String _Selection;
        partial void OnSelectionChanging(global::System.String value);
        partial void OnSelectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> BackOrLay
        {
            get
            {
                return _BackOrLay;
            }
            set
            {
                OnBackOrLayChanging(value);
                ReportPropertyChanging("BackOrLay");
                _BackOrLay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BackOrLay");
                OnBackOrLayChanged();
            }
        }
        private Nullable<global::System.Byte> _BackOrLay;
        partial void OnBackOrLayChanging(Nullable<global::System.Byte> value);
        partial void OnBackOrLayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Stake
        {
            get
            {
                return _Stake;
            }
            set
            {
                OnStakeChanging(value);
                ReportPropertyChanging("Stake");
                _Stake = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stake");
                OnStakeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Stake;
        partial void OnStakeChanging(Nullable<global::System.Decimal> value);
        partial void OnStakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Odds
        {
            get
            {
                return _Odds;
            }
            set
            {
                OnOddsChanging(value);
                ReportPropertyChanging("Odds");
                _Odds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Odds");
                OnOddsChanged();
            }
        }
        private Nullable<global::System.Decimal> _Odds;
        partial void OnOddsChanging(Nullable<global::System.Decimal> value);
        partial void OnOddsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type_Result
        {
            get
            {
                return _Type_Result;
            }
            set
            {
                OnType_ResultChanging(value);
                ReportPropertyChanging("Type_Result");
                _Type_Result = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type_Result");
                OnType_ResultChanged();
            }
        }
        private global::System.String _Type_Result;
        partial void OnType_ResultChanging(global::System.String value);
        partial void OnType_ResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossProfit
        {
            get
            {
                return _GrossProfit;
            }
            set
            {
                OnGrossProfitChanging(value);
                ReportPropertyChanging("GrossProfit");
                _GrossProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossProfit");
                OnGrossProfitChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossProfit;
        partial void OnGrossProfitChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossProfitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetProfit
        {
            get
            {
                return _NetProfit;
            }
            set
            {
                OnNetProfitChanging(value);
                ReportPropertyChanging("NetProfit");
                _NetProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetProfit");
                OnNetProfitChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetProfit;
        partial void OnNetProfitChanging(Nullable<global::System.Decimal> value);
        partial void OnNetProfitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Commission
        {
            get
            {
                return _Commission;
            }
            set
            {
                OnCommissionChanging(value);
                ReportPropertyChanging("Commission");
                _Commission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Commission");
                OnCommissionChanged();
            }
        }
        private Nullable<global::System.Decimal> _Commission;
        partial void OnCommissionChanging(Nullable<global::System.Decimal> value);
        partial void OnCommissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AmountDeposit
        {
            get
            {
                return _AmountDeposit;
            }
            set
            {
                OnAmountDepositChanging(value);
                ReportPropertyChanging("AmountDeposit");
                _AmountDeposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountDeposit");
                OnAmountDepositChanged();
            }
        }
        private Nullable<global::System.Decimal> _AmountDeposit;
        partial void OnAmountDepositChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountDepositChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AmountWithdrawal
        {
            get
            {
                return _AmountWithdrawal;
            }
            set
            {
                OnAmountWithdrawalChanging(value);
                ReportPropertyChanging("AmountWithdrawal");
                _AmountWithdrawal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountWithdrawal");
                OnAmountWithdrawalChanged();
            }
        }
        private Nullable<global::System.Decimal> _AmountWithdrawal;
        partial void OnAmountWithdrawalChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountWithdrawalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CardId
        {
            get
            {
                return _CardId;
            }
            set
            {
                OnCardIdChanging(value);
                ReportPropertyChanging("CardId");
                _CardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardId");
                OnCardIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CardId;
        partial void OnCardIdChanging(Nullable<global::System.Int32> value);
        partial void OnCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FeeCharged
        {
            get
            {
                return _FeeCharged;
            }
            set
            {
                OnFeeChargedChanging(value);
                ReportPropertyChanging("FeeCharged");
                _FeeCharged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeeCharged");
                OnFeeChargedChanged();
            }
        }
        private Nullable<global::System.Decimal> _FeeCharged;
        partial void OnFeeChargedChanging(Nullable<global::System.Decimal> value);
        partial void OnFeeChargedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MarketAmountRefund
        {
            get
            {
                return _MarketAmountRefund;
            }
            set
            {
                OnMarketAmountRefundChanging(value);
                ReportPropertyChanging("MarketAmountRefund");
                _MarketAmountRefund = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketAmountRefund");
                OnMarketAmountRefundChanged();
            }
        }
        private Nullable<global::System.Decimal> _MarketAmountRefund;
        partial void OnMarketAmountRefundChanging(Nullable<global::System.Decimal> value);
        partial void OnMarketAmountRefundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisplayId
        {
            get
            {
                return _DisplayId;
            }
            set
            {
                OnDisplayIdChanging(value);
                ReportPropertyChanging("DisplayId");
                _DisplayId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayId");
                OnDisplayIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DisplayId;
        partial void OnDisplayIdChanging(Nullable<global::System.Int32> value);
        partial void OnDisplayIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_Statements_Members", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_Statements_Members", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_Statements_Members", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_Statements_Members", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("BettingExchangeModel.FK_Statements_Members", "Member", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="teamName">Initial value of the TeamName property.</param>
        public static Team CreateTeam(global::System.Int64 id, global::System.String teamName)
        {
            Team team = new Team();
            team.ID = id;
            team.TeamName = teamName;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                OnTeamNameChanging(value);
                ReportPropertyChanging("TeamName");
                _TeamName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TeamName");
                OnTeamNameChanged();
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Coach
        {
            get
            {
                return _Coach;
            }
            set
            {
                OnCoachChanging(value);
                ReportPropertyChanging("Coach");
                _Coach = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Coach");
                OnCoachChanged();
            }
        }
        private global::System.String _Coach;
        partial void OnCoachChanging(global::System.String value);
        partial void OnCoachChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ranking
        {
            get
            {
                return _Ranking;
            }
            set
            {
                OnRankingChanging(value);
                ReportPropertyChanging("Ranking");
                _Ranking = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ranking");
                OnRankingChanged();
            }
        }
        private Nullable<global::System.Int32> _Ranking;
        partial void OnRankingChanging(Nullable<global::System.Int32> value);
        partial void OnRankingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> LeagueID
        {
            get
            {
                return _LeagueID;
            }
            set
            {
                OnLeagueIDChanging(value);
                ReportPropertyChanging("LeagueID");
                _LeagueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueID");
                OnLeagueIDChanged();
            }
        }
        private Nullable<global::System.Int64> _LeagueID;
        partial void OnLeagueIDChanging(Nullable<global::System.Int64> value);
        partial void OnLeagueIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BettingExchangeModel", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transaction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        /// <param name="paymentMenthodID">Initial value of the PaymentMenthodID property.</param>
        public static Transaction CreateTransaction(global::System.Int64 id, global::System.Byte type, global::System.Decimal amount, global::System.Int32 status, global::System.Int64 memberId, global::System.Int64 paymentMenthodID)
        {
            Transaction transaction = new Transaction();
            transaction.ID = id;
            transaction.Type = type;
            transaction.Amount = amount;
            transaction.Status = status;
            transaction.MemberId = memberId;
            transaction.PaymentMenthodID = paymentMenthodID;
            return transaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Byte _Type;
        partial void OnTypeChanging(global::System.Byte value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardId
        {
            get
            {
                return _CardId;
            }
            set
            {
                OnCardIdChanging(value);
                ReportPropertyChanging("CardId");
                _CardId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardId");
                OnCardIdChanged();
            }
        }
        private global::System.String _CardId;
        partial void OnCardIdChanging(global::System.String value);
        partial void OnCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                OnMemberIdChanging(value);
                ReportPropertyChanging("MemberId");
                _MemberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberId");
                OnMemberIdChanged();
            }
        }
        private global::System.Int64 _MemberId;
        partial void OnMemberIdChanging(global::System.Int64 value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PaymentMenthodID
        {
            get
            {
                return _PaymentMenthodID;
            }
            set
            {
                OnPaymentMenthodIDChanging(value);
                ReportPropertyChanging("PaymentMenthodID");
                _PaymentMenthodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentMenthodID");
                OnPaymentMenthodIDChanged();
            }
        }
        private global::System.Int64 _PaymentMenthodID;
        partial void OnPaymentMenthodIDChanging(global::System.Int64 value);
        partial void OnPaymentMenthodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ResponeTranId
        {
            get
            {
                return _ResponeTranId;
            }
            set
            {
                OnResponeTranIdChanging(value);
                ReportPropertyChanging("ResponeTranId");
                _ResponeTranId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponeTranId");
                OnResponeTranIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ResponeTranId;
        partial void OnResponeTranIdChanging(Nullable<global::System.Int64> value);
        partial void OnResponeTranIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemberEmail
        {
            get
            {
                return _MemberEmail;
            }
            set
            {
                OnMemberEmailChanging(value);
                ReportPropertyChanging("MemberEmail");
                _MemberEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemberEmail");
                OnMemberEmailChanged();
            }
        }
        private global::System.String _MemberEmail;
        partial void OnMemberEmailChanging(global::System.String value);
        partial void OnMemberEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MemberIP
        {
            get
            {
                return _MemberIP;
            }
            set
            {
                OnMemberIPChanging(value);
                ReportPropertyChanging("MemberIP");
                _MemberIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MemberIP");
                OnMemberIPChanged();
            }
        }
        private global::System.String _MemberIP;
        partial void OnMemberIPChanging(global::System.String value);
        partial void OnMemberIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddedDate
        {
            get
            {
                return _AddedDate;
            }
            set
            {
                OnAddedDateChanging(value);
                ReportPropertyChanging("AddedDate");
                _AddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedDate");
                OnAddedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddedDate;
        partial void OnAddedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifyDate
        {
            get
            {
                return _ModifyDate;
            }
            set
            {
                OnModifyDateChanging(value);
                ReportPropertyChanging("ModifyDate");
                _ModifyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifyDate");
                OnModifyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifyDate;
        partial void OnModifyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifyDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BettingExchangeModel", "FK_Transactions_Members", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_Transactions_Members", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_Transactions_Members", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("BettingExchangeModel.FK_Transactions_Members", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("BettingExchangeModel.FK_Transactions_Members", "Member", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
