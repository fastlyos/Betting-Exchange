<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Css/datepicker.css")" media="screen" />
<script src="@Url.Content("~/Content/Scripts/GUI/datepicker.js")" type="text/javascript"></script>
<script type="text/javascript" src="@Url.Content("~/Content/Scripts/GUI/lang/en.js")" charset="utf-8"></script>
<script type="text/javascript">
//<![CDATA[

    /*
    A "Reservation Date" example using two datePickers
    --------------------------------------------------

    * Functionality

    1. When the page loads:
    - We clear the value of the two inputs (to clear any values cached by the browser)
    - We set an "onchange" event handler on the startDate input to call the setReservationDates function
    2. When a start date is selected
    - We set the low range of the endDate datePicker to be the start date the user has just selected
    - If the endDate input already has a date stipulated and the date falls before the new start date then we clear the input's value

    * Caveats (aren't there always)

    - This demo has been written for dates that have NOT been split across three inputs

    */

    function makeTwoChars(inp) {
        return String(inp).length < 2 ? "0" + inp : inp;
    }

    function initialiseInputs() {
        // Clear any old values from the inputs (that might be cached by the browser after a page reload)
        document.getElementById("sd").value = "";
        document.getElementById("ed").value = "";

        // Add the onchange event handler to the start date input
        datePickerController.addEvent(document.getElementById("sd"), "change", setReservationDates);
    }

    var initAttempts = 0;

    function setReservationDates(e) {
        // Internet Explorer will not have created the datePickers yet so we poll the datePickerController Object using a setTimeout
        // until they become available (a maximum of ten times in case something has gone horribly wrong)

        try {
            var sd = datePickerController.getDatePicker("sd");
            var ed = datePickerController.getDatePicker("ed");
        } catch (err) {
            if (initAttempts++ < 10) setTimeout("setReservationDates()", 50);
            return;
        }

        // Check the value of the input is a date of the correct format
        var dt = datePickerController.dateFormat(this.value, sd.format.charAt(0) == "m");

        // If the input's value cannot be parsed as a valid date then return
        if (dt == 0) return;

        // At this stage we have a valid YYYYMMDD date

        // Grab the value set within the endDate input and parse it using the dateFormat method
        // N.B: The second parameter to the dateFormat function, if TRUE, tells the function to favour the m-d-y date format
        var edv = datePickerController.dateFormat(document.getElementById("ed").value, ed.format.charAt(0) == "m");

        // Set the low range of the second datePicker to be the date parsed from the first
        ed.setRangeLow(dt);

        // If theres a value already present within the end date input and it's smaller than the start date
        // then clear the end date value
        if (edv < dt) {
            document.getElementById("ed").value = "";
        }
    }

    function removeInputEvents() {
        // Remove the onchange event handler set within the function initialiseInputs
        datePickerController.removeEvent(document.getElementById("sd"), "change", setReservationDates);
    }

    datePickerController.addEvent(window, 'load', initialiseInputs);
    datePickerController.addEvent(window, 'unload', removeInputEvents);

//]]>
</script>
<table width="70%" cellspacing="0" cellpadding="0" border="0">
    <tbody>
        <tr>
            <td width="50px" valign="middle" style="text-align: left" rowspan="2" class="tdPageFilters">
                Date Placed:
            </td>
            <td valign="middle" style="text-align: left" class="tdPageFilters">
                <input type="radio" checked="true" value="Predefined" name="rdoPeriodType" id="rdoPredefined">
                @Html.DropDownList("selPeriod", ViewBag.lstDateSearchType as SelectList, new { @id = "selPeriod", width = "192px", onclick = "Common.SetSelectedRadio('rdoPredefined','rdoCustom')" })                
            </td>
            <td valign="middle" style="text-align: left" rowspan="2" class="tdPageFilters">
                Bet Category:
            </td>
            <td valign="middle" style="text-align: left" rowspan="2" class="tdPageFilters">
                 @Html.DropDownList("selBetCategory", ViewBag.lstSportData as SelectList,"--Select--", new {width="140px" })
            </td>
            <td valign="middle" rowspan="2" class="tdPageFilters">
                <a onclick="ui_doSearch();return false;" href="javascript:void(0)" class="ImgBtn">Show
                    Records</a>
            </td>
            <td valign="middle" rowspan="2" class="tdPageFilters">
                <select onchange="ui_doExcelDownload(this.value)" id="selExport">
                    <option value="">&lt;Export to&gt;</option>
                    <option value="csv">CSV</option>
                    <option value="xls">Excel</option>
                </select>
            </td>
            <td width="1%" rowspan="2" class="tdPageFilters">
                &nbsp;
            </td>
        </tr>
        <tr>
            <td valign="middle" style="text-align: left; background: #DFDFDF; padding: 4px 7px 4px 7px">
                <input type="radio" style="vertical-align: middle" value="Custom" name="rdoPeriodType"
                    id="rdoCustom">
                <p><input type="text" class="w8em format-d-m-y highlight-days-67 range-low-today" name="sd" id="sd" value="" maxlength="10" /></p>
                <p class="lastup"><input type="text" class="w8em format-d-m-y highlight-days-67 range-low-today" name="ed" id="ed" value="" maxlength="10" /></p>
            </td>
        </tr>
    </tbody>
</table>
